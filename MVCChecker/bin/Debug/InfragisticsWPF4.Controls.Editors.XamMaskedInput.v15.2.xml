<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>InfragisticsWPF4.Controls.Editors.XamMaskedInput.v15.2</name>
    </assembly>
    <members>
        <member name="T:Infragistics.Controls.Primitives.CommandsHelper`1">
            <summary>XamMaskedInput によってサポートされる RoutedCommands のリストを提供します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Primitives.CommandsHelper`1.#ctor(Infragistics.Controls.Primitives.CommandsHelper{`0}.CommandWrapper[],Infragistics.Controls.Primitives.CommandsHelper{`0}.CommandDefinition[])">
            <summary>新しい <see cref="T:Infragistics.Controls.Primitives.CommandsHelper`1" /> を初期化します。</summary>
            <param name="commands"><see cref="T:Infragistics.Controls.Primitives.CommandsHelper`1.CommandWrapper" /> インスタンスの配列。</param>
            <param name="minimumRequiredStates">当該のコマンドに関する最低限の要件を規定した定義の配列。</param>
        </member>
        <member name="M:Infragistics.Controls.Primitives.CommandsHelper`1.DoesMinimumStateMatch(`0,System.Int64)">
            <summary>指定したコマンドが最低限の要件を満たしているかどうかを示す null 表現可能なブール値を返します。</summary>
            <param name="commandId">評価対象となるコマンドの ID。</param>
            <param name="controlState">コントロールの現在の状態</param>
            <returns>指定したコマンドに関して (当該のオブジェクトの構成時に) 最低限の要件が規定されていなかった場合は、null が返されます。指定したコマンドに最低限の要件が存在し、かつ、所定の <paramref name="controlState" /> に基づいて当該の要件が満たされていると判断される場合は true が返され、そうでない場合は false が返されます。</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.CommandsHelper`1.DoesMinimumStateMatch(`0,System.Func{System.Int64,System.Int64})">
            <summary>指定したコマンドが最低限の要件を満たしているかどうかを示す null 表現可能なブール値を返します。</summary>
            <param name="commandId">評価対象となるコマンドの ID。</param>
            <param name="getCurrentStates">コマンドの状態を指定すると、指定したコマンドに関して (ヘルパーの構成時に) 規定された最小限の要件に基づいてコントロールの現在の状態を返すメソッド。</param>
            <returns>指定したコマンドに関して (当該のオブジェクトの構成時に) 最低限の要件が規定されていなかった場合は、null が返されます。指定したコマンドに最低限の要件が存在し、かつ、<paramref name="getCurrentStates" /> から返された現在のコントロール状態に基づいて当該の要件が満たされていると判断される場合は true が返され、そうでない場合は false が返されます。</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.CommandsHelper`1.GetMatchingCommands(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.Int64)">
            <summary>キーおよび修飾キーを指定すると、現在のコントロール状態に応じたコマンドの列挙値を返します。</summary>
            <param name="key">評価対象となるキー</param>
            <param name="modifierKeys">修飾キーの現在の状態</param>
            <param name="controlState">コントロールの現在の状態</param>
            <returns>指定した修飾キーおよびコントロール状態について、指定したキーにマップされている各コマンドのコマンド ID を示す列挙値。</returns>
        </member>
        <member name="M:Infragistics.Controls.Primitives.CommandsHelper`1.GetMatchingCommands(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.Func{System.Int64,System.Int64})">
            <summary>キーおよび修飾キーを指定すると、現在のコントロール状態に応じたコマンドの列挙値を返します。</summary>
            <param name="key">評価対象となるキー</param>
            <param name="modifierKeys">修飾キーの現在の状態</param>
            <param name="getCurrentStates">指定したキーおよび修飾キーに一致する各コマンドについて、それぞれの要件に規定されている現在のコントロール状態を返すメソッド。</param>
            <returns>指定した修飾キーおよびコントロール状態について、指定したキーにマップされている各コマンドのコマンド ID を示す列挙値。</returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.MaskedInputCommandId">
            <summary><see cref="T:Infragistics.Controls.Editors.XamMaskedInput" /> コマンドを識別します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputCommandId.NotACommand">
            <summary>動作しません。<b>NotACommand</b> は常に無視されます。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputCommandId.NextCharacter">
            <summary>カレット位置を次の文字に移動するためのコマンド。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputCommandId.NextSection">
            <summary>カレット位置を次のセクションに移動するためのコマンド。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputCommandId.AfterLastCharacter">
            <summary>カレット位置を最後の文字の後に移動するためのコマンド。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputCommandId.SetPivot">
            <summary>現在のカレットの位置でピボットを設定するためのコマンド。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputCommandId.PreviousCharacter">
            <summary>カレット位置を前の文字に移動するためのコマンド。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputCommandId.PreviousSection">
            <summary>カレット位置を前のセクションに移動するためのコマンド。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputCommandId.FirstCharacter">
            <summary>カレット位置を最初の文字に移動するためのコマンド。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputCommandId.SelectSection">
            <summary>現在のセクションのすべての文字を選択するためのコマンド。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputCommandId.SelectAll">
            <summary>すべての文字を選択するためのコマンド。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputCommandId.Delete">
            <summary>選択したテキストを削除するためのコマンド。何も選択されなければ、現在のカレット位置にある文字が削除されます。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputCommandId.Backspace">
            <summary>&apos;Backspace&apos; キー操作を実行するためのコマンド。このコマンドは、選択したテキストを削除します。何も選択されなければ、現在のカレット位置の前の文字が削除されます。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputCommandId.Copy">
            <summary>選択したテキストをコピーするためのコマンド。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputCommandId.Cut">
            <summary>選択したテキストを切り取るためのコマンド。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputCommandId.Paste">
            <summary>クリップボードの内容をエディターに貼り付けるためのコマンド。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputCommandId.Undo">
            <summary>値に行った最後の変更を元に戻すためのコマンド。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputCommandId.Redo">
            <summary>値に行った最後の変更を元に戻すためのコマンド。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputCommandId.ToggleInsertionMode">
            <summary>挿入モードを切り替えるためのコマンド。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputCommandId.SpinUp">
            <summary>セクションの値をスピンアップするためのコマンド。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputCommandId.SpinDown">
            <summary>セクションの値をスピンダウンするためのコマンド。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputCommandId.ToggleDropDown">
            <summary><b>XamDateTimeEditor</b> のドロップダウン状態を切り替えるためのコマンド。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.MaskedInputStates">
            <summary>MaskedInput コントロールのさまざまな状態を表します。特定のコマンドを実行できるかどうかを評価するために使用されます。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputStates.Character">
            <summary>キャレットは、表示文字の右側に位置しています</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputStates.FirstCharacter">
            <summary>キャレットは、先頭の表示文字の右側に位置しています</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputStates.LastCharacter">
            <summary>キャレットは、最後の表示文字の右側に位置しています</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputStates.FirstSection">
            <summary>キャレットは、先頭のセクションに位置しています</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputStates.LastSection">
            <summary>キャレットは、最後のセクションに位置しています</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputStates.FirstCharacterInSection">
            <summary>キャレットは、セクションの先頭文字の右側に位置しています</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputStates.LastCharacterInSection">
            <summary>キャレットは、セクションの最後の文字の右側に位置しています</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputStates.AfterLastCharacter">
            <summary>キャレットは、最後の表示文字の後に位置しています</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputStates.Selected">
            <summary>いくつかのテキストが選択されています</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputStates.Uninitialized">
            <summary>マスクは初期化されていません。また、セクションおよび表示文字が存在しません</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputStates.FirstEditSection">
            <summary>キャレットは先頭の編集セクションに位置しています</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputStates.LastEditSection">
            <summary>キャレットは最後の編集セクションに位置しています</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputStates.NotInEditMode">
            <summary>エディターは編集モードではありません</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputStates.TabBySections">
            <summary>TabNavigation プロパティに従ってセクションごとにタブ移動できるかどうかを示します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputStates.NextSectionFraction">
            <summary>次の編集セクションは小数部です。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputStates.CanSpinDown">
            <summary>現在のセクションはデクリメント可能です。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputStates.CanSpinUp">
            <summary>現在のセクションはインクリメント可能です。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputStates.CanUndo">
            <summary>元に戻すアクションを実行可能です。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputStates.CanRedo">
            <summary>やり直しアクションを実行可能です。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputStates.HasDropDown">
            <summary>関連付けられるドロップダウンがあります</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputStates.IsDropDownOpen">
            <summary>関連付けられたドロップダウンが開かれています</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputStates.IsReadOnly">
          <summary>
            エディターの <see cref="P:Infragistics.Controls.Editors.ValueInput.IsReadOnly"/> が true の状態。
          </summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.Primitives.MaskedInputStates.All">
            <summary>関連付けられたドロップダウンが開かれています</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.MaskedInputCommand">
            <summary><see cref="T:Infragistics.Controls.Editors.XamMaskedInput" /> および派生したエディターを扱うすべてのコマンドのクラス。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.MaskedInputCommand.CanExecute(System.Object)">
            <summary>入力されたオブジェクトでコマンドを実行する可能性があるかどうかを示します。</summary>
            <param name="parameter">コマンドを実行するオブジェクト。</param>
            <returns>オブジェクトがこのコマンドをサポートできる場合は true です。</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.MaskedInputCommand.Execute(System.Object)">
            <summary>コマンドを実行します。</summary>
            <param name="parameter">実行される <see cref="T:Infragistics.Controls.Editors.XamMaskedInput" /> オブジェクト。</param>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.MaskedInputCommand.CommandId">
            <summary>関連するコマンド ID を取得します。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.MaskedInputCommandSource">
            <summary><see cref="T:Infragistics.Controls.Editors.Primitives.MaskedInputCommand" /> オブジェクトのコマンド ソース オブジェクト。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.MaskedInputCommandSource.ResolveCommand">
            <summary>コマンドを実行する <see cref="T:System.Windows.Input.ICommand" /> オブジェクトを作成します。</summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Editors.Primitives.MaskedInputCommandSource.CommandId">
            <summary>コマンドで実行する CalendarCommand を取得または設定します。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.MaskedInputCommandsHelper">
            <summary>XamMaskedInput によってサポートされる RoutedCommands のリストを提供します。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.DisplayCharBase">
            <summary>すべての DisplayCharacter クラスの基本型です。</summary>
            <remarks>
            <para class="body">XamMaskedInput がマスク (XamMaskedInput の <see cref="P:Infragistics.Controls.Editors.XamMaskedInput.Mask" /> プロパティで指定される) を解析する場合、結果は <see cref="T:Infragistics.Controls.Editors.SectionBase" /> から派生されるクラスのコレクションです。各セクションは代わりに表示文字のコレクションになります。セクションの <see cref="P:Infragistics.Controls.Editors.SectionBase.DisplayChars" /> プロパティは、セクションの表示文字を返します。XamMaskedInput は、<see cref="P:Infragistics.Controls.Editors.XamMaskedInput.Sections" /> プロパティを介してセクションのコレクションを返します。これは <see cref="P:Infragistics.Controls.Editors.XamMaskedInput.DisplayChars" /> プロパティも公開し、すべてのセクションからの集合表示文字を含む表示文字のコレクションを返します。</para>
            <para class="body"><b>注：</b> 通常、ユーザーは表示文字を直接作成または使用する必要はありません。XamMaskedInput は自動的に供給されたマスクに基づいて、これらのオブジェクトを作成および管理します。</para><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.Sections" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.DisplayChars" /></remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.DisplayCharBase.MatchChar(System.Char)">
            <summary>指定した文字 <paramref name="c" /> がマスクと一致する場合、True を返します</summary>
            <param name="c">一致する文字</param>
            <remarks>
            <para class="body">MatchChar メソッドは、表示文字クラス実装を派生する抽象メソッドです。このメソッドは、指定した文字が表示文字と一致するかどうかを示す値を返します。このメソッドは文字に対して False を返す場合、ユーザーはこの表示文字の代わりにその文字を入力することはできません。</para>
            <para class="body"><b>注：</b> 通常、このメソッドを直接使用する必要はありません。XamMaskedInput は自動的に指定したマスクに対するユーザー入力を検証します。</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.DisplayCharBase.IncludeMethod">
            <summary>当該のキャラクターを含めるかどうかを決定する InputMaskMode の設定値を取得または設定します。</summary>
            <remarks>
            <p class="body"><b>IncludeMethod</b> が Always に設定されている場合、表示文字は空である場合を除いて常に含まれます。この場合、通常の処理が有効になります。（パッド文字のプロンプト文字が使用されるかどうかを決定するためにマスクがチェックされます。）このプロパティが Never に設定されると、テキストには含まれません。デフォルトの設定 (DisplayCharIncludeMethod.Default) では、当該のテキストに適用されている InputMaskMode を調べて使用キャラクターを決定します。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.DisplayCharBase.DrawString">
            <summary>表示文字によって描画される文字列を返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.DisplayCharBase.IsEditable">
            <summary>文字位置が編集可能かどうか（ユーザーが文字を入力できる位置かどうか）を示します。リテラル文字は False を返します。</summary>
            <remarks>
            <para class="body">リテラル表示文字は、このプロパティから False を返し、ユーザー入力用のプレースホルダである表示文字は、このプロパティから True を返します。</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.DisplayCharBase.Char">
            <summary>この文字の位置に関連する char を返します。それが InputPositionBase の派生物（文字のプレースホルダ）である場合は、ユーザーが入力した文字または 0（文字が入力されていない場合）を返します。LiteralPosition およびその派生物の場合は、関連するリテラル文字を返します。このプロパティの設定は、IsEditable が True を返す場合のみ可能です。それ以外の場合は例外をスローします。</summary>
            <remarks>
            <para class="body">この表示文字に関連付けられた文字を取得または設定します。ユーザーがエディターでテキストを入力する場合、このプロパティは入力された文字で更新されます。文字が入力されると、カレットが移動するので、次の文字はユーザーが入力する次の文字をキャプチャします。</para>
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Editors.InputCharBase">
            <summary>MaskedEditコントロールの編集可能な位置を表すクラス。</summary>
            <remarks>
            <para class="body">この DisplayCharBase 派生クラスは、編集可能なマスクで文字の位置を表すための抽象基本クラスです。詳細は <see cref="T:Infragistics.Controls.Editors.DisplayCharBase" /> を参照してください。</para>
            <para class="body"><b>注：</b> 通常、ユーザーは表示文字を直接作成または使用する必要はありません。XamMaskedInput は自動的に供給されたマスクに基づいて、これらのオブジェクトを作成および管理します。</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.InputCharBase.IsEditable">
            <summary>オーバーライド。InputPositionBase派生オブジェクトが編集可能な文字位置であることを示すため、Trueを返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.InputCharBase.Char">
            <summary>この文字の位置に関連する char を返します。それがInputPositionBaseの派生物（文字のプレースホルダ）である場合は、ユーザーが入力した文字または０（文字が入力されていない場合）を返します。 LiteralPositionおよびその派生物の場合は、テキストの格納に使用されるリテラル文字を返します（DataMaskModesのいずれかがリテラルを含む場合）。 値の設定は、IsEditableがTrueを返す場合のみ可能です。それ以外の場合は例外がスローされます。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.LiteralChar">
            <summary>リテラル文字に一致するクラス。</summary>
            <remarks>
            <para class="body">LiteralChar はマスクのリテラルを表します。リテラル文字は、ユーザーが変更できない文字です。たとえば、&quot;###-##-####&quot; マスクでは、&apos;-&apos; の 2 つのオカランスがリテラル文字です。</para>
            <para class="body"><b>注：</b> 通常、ユーザーは表示文字を直接作成または使用する必要はありません。XamMaskedInput は自動的に供給されたマスクに基づいて、これらのオブジェクトを作成および管理します。</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.LiteralChar.MatchChar(System.Char)">
            <summary>パラメーターとして渡された文字が、このインスタンスが表すリテラルと一致する場合、Trueを返します。</summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Editors.LiteralChar.Char">
            <summary>この文字の位置に関連する char を返します。それがInputPositionBaseの派生物（文字のプレースホルダ）である場合は、ユーザーが入力した文字または０（文字が入力されていない場合）を返します。 LiteralPositionおよびその派生物の場合は、テキストの格納に使用されるリテラル文字を返します（DataMaskModesのいずれかがリテラルを含む場合）。 値の設定は、IsEditableがTrueを返す場合のみ可能です。それ以外の場合は例外がスローされます。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.DecimalSeperatorChar">
            <summary>数値および通貨セクションで小数点（&apos;.&apos;）を表すクラス。</summary>
            <remarks>
            <para class="body">DecimalSeperatorChar は、数値マスクの整数と小数部分を分離するリテラル文字です。</para>
            <para class="body"><b>注：</b> 通常、ユーザーは表示文字を直接作成または使用する必要はありません。XamMaskedInput は自動的に供給されたマスクに基づいて、これらのオブジェクトを作成および管理します。</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.DecimalSeperatorChar.Char">
            <summary>この文字の位置に関連する char を返します。それがInputPositionBaseの派生物（文字のプレースホルダ）である場合は、ユーザーが入力した文字または０（文字が入力されていない場合）を返します。 LiteralPositionおよびその派生物の場合は、テキストの格納に使用されるリテラル文字を返します（DataMaskModesのいずれかがリテラルを含む場合）。 値の設定は、IsEditableがTrueを返す場合のみ可能です。それ以外の場合は例外がスローされます。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.DigitChar">
            <summary>数字を照合するためのクラス。</summary>
            <remarks>
            <para class="body">DigitChar は数値（0-9）を受け付ける表示文字です。Char.IsDigit は文字が数値であるかどうかをチェックするために使用されます。</para>
            <para class="body"><b>注：</b> 通常、ユーザーは表示文字を直接作成または使用する必要はありません。XamMaskedInput は自動的に供給されたマスクに基づいて、これらのオブジェクトを作成および管理します。</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.DigitChar.MatchChar(System.Char)">
            <summary>指定した文字cが数字と一致しているかどうかをチェックします。</summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.AlphaChar">
            <summary>英字（A-Za-z）を照合するためのクラス。</summary>
            <remarks>
            <para class="body">AlphaChar はアルファベット（A-Z および a-z）を受け付ける表示文字です。Char.IsLetter は文字がアルファベットであるかどうかをチェックするために使用されます。</para>
            <para class="body"><b>注：</b> 通常、ユーザーは表示文字を直接作成または使用する必要はありません。XamMaskedInput は自動的に供給されたマスクに基づいて、これらのオブジェクトを作成および管理します。</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.AlphaChar.MatchChar(System.Char)">
            <summary>指定した文字cがカスタムの表示文字と一致しているかどうかをチェックします。</summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.AlphanumericChar">
            <summary>英数字（A-Za-z0-9）を照合するためのクラス。</summary>
            <remarks>
            <para class="body">AlphanumericChar は、英数字（A-Z、a-z および 0-9）を受け付ける表示文字です。Char.IsLetterOrDigit は文字が英数字であるかどうかをチェックするために使用されます。</para>
            <para class="body"><b>注：</b> 通常、ユーザーは表示文字を直接作成または使用する必要はありません。XamMaskedInput は自動的に供給されたマスクに基づいて、これらのオブジェクトを作成および管理します。</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.AlphanumericChar.MatchChar(System.Char)">
            <summary>指定した文字cがカスタムの表示文字と一致しているかどうかをチェックします。</summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.CharacterSet">
            <summary>文字の自由なセットを一致するためのクラス。</summary>
            <remarks>
            <para class="body">CharacterSet は、自由に定義されたセットの部分の文字を受け付ける表示文字です。{char:n:set} マスク トークンを使用してマスクの文字セットを指定できます。ここで n は作成する表示文字数で、set は使用できる文字のセットを指定します。この例は、a、b、c、d、e、f および 0 から 9 の数字を受け付ける 2 つの表示文字を作成する例です。<br />&quot;{char:2:abcdef0-9}&quot;<br />セットは、自由な文字と範囲のリストを含むことができます。上記の例では、&apos;abcdef&apos; は自由な文字リストで、0-9 が範囲です。範囲を含むことができます。</para>
            <para class="body"><b>注：</b>  文字セットは大文字小文字を区別します。大文字と小文字の両方を受け付けたい場合、リストに大文字と小文字の両方を含めます。</para>
            <para class="body"><b>注：</b> 通常、ユーザーは表示文字を直接作成または使用する必要はありません。XamMaskedInput は自動的に供給されたマスクに基づいて、これらのオブジェクトを作成および管理します。</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.CharacterSet.MatchChar(System.Char)">
            <summary>指定した文字cがカスタムの表示文字と一致しているかどうかをチェックします。</summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.HexDigitChar">
            <summary>16 進数を照合するためのクラス。</summary>
            <para class="body">HexDigitChar は 16 進数として受け付ける表示文字です（0-9、A-F および a-f）。マスクに 16 進数を含めるには、&apos;h&apos; または &apos;H&apos; のマスク文字を使用します。</para>
            <para class="body"><b>注：</b> 通常、ユーザーは表示文字を直接作成または使用する必要はありません。XamMaskedInput は自動的に供給されたマスクに基づいて、これらのオブジェクトを作成および管理します。</para>
        </member>
        <member name="M:Infragistics.Controls.Editors.HexDigitChar.MatchChar(System.Char)">
            <summary>指定した文字cがカスタムの表示文字と一致しているかどうかをチェックします。</summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.KeyboardAndForeignChar.MatchChar(System.Char)">
            <summary>指定した文字cがカスタムの表示文字と一致しているかどうかをチェックします。</summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.DisplayCharsCollection">
            <summary><see cref="T:Infragistics.Controls.Editors.DisplayCharBase" /> 派生クラス インスタンスを含む読み取り専用コレクション。</summary>
            <remarks>
            <para class="body">各セクションは、セクションの表示文字を返す <see cref="P:Infragistics.Controls.Editors.SectionBase.DisplayChars" /> プロパティを公開します。XamMaskedInput の <see cref="P:Infragistics.Controls.Editors.XamMaskedInput.DisplayChars" /> プロパティは、エディターのすべてのマスク セクションで、すべての表示文字を含む DisplayCharsCollection も返します。</para>
            <para class="body"><b>注：</b> 通常、ユーザーは表示文字を直接作成または使用する必要はありません。XamMaskedInput はマスクを解析する時に、自動的に作成および管理するからです。</para>
            <para class="body">詳細は <see cref="P:Infragistics.Controls.Editors.XamMaskedInput.Sections" /> を参照してください。</para><seealso cref="P:Infragistics.Controls.Editors.SectionBase.DisplayChars" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.DisplayChars" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.Sections" /></remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.DisplayCharsCollection.Clear">
            <summary>コレクションを消去します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.DisplayCharsCollection.Section">
            <summary>関連付けられたセクション オブジェクトを返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.EditInfo.ImeTextBox_TextInput(System.Object,System.Windows.Input.TextCompositionEventArgs,System.String)">
            <summary>パラメーター &apos;e&apos; および &apos;text&apos; は排他的です。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.EditInfo.ValidateChangeSection(Infragistics.Controls.Editors.SectionBase,Infragistics.Controls.Editors.SectionBase)">
            <summary>from セクションを検証します。セクション間での入力位置の移動を進めるには True を、キャンセルするには False を返します。</summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.EditInfo.ValidateAllSections">
            <summary>編集可能なすべてのセクションに対して ValidateSection を呼び出し、そのような呼び出しがすべて True を返した場合に True を返します。そうでない場合には、False を返します。</summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.EditInfo.ValidateAllSections(System.Boolean)">
            <summary>編集可能なすべてのセクションに対して ValidateSection を呼び出し、そのような呼び出しがすべて True を返した場合に True を返します。そうでない場合には、False を返します。</summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.EditInfo.IsCaretPositionInSelection(System.Int32)">
          <summary>
            caretPos が選択の開始または選択の終了または選択にあるかどうかを示します。
          </summary>
          <param name="caretPos"></param>
          <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.EditInfo.IsDisplayCharSelected(Infragistics.Controls.Editors.DisplayCharBase)">
            <summary>指定された表示文字が選択されているかどうかを示します。</summary>
            <param name="dc"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.EditInfo.SkipDisplayCharsWithEmptyDrawString(System.Int32)">
            <summary>このメソッドは、プロンプト文字が 0 などの場合に、GetDrawChar が 0 を返す表示文字をスキップします。GetDrawChar() が 0 以外の値である次の表示文字の caretPos を返します。</summary>
            <param name="caretPos"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.EditInfo.CanSpin(System.Boolean,System.Object)">
            <summary>現在のセクションを増減できるかどうかを示します。</summary>
            <param name="up">増やす場合は True、減らす場合は False。</param>
            <param name="amount">増減量はオプションです。</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.EditInfo.GetInputPositionInSelection(System.Char)">
            <summary>テキストが選択されて文字が入力されたときに入力処理の開始を表示する文字を返します。</summary>
            <returns>表示する文字の全体的な配置。</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.EditInfo.ProcessRTLInputSectionOverride(Infragistics.Controls.Editors.DisplayCharBase,System.Char)">
          <summary>
            入力されている文字は現在の編集可能な文字と一致しないが、以前の選択セクションが右から左へのセクションで、文字がそこに入力できる場合、前のセクションを返します。
          </summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.EditInfo.CurrentState">
            <summary>コントロールの現在の編集状態を表すビットフラグを返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.EditInfo.IsAnyTextSelected">
            <summary>いずれかのテキストが選択されている場合は True。それ以外は False を返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.EditInfo.IsAfterLastCharacter">
            <summary>カレット位置が最後の文字の後にあるかどうかを示します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.EditInfo.IsAtFirstChar">
            <summary>カレット位置が最初の文字の位置にあるかどうかを示します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.EditInfo.ConstraintCaretToFilledCharacters">
            <summary>右端に塗りつぶされた表示文字の後に、キャレットを文字に載せることができるかどうかを示します。デフォルト値は false です。PromptChar が 0 文字に設定されると、true に解決されます。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.InvalidValueBehavior">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueInput.InvalidValueBehavior" /> のプロパティを指定します。</summary><see cref="P:Infragistics.Controls.Editors.ValueInput.InvalidValueBehavior" /></member>
        <member name="F:Infragistics.Controls.Editors.InvalidValueBehavior.Default">
            <summary>デフォルトは <b>DisplayErrorMessageAndRevertValue</b> に解決されます。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.InvalidValueBehavior.RetainValue">
            <summary>値を保持して編集モードを保ちます。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.InvalidValueBehavior.RevertValue">
            <summary>値をオリジナル値に戻します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.InvalidValueBehavior.DisplayErrorMessage">
            <summary>エラー メッセージを表示して値を保持します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.InvalidValueBehavior.DisplayErrorMessageAndRevertValue">
          <summary>エラー メッセージを表示して値を元に戻します。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.EditOrientation">
            <summary><see cref="T:Infragistics.Controls.Editors.EditSectionBase" /> クラスの <see cref="P:Infragistics.Controls.Editors.EditSectionBase.Orientation" /> プロパティに関連する列挙体。</summary>
            <remarks>
            <para class="body"><b>注：</b> 一般的に、ユーザーは直接このプロパティを指定したり列挙体を使用する必要はありません。XamMaskedInput は、マスクに基づいて関連するプロパティを自動的に設定します。</para><seealso cref="P:Infragistics.Controls.Editors.EditSectionBase.Orientation" /></remarks>
        </member>
        <member name="F:Infragistics.Controls.Editors.EditOrientation.LeftToRight">
            <summary>このセクションは左から右のセクションです。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.EditOrientation.RightToLeft">
            <summary>このセクションは右から左のセクションです。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.DisplayCharIncludeMethod">
            <summary>この列挙体は、<see cref="P:Infragistics.Controls.Editors.DisplayCharBase.IncludeMethod" /> プロパティの値を指定するために使用されます。テキストの取得にマスクを適用するとき、DisplayChar の値をどのように含めるかを示します。</summary>
            <remarks>
            <para class="body"><b>注：</b> 一般的に、ユーザーは直接このプロパティを指定したり列挙体を使用する必要はありません。XamMaskedInput は、マスクに基づいて関連するプロパティを自動的に設定します。</para><seealso cref="P:Infragistics.Controls.Editors.DisplayCharBase.IncludeMethod" /></remarks>
        </member>
        <member name="F:Infragistics.Controls.Editors.DisplayCharIncludeMethod.Default">
            <summary>デフォルトはマスクのモードに従う</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.DisplayCharIncludeMethod.Always">
            <summary>DisplayChar を常に含む</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.DisplayCharIncludeMethod.Never">
            <summary>DisplayChar は含まない</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.FilterType">
            <summary>入力文字の変換方法を指定します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.FilterType.Unchanged">
            <summary>変換なし</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.FilterType.LowerCase">
            <summary>小文字に変換</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.FilterType.UpperCase">
            <summary>大文字に変換</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.InputMaskMode">
            <summary>MaskedInput からテキストを取得するときに適用されるモードを指定するために使用されます。</summary>
            <remarks><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.DataMode" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.DisplayMode" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.ClipMode" /><seealso cref="M:Infragistics.Controls.Editors.XamMaskedInput.GetText(Infragistics.Controls.Editors.InputMaskMode)" /></remarks>
        </member>
        <member name="F:Infragistics.Controls.Editors.InputMaskMode.Raw">
            <summary>Raw データ モード。重要な文字だけが返されます。プロンプトやリテラル文字はテキストから除外されます。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.InputMaskMode.IncludeLiterals">
            <summary>(デフォルト) リテラル文字を含む。データおよびリテラル文字が返されます。プロンプト文字は省略されます。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.InputMaskMode.IncludePromptChars">
            <summary>プロンプト文字を含む。データおよびプロンプト文字が返されます。リテラルは省略されます。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.InputMaskMode.IncludeBoth">
            <summary>プロンプトおよびリテラル文字の両方を含む。セルが編集モード時にオブジェクトに表示されるのと同様にテキストが返されます。データ、プロンプト文字、リテラルがすべて含まれます。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.InputMaskMode.IncludeLiteralsWithPadding">
            <summary>パッディングを含むリテラル。プロンプト文字がパッド文字（デフォルトではスペース）に変換され、テキストが返される時にリテラル文字とデータを含みます。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.SignDisplayType.None">
            <summary>セクションに符号のサポートがありません。したがってセクションには常に正の数が含まれます。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.SignDisplayType.ShowWhenNegative">
            <summary>値が負のときに符号だけが表示されます。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.SignDisplayType.ShowAlways">
            <summary>符号は常に表示されます（正のとき+、負のとき-）。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.MaskedEditTabNavigation">
            <summary>XamMaskedInput の <see cref="P:Infragistics.Controls.Editors.XamMaskedInput.SectionTabNavigation" /> プロパティの指定に使用します。</summary><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.SectionTabNavigation" /></member>
        <member name="F:Infragistics.Controls.Editors.MaskedEditTabNavigation.NextControl">
            <summary>次のコントロールに移動します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.MaskedEditTabNavigation.NextSection">
            <summary>次のセクションに移動します。フォーカスが最後のセクションにある場合は、次のコントロールに移動します。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.MaskSelectAllBehavior">
            <summary>XamMaskedInput の <see cref="P:Infragistics.Controls.Editors.XamMaskedInput.SelectAllBehavior" /> プロパティの指定に使用します。</summary>
            <remarks><see cref="P:Infragistics.Controls.Editors.XamMaskedInput.SelectAllBehavior" /></remarks>
        </member>
        <member name="F:Infragistics.Controls.Editors.MaskSelectAllBehavior.SelectAllCharacters">
            <summary>すべての文字を選択します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.MaskSelectAllBehavior.SelectEnteredCharacters">
            <summary>介在する空の文字や隣接するリテラルを含む入力文字を選択します。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.AutoFillDate">
            <summary>XamMaskedInput の <see cref="P:Infragistics.Controls.Editors.XamMaskedInput.AutoFillDate" /> プロパティの指定に使用します。</summary>
            <remarks><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.AutoFillDate" /></remarks>
        </member>
        <member name="F:Infragistics.Controls.Editors.AutoFillDate.None">
            <summary>オートフィルしません。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.AutoFillDate.Year">
            <summary>年をオートフィル。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.AutoFillDate.MonthAndYear">
            <summary>年と月をオートフィル。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.SpinButtonDisplayMode">
            <summary>XamMaskedInput の <see cref="P:Infragistics.Controls.Editors.XamMaskedInput.SpinButtonDisplayMode" /> プロパティの指定に使用します。</summary><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.SpinButtonDisplayMode" /></member>
        <member name="F:Infragistics.Controls.Editors.SpinButtonDisplayMode.Never">
            <summary>ボタンを表示しません。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.SpinButtonDisplayMode.Always">
            <summary>ボタンを常に表示します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.SpinButtonDisplayMode.MouseOver">
            <summary>マウスが要素の上に移動された時にボタンを表示します。このオプションは、エディターが編集モードの時に常にボタンを表示することに注意してください。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.SpinButtonDisplayMode.Focused">
            <summary>エディターがフォーカスの時にボタンを表示します。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.EditModeValidationErrorEventArgs">
            <summary>ルーティング イベント <see cref="E:Infragistics.Controls.Editors.ValueInput.ValidationError" /> のイベント引数</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.EditModeValidationErrorEventArgs.#ctor(Infragistics.Controls.Editors.ValueInput,System.Exception,System.String)">
            <summary><see cref="T:Infragistics.Controls.Editors.EditModeValidationErrorEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
            <param name="editor">イベントが発生されるエディター。</param>
            <param name="exception">検証エラーに関連付けられた例外</param>
            <param name="errorMessage">検証エラーに関連するエラー メッセージを含む文字列</param>
        </member>
        <member name="P:Infragistics.Controls.Editors.EditModeValidationErrorEventArgs.Editor">
            <summary>関連する値エディターを取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.EditModeValidationErrorEventArgs.InvalidValueBehavior">
            <summary>無効な値動作を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.EditModeValidationErrorEventArgs.ErrorMessage">
            <summary>エラー メッセージを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.EditModeValidationErrorEventArgs.Exception">
            <summary>検証エラーに関連する例外を取得します。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.InvalidOperationEventArgs">
            <summary>InvalidOperationイベントを発生する InvalidOperationEventArgs クラス。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.InvalidOperationEventArgs.#ctor(System.String)">
            <summary>コンストラクター</summary>
            <param name="message"></param>
        </member>
        <member name="P:Infragistics.Controls.Editors.InvalidOperationEventArgs.Message">
            <summary>ユーザーが実行しようとした無効な動作に関するメッセージを取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.InvalidOperationEventArgs.Beep">
            <summary>入力エラー時のビープ音を防ぐかどうかを設定します。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.InvalidCharEventArgs">
            <summary>XamMaskedInput の <see cref="E:Infragistics.Controls.Editors.XamMaskedInput.InvalidChar" /> イベントを発行するための InvalidCharEventArgs クラス。</summary>
            <remarks><seealso cref="E:Infragistics.Controls.Editors.XamMaskedInput.InvalidChar" /></remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.InvalidCharEventArgs.#ctor(System.Char,Infragistics.Controls.Editors.DisplayCharBase)">
            <summary>コンストラクター</summary>
            <param name="c">入力された無効な文字</param>
            <param name="dc">無効な文字が入力された表示文字プレースホルダー</param>
        </member>
        <member name="P:Infragistics.Controls.Editors.InvalidCharEventArgs.Char">
            <summary>ユーザーが入力しようとした無効な文字を取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.InvalidCharEventArgs.DisplayChar">
            <summary>ユーザーが無効な文字の入力を試みた表示文字インスタンスを取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.InvalidCharEventArgs.Beep">
            <summary>XamMaskedInput がビープ音を発するかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.MaskParser.AdjustNonstandardForeignDateMask(System.String@)">
            <summary>現在のカルチャーが非標準の日付マスクを必要とする場合（日本など）、このメソッドはマスクの最後の日付セクションの後に&quot;/&quot;文字を挿入します。これにより、解析メソッドは最後の日付セクションの後に特別な接尾文字を正しく挿入できるようになります。</summary>
            <param name="mask">必要に応じて解析、変更されるマスクへの参照。</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.ParsedMask">
            <summary>マスクをデータに適用するためのクラス。</summary>
            <remarks>
            <para class="body"><b>ParsedMask</b> は解析を行い、解析されたマスクを保存します。関連付けられたマスクを指定したデータに適用するために、<see cref="M:Infragistics.Controls.Editors.ParsedMask.ApplyMask(System.String,Infragistics.Controls.Editors.InputMaskMode)" /> メソッドを公開します。</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.ParsedMask.#ctor(System.String)">
            <summary>コンストラクター。</summary>
            <param name="mask">マスク</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.ParsedMask.#ctor(System.String,System.IFormatProvider)">
            <summary>コンストラクター。</summary>
            <param name="mask">マスク</param>
            <param name="formatProvider">カルチャーに関わる文字を取得するために使用するフォーマット プロバイダー</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.ParsedMask.#ctor(System.String,System.IFormatProvider,System.Char,System.Char)">
            <summary>コンストラクター。</summary>
            <param name="mask">マスク</param>
            <param name="formatProvider">カルチャーに関わる文字を取得するために使用するフォーマット プロバイダー</param>
            <param name="promptCharacter">プロンプト文字 – 特定のマスク モードでマスクを適用する時に限り適用可能です。</param>
            <param name="padCharacter">プロンプト文字 – 特定のマスク モードでマスクを適用する時に限り適用可能です。</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.ParsedMask.ApplyMask(System.String,Infragistics.Controls.Editors.InputMaskMode)">
            <summary>マスクを指定されたデータに適用します。</summary>
            <param name="data">マスクを適用するデータ。</param>
            <param name="maskMode">使用するマスク モード</param>
            <returns>指定したデータにマスクを適用した結果の文字列。</returns>
        </member>
        <member name="P:Infragistics.Controls.Editors.ParsedMask.Mask">
            <summary>関連付けられたマスクを返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ParsedMask.PromptCharacter">
            <summary>関連付けられたプロンプト文字を返します。特定のマスク モードでマスクを適用する時に限り使用されます。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ParsedMask.PadCharacter">
            <summary>関連付けられたパッド文字を返します。特定のマスク モードでマスクを適用する時に限り使用されます。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.ISupportsSelectableText">
            <summary>テキストの選択をサポートする ValueInput 派生クラスによって実装されるインターフェイス。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ISupportsSelectableText.SelectAll">
            <summary>すべてのテキストを選択します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ISupportsSelectableText.SelectionStart">
            <summary>選択したテキストの開始場所を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ISupportsSelectableText.SelectionLength">
            <summary>選択したテキストの長さを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ISupportsSelectableText.SelectedText">
            <summary>選択されたテキストを取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ISupportsSelectableText.TextLength">
            <summary>エディターのテキストの長さの合計を取得します。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.MaskedInputTextBox">
            <summary><see cref="T:Infragistics.Controls.Editors.XamMaskedInput" /> のテンプレートの内部で使用されます。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.MaskedInputTextBox.#ctor">
            <summary>コンストラクター。<see cref="T:Infragistics.Controls.Editors.Primitives.MaskedInputTextBox" /> クラスの新しいインスタンスを作成します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.MaskedInputTextBox.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>コントロールにフォーカスを置くと呼び出されます。</summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.MaskedInputTextBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>オーバーライド。KeyDown イベントを発生する前に呼び出されます。</summary>
            <param name="e">キー イベントの引数。</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.MaskedInputTextBox.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>マウス ボタンが押された時に呼び出されます。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.MaskedInputTextBox.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>キーボード フォーカスがこの要素のビジュアル ツリーに入ったか出ていったときに呼び出されます。</summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.MaskedInputTextBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>オーバーライド。キー ダウン イベントをプレビューするために呼び出されます。</summary>
            <param name="e">キー イベントの引数。</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.MaskedInputTextBox.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>オーバーライド。テキストボックスにテキスト入力がある場合に呼び出されます。</summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.MaskInfo.InternalRefreshValue(System.Object)">
            <summary>オーナーから値を取得して、表示文字のコレクションに設定します。</summary>
            <returns>値が正しく設定されたかどうかを示す値。</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.MaskInfo.InternalRefreshValue(System.Object,System.Exception@)">
            <summary>オーナーから値を取得して、表示文字のコレクションに設定します。</summary>
            <returns>エラーがある場合 (指定された値がマスクと一致しないなど) に、エラー情報を返します。そうでなければ null を返します。</returns>
        </member>
        <member name="P:Infragistics.Controls.Editors.MaskInfo.IsBeingEditedAndFocused">
            <summary>編集モードと関連付けられたコントロールがフォーカスされる場合 True を返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.MaskInfo.Sections">
            <summary>コントロールの編集部分における編集セクションのコレクション。各編集セクションは通常、リテラルで区切られます。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.MaskInfo.DesignMode">
            <summary>コントロールがデザインモードかどうかを示します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.MaskInfo.MaskCache.Equals(System.Object)">
            <summary>このオブジェクトが渡された obj に等しいかどうかを示します。</summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.MaskInfo.MaskCache.GetHashCode">
            <summary>オブジェクトのコードを持つかどうかを返します。</summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.SectionBase">
            <summary>すべてのセクション クラスの抽象基本クラス。</summary>
            <remarks>
            <para class="body">XamMaskedInput がマスク (XamMaskedInput の <see cref="P:Infragistics.Controls.Editors.XamMaskedInput.Mask" /> プロパティで指定される) を解析する場合、結果は SectionBase 派生クラスのコレクションです。各セクションは代わりに表示文字のコレクションになります。セクションの <see cref="P:Infragistics.Controls.Editors.SectionBase.DisplayChars" /> プロパティは、セクションの表示文字を返します。XamMaskedInput は、<see cref="P:Infragistics.Controls.Editors.XamMaskedInput.Sections" /> プロパティを介してセクションのコレクションを返します。これは <see cref="P:Infragistics.Controls.Editors.XamMaskedInput.DisplayChars" /> プロパティも公開し、すべてのセクションからの集合表示文字を含む表示文字のコレクションを返します。</para>
            <para class="body"><b>注：</b> 通常、ユーザーはセクションを直接作成または使用する必要はありません。XamMaskedInput は自動的に供給されたマスクに基づいて、これらのオブジェクトを作成および管理します。</para><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.Sections" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.DisplayChars" /></remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.SectionBase.ValidateString(System.String@)">
            <summary>str がこのセクションに有効な文字列であるかどうかをチェックします。<paramref name="str" /> 自体を返す、または表示される変更された文字列を返します。検証が失敗したことを示すために null を返します</summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.SectionBase.GetText">
            <summary>このセクションのテキストを取得します。</summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Editors.SectionBase.Sections">
            <summary>このセクションが属するセクション コレクションを返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.SectionBase.DisplayChars">
            <summary>このセクションの表示文字を返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.SectionBase.PreviousSection">
            <summary>直前のセクションを検索します。</summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Editors.SectionBase.PreviousLiteralSection">
            <summary>編集セクションを無視して、直前のリテラルセクションを返します。</summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Editors.SectionBase.NextSection">
            <summary>次のセクションを返します。</summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Editors.SectionBase.PreviousEditSection">
            <summary>直前の編集セクションを返します。</summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Editors.SectionBase.NextEditSection">
            <summary>リテラルのセクションを無視して次の編集セクションを返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.SectionBase.NextLiteralSection">
            <summary>編集セクションを無視して、次のリテラルセクションを返します。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.LiteralSection">
            <summary>LiteralSection クラスです。</summary>
            <remarks>
            <para class="body">LiteralSection は、マスクのリテラルのそれぞれの連続する発生に対して作成されます。</para>
            <para class="body"><b>注：</b> 通常、ユーザーはセクションを直接作成または使用する必要はありません。XamMaskedInput は自動的に供給されたマスクに基づいて、これらのオブジェクトを作成および管理します。</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.LiteralSection.#ctor">
            <summary><see cref="T:Infragistics.Controls.Editors.LiteralSection" /> クラスの新しいインスタンスを初期化します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.LiteralSection.SetFilterToAllChars(Infragistics.Controls.Editors.FilterType)">
            <summary>オーバーライドされたメソッドは何も実行しません。</summary>
            <param name="filter"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.LiteralSection.ValidateString(System.String@)">
            <summary>このセクションの文字列を検証します。</summary>このメソッドは、指定した文字列がこのセクションに有効な文字列であるかどうかをチェックします。新しい文字列が指定された文字列に近い場合に指定された文字列を変更できますが、セクションに一致する文字列でなければなりません。検証が失敗したことを示すためにこのメソッドはFalseを返します。<param name="str">検証する文字列</param>
            <returns>文字列が有効な場合 <b>True</b>、そうでない場合は <b>False</b></returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.EditSectionBase">
            <summary>リテラル以外のセクションのための抽象基本クラスです。</summary>
            <remarks>
            <para class="body">EditSectionBase は、すべての編集可能なセクションのための基本クラスです。</para>
            <para class="body"><b>注：</b> 通常、ユーザーはセクションを直接作成または使用する必要はありません。XamMaskedInput は自動的に供給されたマスクに基づいて、これらのオブジェクトを作成および管理します。</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.EditSectionBase.SafeDisplayCharAt(System.Int32)">
            <summary>インデックスで DisplayChars コレクションの文字を返します。</summary>
            <param name="index">表示する文字のインデックス</param>
            <returns>その位置の文字または見つからない場合は null。</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.EditSectionBase.SetText(System.String)">
            <summary>セクションにテキストを割り当てます。無効なテキストを指定してこのメソッドを呼び出すと、例外が発生します。</summary>
            <param name="text"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.EditSectionBase.ValidateSection">
            <summary>セクションを検証します</summary>このメソッドは通常、入力位置がセクションから削除されているときに呼び出されます。適切な値がセクションに入力されている場合には True を返します。この関数は表示文字の値を変更できます。<returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.EditSectionBase.ValidateSection(System.Boolean)">
            <summary>セクションを検証します。</summary>
            <remarks>このメソッドは通常、入力位置がセクションから削除されているときに呼び出されます。適切な値がセクションに入力されている場合には True を返します。この関数は表示文字の値を変更できます。</remarks>
            <param name="contentModificationsAllowed">実装がコンテンツを変更するかどうか。</param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Editors.EditSectionBase.Orientation">
            <summary>編集の方向が左から右か、または右から左かを返します。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.DisplayCharsEditSection">
            <summary>これは編集可能な表示文字の自由なリストを含むことができる編集セクションです。</summary>
            <remarks>
            <para class="body">DisplayCharsEditSection は、マスクの連続する編集可能な文字の各グループに対して作成されます。このセクションは、関連する特別なセクションを持たない編集可能な文字のために作成されます。たとえば、&quot;mm&quot;、&quot;dd&quot; および &quot;yyyy&quot; は、関連付けられた <see cref="T:Infragistics.Controls.Editors.MonthSection" />、<see cref="T:Infragistics.Controls.Editors.DaySection" /> および <see cref="T:Infragistics.Controls.Editors.YearSection" /> を持つのでこれらについては DisplayCharsEditSection は作成されません。ただし、関連付けられた特別なセクションがない他のマスク文字では、このオブジェクトはマスクの連続する編集マスク文字のグループに対して作成されます。</para>
            <para class="body"><b>注：</b> 通常、ユーザーはセクションを直接作成または使用する必要はありません。XamMaskedInput は自動的に供給されたマスクに基づいて、これらのオブジェクトを作成および管理します。</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.DisplayCharsEditSection.SetText(System.String)">
            <summary>セクションにテキストを割り当てます。無効なテキストを指定してこのメソッドを呼び出すと、例外が発生します。</summary>
            <param name="text"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.DisplayCharsEditSection.ValidateString(System.String@)">
            <summary>str がこのセクションに有効な文字列であるかどうかをチェックします。自体を返す、または表示される変更された文字列を返します。検証が失敗したことを示すために False を返します</summary>
            <param name="str">検証する文字列</param>
            <returns>有効な場合 <b>True</b>、そうでない場合は <b>False</b></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.DisplayCharsEditSection.ValidateSection(System.Boolean)">
            <summary>セクションに入力した文字がセクションの入力要件を満たすかどうかをチェックします。</summary>
            <param name="contentModificationsAllowed">コンテンツの変更を許可するかどうか</param>
            <returns>有効な場合 <b>True</b>、そうでない場合は <b>False</b></returns>
        </member>
        <member name="P:Infragistics.Controls.Editors.DisplayCharsEditSection.Orientation">
            <summary>このセクションは右から左への編集セクション（数値）か、 左から右か（標準）を示す値を返します。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.NumberSection">
            <summary>右から左に編集する数値セクション。</summary>
            <remarks>
            <para class="body">DisplayCharsEditSection は、マスクの連続する編集可能な文字の各グループに対して作成されます。このセクションは、関連する特別なセクションを持たない編集可能な文字のために作成されます。たとえば、&quot;mm&quot;、&quot;dd&quot; および &quot;yyyy&quot; は、関連付けられた <see cref="T:Infragistics.Controls.Editors.MonthSection" />、<see cref="T:Infragistics.Controls.Editors.DaySection" /> および <see cref="T:Infragistics.Controls.Editors.YearSection" /> を持つのでこれらについては DisplayCharsEditSection は作成されません。ただし、関連付けられた特別なセクションがない他のマスク文字では、このオブジェクトはマスクの連続する編集マスク文字のグループに対して作成されます。</para>
            <para class="body"><b>注：</b> 通常、ユーザーはセクションを直接作成または使用する必要はありません。XamMaskedInput は自動的に供給されたマスクに基づいて、これらのオブジェクトを作成および管理します。</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.NumberSection.SetText(System.String)">
            <summary>セクションにテキストを割り当てます。無効なテキストを指定してこのメソッドを呼び出すと、例外が発生します。</summary>
            <param name="text"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.NumberSection.ShiftLeft(System.Int32,System.Int32)">
             <summary>オーバーライド。この関数が数字セクションに無効であるため、InvalidOperationException例外をスローします。</summary>
             <param name="from"></param>
             <param name="positionsToShift"></param>
             <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.NumberSection.ValidateString(System.String@)">
            <summary>文字列strがこのセクションと関連付けられたマスクと一致する場合はTrueを返します</summary>
            <param name="str">検証する文字列</param>
            <returns>有効な場合 <b>True</b>、そうでない場合は <b>False</b></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.NumberSection.ValidateSection(System.Boolean)">
            <summary>このセクションの入力がマスクと一致する場合。</summary>
            <param name="contentModificationsAllowed">変更が許可されるかされないか</param>
            <returns>有効な場合 <b>True</b>、そうでない場合は <b>False</b></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.NumberSection.CreateDisplayChars">
            <summary>この編集セクションに関連付けられた表示文字を、渡された displayChars コレクションに作成します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.NumberSection.FractionPart">
            <summary>関連付けられた小数部を返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.NumberSection.IsFractionPartNonEmpty">
            <summary>関連付けられた小数部があり空でない場合は True を返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.NumberSection.MinValue">
            <summary>セクションの最小値を設定します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.NumberSection.MaxValue">
            <summary>セクションの最大値を設定します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.NumberSection.HasOnlySignSymbol">
            <summary>数字セクションに入れられた唯一の文字が &apos;+&apos; または &apos;-&apos; の場合 True を返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.NumberSection.Orientation">
            <summary>オーバーライド。このセクションは右から左への編集セクション（数値）であることを返します。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.MonthSection">
            <summary>日付マスクの月セクションです。</summary>
            <remarks>
            <para class="body">MonthSection は日付マスクの月部分を表します。</para>
            <para class="body"><b>注：</b> 通常、ユーザーはセクションを直接作成または使用する必要はありません。XamMaskedInput は自動的に供給されたマスクに基づいて、これらのオブジェクトを作成および管理します。</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.MonthSection.#ctor">
            <summary><see cref="T:Infragistics.Controls.Editors.MonthSection" /> クラスの新しいインスタンスを初期化します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.MonthSection.ValidateString(System.String@)">
            <summary>ValidateString</summary>
            <param name="str">検証する文字列</param>
            <returns>有効な場合 <b>True</b>、そうでない場合は <b>False</b></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.MonthSection.ValidateSection(System.Boolean)">
            <summary>ValidateSection</summary>
            <param name="contentModificationsAllowed">コンテンツを変更できるかどうか</param>
            <returns>有効な場合 <b>True</b>、そうでない場合は <b>False</b></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.MonthSection.SetText(System.String)">
            <summary>セクションにテキストを割り当てます。無効なテキストを指定してこのメソッドを呼び出すと、例外が発生します。</summary>
            <param name="text"></param>
        </member>
        <member name="T:Infragistics.Controls.Editors.DaySection">
            <summary>日付マスクの日セクションです。</summary>
            <remarks>
            <para class="body">DaySection は日付マスクの月部分を表します。</para>
            <para class="body"><b>注：</b> 通常、ユーザーはセクションを直接作成または使用する必要はありません。XamMaskedInput は自動的に供給されたマスクに基づいて、これらのオブジェクトを作成および管理します。</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.DaySection.#ctor">
            <summary><see cref="T:Infragistics.Controls.Editors.DaySection" /> クラスの新しいインスタンスを初期化します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.DaySection.ValidateString(System.String@)">
            <summary>ValidateString</summary>
            <param name="str">検証する文字列</param>
            <returns>有効な場合 <b>True</b>、そうでない場合は <b>False</b></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.DaySection.SetText(System.String)">
            <summary>セクションにテキストを割り当てます。無効なテキストを指定してこのメソッドを呼び出すと、例外が発生します。</summary>
            <param name="text"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.DaySection.ValidateSection(System.Boolean)">
            <summary>ValidateSection</summary>
            <param name="contentModificationsAllowed">コンテンツを変更できるかどうか</param>
            <returns>有効な場合 <b>True</b>、そうでない場合は <b>False</b></returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.YearSection">
            <summary>日付マスクの年セクションです。</summary>
            <remarks>
            <para class="body">YearSection は日付マスクの年部分を表します。このセクションは、2 桁の年セクションまたは 4 桁の年セクションが可能です。</para>
            <para class="body"><b>注：</b> 通常、ユーザーはセクションを直接作成または使用する必要はありません。XamMaskedInput は自動的に供給されたマスクに基づいて、これらのオブジェクトを作成および管理します。</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.YearSection.#ctor(System.Boolean)">
            <summary><see cref="T:Infragistics.Controls.Editors.YearSection" /> クラスの新しいインスタンスを初期化します。</summary>
            <param name="isFourDigits">年のセクションが 4 桁または 2 桁であるかどうかを示します</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.YearSection.ValidateSection(System.Boolean)">
            <summary>ValidateSection</summary>
            <param name="contentModificationsAllowed">コンテンツを変更できるかどうか</param>
            <returns>有効な場合 <b>True</b>、そうでない場合は <b>False</b></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.YearSection.SetText(System.String)">
            <summary>セクションにテキストを割り当てます。無効なテキストを指定してこのメソッドを呼び出すと、例外が発生します。</summary>
            <param name="text"></param>
        </member>
        <member name="T:Infragistics.Controls.Editors.HourSection">
            <summary>時刻マスクの時間セクションです。</summary>
            <remarks>
            <para class="body">HourSection は日付マスクの時間部分を表します。</para>
            <para class="body"><b>注：</b> 通常、ユーザーはセクションを直接作成または使用する必要はありません。XamMaskedInput は自動的に供給されたマスクに基づいて、これらのオブジェクトを作成および管理します。</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.HourSection.#ctor">
            <summary><see cref="T:Infragistics.Controls.Editors.HourSection" /> クラスの新しいインスタンスを初期化します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.HourSection.ValidateString(System.String@)">
            <summary>ValidateString</summary>
            <param name="str">検証する文字列</param>
            <returns>有効な場合 <b>True</b>、そうでない場合は <b>False</b></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.HourSection.SetText(System.String)">
            <summary>セクションにテキストを割り当てます。無効なテキストを指定してこのメソッドを呼び出すと、例外が発生します。</summary>
            <param name="text"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.HourSection.ValidateSection(System.Boolean)">
            <summary>ValidateSection</summary>
            <param name="contentModificationsAllowed">コンテンツを変更できるかどうか</param>
            <returns>有効な場合 <b>True</b>、そうでない場合は <b>False</b></returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.AMPMSection">
            <summary>時刻マスクの AM-PM セクションです。</summary>
            <remarks>
            <para class="body">AMPMSection は時刻マスクの AM/PM 部分を表します。</para>
            <para class="body"><b>注：</b> 通常、ユーザーはセクションを直接作成または使用する必要はありません。XamMaskedInput は自動的に供給されたマスクに基づいて、これらのオブジェクトを作成および管理します。</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.AMPMSection.ValidateSection(System.Boolean)">
            <summary>ValidateSection</summary>
            <param name="contentModificationsAllowed">コンテンツを変更できるかどうか</param>
            <returns>有効な場合 <b>True</b>、そうでない場合は <b>False</b></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.AMPMSection.CustomDisplayChar.MatchChar(System.Char)">
            <summary>指定した文字cがカスタムの表示文字と一致しているかどうかをチェックします。</summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Controls.Editors.AMPMSection.CustomDisplayChar.Char">
            <summary>オーバーライド</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.MinuteSection">
            <summary>時刻マスクの分部分です。</summary>
            <remarks>
            <para class="body">MinuteSection は時刻マスクの分部分を表します。</para>
            <para class="body"><b>注：</b> 通常、ユーザーはセクションを直接作成または使用する必要はありません。XamMaskedInput は自動的に供給されたマスクに基づいて、これらのオブジェクトを作成および管理します。</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.MinuteSection.#ctor">
            <summary><see cref="T:Infragistics.Controls.Editors.MinuteSection" /> クラスの新しいインスタンスを初期化します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.MinuteSection.ValidateString(System.String@)">
            <summary>ValidateString</summary>
            <param name="str">検証する文字列</param>
            <returns>有効な場合 <b>True</b>、そうでない場合は <b>False</b></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.MinuteSection.ValidateSection(System.Boolean)">
            <summary>ValidateSection</summary>
            <param name="contentModificationsAllowed">コンテンツを変更できるかどうか</param>
            <returns>有効な場合 <b>True</b>、そうでない場合は <b>False</b></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.MinuteSection.SetText(System.String)">
            <summary>セクションにテキストを割り当てます。無効なテキストを指定してこのメソッドを呼び出すと、例外が発生します。</summary>
            <param name="text"></param>
        </member>
        <member name="T:Infragistics.Controls.Editors.SecondSection">
            <summary>時刻マスクの 2 番目のセクションです。</summary>
            <remarks>
            <para class="body">SecondSection は時刻マスクの秒部分を表します。</para>
            <para class="body"><b>注：</b> 通常、ユーザーはセクションを直接作成または使用する必要はありません。XamMaskedInput は自動的に供給されたマスクに基づいて、これらのオブジェクトを作成および管理します。</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.SecondSection.#ctor">
            <summary><see cref="T:Infragistics.Controls.Editors.SecondSection" /> クラスの新しいインスタンスを初期化します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.SecondSection.ValidateString(System.String@)">
            <summary>ValidateString</summary>
            <param name="str">検証する文字列</param>
            <returns>有効な場合 <b>True</b>、そうでない場合は <b>False</b></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.SecondSection.SetText(System.String)">
            <summary>セクションにテキストを割り当てます。無効なテキストを指定してこのメソッドを呼び出すと、例外が発生します。</summary>
            <param name="text"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.SecondSection.ValidateSection(System.Boolean)">
            <summary>ValidateSection</summary>
            <param name="contentModificationsAllowed">コンテンツを変更できるかどうか</param>
            <returns>有効な場合 <b>True</b>、そうでない場合は <b>False</b></returns>
        </member>
        <member name="T:Infragistics.Controls.Editors.FractionPart">
            <summary>小数部の編集セクションの実装。</summary>
            <remarks>
            <para class="body">FractionPart は、数値マスクの小数部分を表します。</para>
            <para class="body"><b>注：</b> 通常、ユーザーはセクションを直接作成または使用する必要はありません。XamMaskedInput は自動的に供給されたマスクに基づいて、これらのオブジェクトを作成および管理します。</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.FractionPart.SetText(System.String)">
            <summary>セクションにテキストを割り当てます。無効なテキストを指定してこのメソッドを呼び出すと、例外が発生します。</summary>
            <param name="text"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.FractionPart.ValidateSection(System.Boolean)">
            <summary>ValidateSection。</summary>
            <param name="contentModificationsAllowed">コンテンツを変更できるかどうか</param>
            <returns>有効な場合 <b>True</b>、そうでない場合は <b>False</b></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.FractionPart.TrimInsignificantZeros">
            <summary>入力値の末尾に付いているゼロをすべてトリミングします。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.FractionPart.ValidateString(System.String@)">
            <summary>ValidateString。</summary>
            <param name="str">検証する文字列</param>
            <returns>有効な場合 <b>True</b>、そうでない場合は <b>False</b></returns>
        </member>
        <member name="P:Infragistics.Controls.Editors.FractionPart.NumberOfDigits">
            <summary>小数部の桁数。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.FractionPart.Orientation">
            <summary>編集の方向が左から右か、または右から左かを返します。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.FractionPartContinuous">
            <summary>小数部の編集セクションの実装。</summary>
            <remarks>
            <para class="body">FractionPartContinous は、数値マスクの小数部分を表します。これは <see cref="T:Infragistics.Controls.Editors.FractionPart" /> と異なり、このセクションは小数部分に数値を入力して小数部分が埋まると、整数部分に流し込むことができます。これによって、&apos;.&apos; 文字を入力することなく、値を便利に入力することができます。&quot;{double:-n.m:c}&quot; マスク トークンを使用してマスクの小数部分の種類を指定します。ここで &apos;n&apos; は、整数部分の数値で、&apos;m&apos; は小数部分の数値で、&apos;c&apos; は連続する小数部分です。詳細は、<a href="xamInputs_Masks.html">「マスク」</a>のトピックのマスクの表の関連するエントリを参照してください。</para>
            <para class="body"><b>注：</b> 通常、ユーザーはセクションを直接作成または使用する必要はありません。XamMaskedInput は自動的に供給されたマスクに基づいて、これらのオブジェクトを作成および管理します。</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.FractionPartContinuous.ValidateSection(System.Boolean)">
            <summary>ValidateSection。</summary>
            <param name="contentModificationsAllowed">コンテンツを変更できるかどうか</param>
            <returns>有効な場合 <b>True</b>、そうでない場合は <b>False</b></returns>
        </member>
        <member name="P:Infragistics.Controls.Editors.FractionPartContinuous.Orientation">
            <summary>編集の方向が左から右か、または右から左かを返します。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.SectionsCollection">
            <summary><see cref="T:Infragistics.Controls.Editors.SectionBase" /> 派生クラス インスタンスを含む読み取り専用コレクション。</summary>
            <remarks>
            <para class="body">XamMaskedInput は、マスクを解析するときに、このコレクションを作成します。XamMaskedInput の <see cref="P:Infragistics.Controls.Editors.XamMaskedInput.Sections" /> プロパティは、このコレクションを返します。詳細は <see cref="P:Infragistics.Controls.Editors.XamMaskedInput.Sections" /> を参照してください。</para>
            <para class="body"><b>注：</b> 通常、ユーザーは表示文字を直接作成または使用する必要はありません。XamMaskedInput はマスクを解析する時に、自動的に作成および管理するからです。</para><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.Sections" /><seealso cref="P:Infragistics.Controls.Editors.SectionBase.DisplayChars" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.DisplayChars" /></remarks>
        </member>
        <member name="T:Infragistics.Controls.Editors.TextInputBase">
            <summary>テキスト ベースの値エディター用の抽象基本クラス。</summary>
            <remarks>
            <para class="body"><b>TextInputBase</b> クラスは、テキスト ベースの値エディターが派生する抽象基本クラスです。</para>
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Editors.ValueInput">
            <summary>表示のための機能を提供する抽象基本クラスまたは編集値。</summary>
            <remarks>
            <p class="body"><b>ValueInput</b> は、現在の値とその値のテキスト表現をそれぞれ返す <see cref="P:Infragistics.Controls.Editors.ValueInput.Value" /> プロパティと <see cref="P:Infragistics.Controls.Editors.ValueInput.Text" /> プロパティを公開します。<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueToTextConverter" /> は、<b>Value</b> と <b>Text</b> 間の変換に使用されます。</p>
            <p class="body"><b>ValueInput</b> は編集モードにすることをサポートします。編集モードの時、コントロールの <see cref="P:Infragistics.Controls.Editors.ValueInput.Value" /> はエンド ユーザーによって変更できます。<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueConstraint" /> は <see cref="T:Infragistics.Controls.Editors.ValueConstraint" /> インスタンスに設定されて、コントロールの有効値と見なされる制限に使用できる最小値や最大値などの制限を提供できます。ValueConstraint の <see cref="P:Infragistics.Controls.Editors.ValueConstraint.Nullable" /> プロパティは、コントロールが null エントリを受け付けるかどかを指定するために使用できます。<see cref="P:Infragistics.Controls.Editors.ValueInput.InvalidValueBehavior" /> プロパティは、既存の編集モード時に現在の値が有効でない場合、コントロールがどうように動作するかを決定します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.#ctor">
            <summary>新しい <see cref="T:Infragistics.Controls.Editors.ValueInput" /> を初期化します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.OnApplyTemplate">
            <summary>テンプレートが適用される時に呼び出されます。</summary>
            <remarks>
            <p class="body">OnApplyTemplate は FrameworkElement によって公開される .NET framework メソッドです。このクラスは、テンプレートがコントロールに適用される時は必ずコントロール テンプレートからフォーカス サイトを取得するためにこれをオーバーライドします。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.OnCreateAutomationPeer">
            <summary>UI オートメーションに <see cref="T:Infragistics.Controls.Editors.ValueInput" /> を公開するオートメーション ピアを返します。</summary>
            <returns><see cref="T:Infragistics.AutomationPeers.ValueInputAutomationPeer" />。</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.OnInitialized(System.EventArgs)">
            <summary>オーバーライド。</summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>オーバーライド。コントロールがフォーカスを受け取ったときに呼び出されます。</summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>キーボード フォーカスがこの要素のビジュアル ツリーに入ったか出ていったときに呼び出されます。</summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>マウスが要素の境界線内で移動した時に呼び出されます。</summary>
            <param name="e">マウスの位置に関する情報を提供します。</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>マウスが要素の境界線内で移動した時に呼び出されます。</summary>
            <param name="e">マウスの位置に関する情報を提供します。</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>マウスの左ボタンが押されたときに呼び出します。</summary>
            <param name="e">イベント引数</param>
            <remarks>
            <p class="body">ValueInput は、左マウス ボタンを押下に対応して、必要な場合、エディターにフォーカスを与えて編集モードに入るためにこのメソッドをオーバライトします。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>プロパティ値を変更すると呼び出されます</summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.RaiseValidationError(Infragistics.Controls.Editors.EditModeValidationErrorEventArgs)">
            <summary><see cref="E:Infragistics.Controls.Editors.ValueInput.ValidationError" /> イベントを発生させます。</summary>
            <param name="args">イベント引数。</param>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueInput.AlwaysValidateProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueInput.AlwaysValidate" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.ShouldSerializeAlwaysValidate">
            <summary>AlwaysValidate プロパティがデフォルト以外の値に設定されている場合 True を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.ResetAlwaysValidate">
            <summary>AlwaysValidate プロパティをデフォルトの状態にリセットします。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueInput.IsInEditModeProperty">
            <summary>読み取り専用 <see cref="P:Infragistics.Controls.Editors.ValueInput.IsInEditMode" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueInput.ValueProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueInput.Value" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.OnValueChanged(System.Object,System.Object)">
            <summary><b>Value</b> プロパティが変更するかエディターの内容が変更すると呼び出されます。</summary><seealso cref="E:Infragistics.Controls.Editors.ValueInput.ValueChanged" /></member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.CoerceValueHelper">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueInput.Value" /> プロパティの CoerceValue ハンドラーから呼び出されます。デフォルト実装は、タイプの変換を実行するので、正しいタイプの変換が実行されることを保証するために基本実装を呼び出す必要があります。</summary>
            <returns></returns>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueInput.TextProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueInput.Text" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.OnTextChanged(System.String,System.String)">
            <summary>プロパティ &apos;Text&apos; が変更する時に呼び出されます</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.OnCoerceText(System.String)">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueInput.Text" /> プロパティの CoerceValue ハンドラーから呼び出されます。デフォルトの実装は何もしません。</summary>
            <param name="text">強制するためのテキスト</param>
            <returns>強制された値</returns>
            <remarks>
            <para class="body">デフォルトの実装は単純に <paramref name="text" /> パラメーターの値を返します。派生エディターは特定の強制ロジックをエディターに提供するためにこのメソッドをオーバーライドできます。</para>
            </remarks>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueInput.ValueTypeProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.ShouldSerializeValueType">
            <summary>ValueType プロパティがデフォルト以外の値に設定されている場合、True を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.ResetValueType">
            <summary>ValueType プロパティをデフォルト値にリセットします。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueInput.ValueTypeNameProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueInput.ValueTypeName" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueInput.ValueTypeResolvedProperty">
            <summary>読み取り専用 <see cref="P:Infragistics.Controls.Editors.ValueInput.ValueTypeResolved" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.OnValueTypeResolvedChanged(System.Type)">
            <summary><b>ValueType</b> プロパティの値が変更されたときに呼び出されます。</summary>
            <param name="newType"></param>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueInput.ValueConstraintProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueInput.ValueConstraint" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.OnValueConstraintChanged(System.String)">
            <summary>このメソッドは、ValueConstraint またはそのうちの 1 つのプロパティが変更する時に呼び出されます。</summary>
            <param name="valueConstraintPropertyName">ValueConstraint が変更された場合、Null を返します。そうでない場合、変更されたプロパティの名を返します。</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.ShouldSerializeValueConstraint">
            <summary>ValueConstraint プロパティがデフォルト以外の値に設定されている場合、True を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.ResetValueConstraint">
            <summary>ValueConstraint プロパティを <b>null</b> のデフォルト値にリセットします。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueInput.InvalidValueBehaviorProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueInput.InvalidValueBehavior" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.ShouldSerializeInvalidValueBehavior">
            <summary>InvalidValueBehavior プロパティがデフォルト以外の値に設定されている場合、True を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.ResetInvalidValueBehavior">
            <summary>InvalidValueBehavior プロパティをデフォルトの状態に戻します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueInput.ValueToTextConverterProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueInput.ValueToTextConverter" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueInput.IsValueValidProperty">
            <summary>読み取り専用  <see cref="P:Infragistics.Controls.Editors.ValueInput.IsValueValid" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueInput.HasValueChangedProperty">
            <summary>読み取り専用  <see cref="P:Infragistics.Controls.Editors.ValueInput.HasValueChanged" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueInput.InvalidValueErrorInfoPropertyKey">
            <summary>読み取り専用の <see cref="P:Infragistics.Controls.Editors.ValueInput.InvalidValueErrorInfo" /> 依存プロパティのプロパティ キーを識別します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueInput.InvalidValueErrorInfoProperty">
            <summary>読み取り専用  <see cref="P:Infragistics.Controls.Editors.ValueInput.InvalidValueErrorInfo" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueInput.IsReadOnlyProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueInput.IsReadOnly" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.OnIsReadOnlyChanged">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueInput.IsReadOnly" /> プロパティが変更されたときに呼び出されます。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.ShouldSerializeIsReadOnly">
            <summary>IsReadOnly プロパティがデフォルト以外の値に設定されている場合 True を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.ResetIsReadOnly">
            <summary>IsReadOnly プロパティを <b>false</b> のデフォルト値にリセットします。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueInput.OriginalValuePropertyKey">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueInput.OriginalValue" /> 依存プロパティのキーを識別します</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueInput.OriginalValueProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueInput.OriginalValue" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueInput.FormatProviderProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueInput.FormatProvider" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.ShouldSerializeFormatProvider">
            <summary>FormatProvider プロパティがデフォルト以外の値に設定されている場合、True を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.ResetFormatProvider">
            <summary>FormatProvider プロパティを <b>null</b> のデフォルト値にリセットします。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueInput.FormatProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueInput.Format" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.ShouldSerializeFormat">
            <summary>Format プロパティがデフォルト以外の値に設定されている場合、True を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.ResetFormat">
            <summary>Format プロパティを <b>null</b> のデフォルト値にリセットします。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.RegisterResources(System.String,System.Reflection.Assembly)">
            <summary>コントロールがリソースをプルする追加の Resx を追加します。</summary>
            <param name="name">使用されるリソースを含む組み込み resx ファイルの名前。</param>
            <param name="assembly">resx ファイルが埋め込まれるアセンブリ。</param>
            <remarks>ファイルの拡張子を含まないでください。ただし、アセンブリのデフォルト名前空間でプレフィックスしてください。</remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.UnregisterResources(System.String)">
            <summary>以前登録した resx ファイルを削除します。</summary>
            <param name="name">登録に使用された埋め込み resx ファイルの名前。</param>
            <remarks>注：これは、すでにビューに存在し、文字列を表示しているコントロールには影響ありません。作成された新規コントロールにのみ影響を与えます。</remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.CanEditType(System.Type)">
            <summary>エディターはネイティブで指定したタイプの編集値をサポートするかどうかを決定します。</summary>
            <param name="type">チェックするデータ型。</param>
            <returns>エディターがネイティブで指定したタイプの編集値をサポートする場合は True、そうでなければ False を返します。</returns>
            <remarks>
            <p class="body">CanEditType メソッドは、エディターがネイティブで指定したタイプの編集値をサポートするかどうかを示します。一般的に、このメソッドを呼び出す必要はありません。値エディター インフラストラクチャによって使用されます。</p>
            <p class="body"><b>注; </b> CanEditType は、<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /> プロパティでどちらのタイプに設定できるかを示しません。ValueType プロパティは、エディターのネイティブ データ　タイプとそのタイプ間で変換するための変換ロジックがある限り、任意のタイプに設定することができます。たとえば、<see cref="T:Infragistics.Controls.Editors.XamMaskedInput" /> はネイティブで編集文字列タイプだけをサポートします。ただし、その ValueType は Double または DateTime に設定できるか、文字列とそのデータ型間でエディターが変換できる限り任意のタイプに設定できます。ValueType はカスタム タイプに設定することもできます。<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueToTextConverter" /> および <see cref="P:Infragistics.Controls.Editors.TextInputBase.ValueToDisplayTextConverter" /> プロパティを使用してカスタム変換ロジックを提供できます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.CanRenderType(System.Type)">
            <summary>エディターはネイティブで指定したタイプの値の表示をサポートするかどうかを決定します。</summary>
            <param name="type">チェックするデータ型。</param>
            <returns>エディターがネイティブで指定したタイプの値の表示をサポートする場合は True、そうでなければ False を返します。</returns>
            <remarks>
            <p class="body">CanRenderType メソッドは、エディターがネイティブで指定したタイプの値の表示をサポートするかどうかを示します。一般的に、このメソッドを呼び出す必要はありません。値エディター インフラストラクチャによって使用されます。</p>
            <p class="body">詳細は <see cref="M:Infragistics.Controls.Editors.ValueInput.CanEditType(System.Type)" /> を参照してください。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.IsExtentBasedOnValue(System.Windows.Controls.Orientation)">
            <summary>エディターの希望する幅または高さが値に基づくかどうかを示します。</summary>
            <param name="orientation">評価される限度の方向。水平は幅を示し、垂直は高さを示します。</param>
            <returns>限度が値に基づく場合は True。</returns>
            <remarks>
            <p class="body">このメソッドは、エディターの希望するサイズが、エディターの値に基づいて変更されるかどうかを決定するために Infragistics の内部インフラストラクチャによって使用されます。たとえば、幅と高さの両方はその値に関係しないので、XamCheckEditor は両方の向きに False を返します。XamCheckEditor の値が True または False であるかどうかは、同じ幅と高さになります。一方 XamTextEditor は水平方向に対して True を返します。希望したサイズはエディターの現在の値によって変わるからです。ラッピングがそれぞれオンまたはオフであるかどうかに基づき垂直の寸法に対して True または False を返します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.ValidateCurrentValue">
            <summary>エディターの現在の値を検証して、その値検証の結果に基づいて <see cref="P:Infragistics.Controls.Editors.ValueInput.IsValueValid" /> プロパティを初期化します。</summary>
            <remarks>
            <para class="body">値が変更されるときに ValueInput が自動的に値を検証するため、通常このメソッドを呼び出す必要はありません。外部検証条件の変更などのときに値を再検証する必要がある場合があります。特に、値検証のためにカスタム ロジックを提供するために <see cref="M:Infragistics.Controls.Editors.ValueInput.ValidateCurrentValue(System.Exception@)" /> 仮想メソッドをオーバーライドするときに便利です。値が有効かどうかを表すために、ValueInput は <see cref="P:Infragistics.Controls.Editors.ValueInput.IsValueValid" /> プロパティを更新します。</para><seealso cref="P:Infragistics.Controls.Editors.ValueInput.IsValueValid" /></remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.ValidateValue(System.Object,System.Exception@)">
            <summary>指定された値は、エディターで強制された暗黙および明示的な値の制約に基づいて、エディターで有効である評価された場合、True を返します。</summary>
            <param name="value">有効であるかどうかを確認する値。</param>
            <param name="error">値が無効な場合、適切なエラー メッセージを含む例外に設定されます。</param>
            <returns>指定した値は有効だ場合は、True。それ以外は False。</returns>
            <remarks>
            <para class="body"><b>ValidateValue</b> メソッドは、値がエディターで強制された暗黙および明示的な値の制約に基づいて、エディターで有効であると評価するかどうかを決定するために使用されます。暗黙値の制約は <see cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" />、<see cref="P:Infragistics.Controls.Editors.XamMaskedInput.Mask" /> などです。明示的な制約を <see cref="P:Infragistics.Controls.Editors.ValueInput.ValueConstraint" /> プロパティで指定されます。</para><seealso cref="P:Infragistics.Controls.Editors.ValueInput.IsValueValid" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.InvalidValueBehavior" /></remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.DoInitialization">
            <summary>適切な初期化作業を実行するために、派生クラスに機会を提供するため、これを OnInitialized から呼び出されます。OnInitialized 実装は、AlwaysInEditMode が True の場合、最後にエディターを編集モードにします。このメソッドはその前に呼び出されます。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.GetFocusSite">
            <summary>エディターのフォーカス サイトを取得します。</summary>
            <returns>フォーカスを受け取る、エディターのテンプレート内の FrameworkElement。</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.InitializeValueProperties">
            <summary>値プロパティを初期化します。xaml で値プロパティのいずれかが設定されている場合には、これはすべての値プロパティを同期します。xaml でのその他の設定が同期される方法に影響がある場合初期化が終わるまで同期を遅延するからです。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.InitializeOriginalValueFromValue">
            <summary>Content プロパティ値を <see cref="P:Infragistics.Controls.Editors.ValueInput.OriginalValue" /> プロパティにコピーするために編集モードを開始する時に呼び出されます。</summary>
            <remarks>デフォルト実装は強制なしで <see cref="P:Infragistics.Controls.Editors.ValueInput.OriginalValue" /> を設定するだけです。</remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.OnFocusSiteChanged">
            <summary>フォーカス サイトが変更されたときに呼び出されます。</summary><seealso cref="P:Infragistics.Controls.Editors.ValueInput.FocusSite" /><seealso cref="M:Infragistics.Controls.Editors.ValueInput.ValidateFocusSite(System.Object,System.Exception@)" /></member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.OnIsDropDownOpenChanged(System.Boolean)">
            <summary>ドロップダウンが開かれたか、閉じられたときに呼び出されます。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.OnIsInEditModeChanged(System.Boolean)">
            <summary>フォーカスがこのエディターに入るか出て行ったときに呼び出されます。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.ProcessKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>キー ダウン イベントを処理します。デフォルト実装は何も実行しません。このクラスは OnKeyDown をオーバーライドし、いくつかのデフォルト処理を実行し、さらに処理すべきキー ダウン処理がある場合は、このメソッドを呼び出します。派生クラスは、OnKeyDown の代わりにこのメソッドをオーバーライドすることを意図します。</summary>
            <param name="e">キー イベントの引数。</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.RevertValueBackToOriginalValue">
            <summary>編集モードを終了して変更を受け付けない時に呼び出されます。</summary>
            <remarks>
            <para class="body">デフォルト実装は強制なしで値を <see cref="P:Infragistics.Controls.Editors.ValueInput.OriginalValue" /> に設定するだけです。</para>
            <para class="body">OriginalValue がどのように使用されるかの詳細については、<see cref="P:Infragistics.Controls.Editors.ValueInput.OriginalValue" /> を参照してください。</para><seealso cref="P:Infragistics.Controls.Editors.ValueInput.OriginalValue" /></remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.ValidateFocusSite(System.Object,System.Exception@)">
            <summary>フォーカス サイトを検証します。フォーカス サイトが受け入れられると True を返します。</summary>
            <param name="focusSite">検証されるフォーカス サイト。</param>
            <param name="errorMessage">フォーカス サイトが無効である場合、この出力パラメーターは関連するエラー メッセージを指定します。</param>
            <returns>フォーカス サイトが有効ならば True、そうでなければ False。</returns>
            <remarks>
            <para class="body">ValidateFocusSite メソッドは、コントロール テンプレートの PART_FocusSite という名前の要素が値エディター用の有効なフォーカス サイトであることを保証するために呼び出されます。デフォルトの実装はフォーカス サイトが FrameworkElement または FrameworkContentElement のどちらであるかを確認します。派生値エディターは、フォーカス サイトを制限するために、このメソッドをオーバーライドすることができます。</para><seealso cref="P:Infragistics.Controls.Editors.ValueInput.FocusSite" /></remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.ValidateCurrentValue(System.Exception@)">
            <summary>エディターの現在の値を検証します。このメソッドは、現在の値のエディター特有の検証を実行するために、エディターによって呼び出されます。</summary>
            <returns>値が有効ならば True、そうでなければ False。</returns>
            <remarks>
            <para class="body"><b>ValidateCurrentValue</b> メソッドは、エディターの現在の値が有効であるかどうかを判断するためにエディターによって呼び出されます。このメソッドを使用することによって、<see cref="P:Infragistics.Controls.Editors.ValueInput.IsValueValid" /> プロパティの値を更新します。派生されたエディターはエディター固有の検証を実行するためにこのメソッドをオーバーライドできます。</para>
            <para class="body">ユーザーが入力した値が無効の場合、ユーザーがエディターを離れようとすると、<see cref="P:Infragistics.Controls.Editors.ValueInput.InvalidValueBehavior" /> プロパティの設定に基づいてエディターは動作します。</para><seealso cref="P:Infragistics.Controls.Editors.ValueInput.IsValueValid" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.InvalidValueBehavior" /></remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.SetVisualState(System.Boolean)">
            <summary>エディターの VisualStates を設定するために呼び出されます。</summary>
            <param name="useTransitions">トランジションを使用するかどうかを決定します。</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.UpdateVisualStates">
            <summary>コントロールの表示状態を設定するために呼び出されます。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.UpdateVisualStates(System.Boolean)">
            <summary>コントロールの表示状態を設定するために呼び出されます。</summary>
            <param name="useTransitions">トランジションを使用するかどうかを決定します。</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.BeginSyncValueProperties">
            <summary>値プロパティ（Value、Text、DisplayText、SelectedItem など）の同期を開始します。このメソッドは、値プロパティ変更通知の発生を延期します。すべての値プロパティが同期された後ですべての通知が発生する必要があるからです。このような方法で遅延させる必要がある値プロパティ変更通知を発生させるためには、RaiseValuePropertyChangedEvent メソッドを使用する必要があります。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.ConsiderIsInEditMode(System.String,System.Boolean)">
            <summary>コンテキスト メニューを開いている状態であっても、あるいはエディターからフォーカスを奪うようなドロップダウン メニューを開いている状態であっても、論理的にはエディターはまだ編集モードにあり、フォーカスを保持しているものとみなされます。このメソッドは、フォーカスの位置に関係なくエディターを編集モードにあるとみなされるようにする状態を追跡するために使用されます。</summary>
            <param name="stateName"></param>
            <param name="state"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.EndSyncValueProperties">
            <summary>値プロパティの同期を終了し、延期している値プロパティ変更通知を発生させます。詳細は、<see cref="M:Infragistics.Controls.Editors.ValueInput.BeginSyncValueProperties" /> を参照してください。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.HasValueChangedInternal(System.Boolean)">
            <summary>編集モードに入るときから、エディターの値が変更されたかどうかを示す値を取得します。</summary>
            <param name="compareWithOriginalValue">True の場合、元の値が現在の値と同じであることを確認します。同じの場合、False を返します。</param>
            <returns>値が変更された場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.RaiseValuePropertyChangedEvent(Infragistics.Controls.Editors.Primitives.IRaiseEventDefinition)">
            <summary>指定した値プロパティ変更通知を発生させます。値プロパティの同期が実行中の場合には、同期が完了するまでイベントの発生は遅延します。</summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.InitializeCachedPropertyValues">
            <summary>このオブジェクトの依存プロパティ メタデータを取得し、対応するプロパティのメタデータの DefaultValue を取得して、依存プロパティの値をキャッシュするために使用される変数を初期化します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.ConvertTextToValue(System.String,System.Object@,System.Exception@)">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueInput.ValueToTextConverterResolved" /> を使用して、指定したテキストを値タイプに変換します。このメソッドは一般的にユーザーによって修正されたテキストを ValueType に変換するために呼び出されます。</summary>
            <param name="text">変換するテキスト。</param>
            <param name="value">この出力パラメーターは、変換された値に設定されます。</param>
            <param name="error">変換が失敗すると、エラーはエラーを示す値に設定されます。</param>
            <returns>変換が成功すれば True、そうでなければ False。</returns>
            <remarks>
            <p class="body">ConvertTextToValue は、<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /> プロパティに指定されたオブジェクト タイプにテキストを変換するのに使用されます。このメソッドは一般的に <see cref="P:Infragistics.Controls.Editors.ValueInput.Value" /> プロパティから返される値にテキストでユーザー入力を変換します。Value プロパティは、ValueType プロパティによって指定されたタイプのオブジェクトを返します。</p>
            <p class="body">たとえば、<see cref="T:Infragistics.Controls.Editors.XamMaskedInput" /> の ValueType プロパティが DateTime タイプに設定されていて、ユーザーが「1/1/07」を入力した場合、このメソッドはテキスト値を DateTime オブジェクトに変換するために呼び出されます。</p>
            <p class="body"><b>注：</b> 一般的にこのメソッドを直接呼び出す必要はありません。このメソッドは、テキストと値の間の必要な変換を実行するために ValueInput 自身によって自動的に呼び出されるからです。</p>
            <p class="body"><b>注:</b> テキストと値の間の変換にデフォルト変換ロジックをオーバーライドしたい場合、<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueToTextConverter" /> および <see cref="P:Infragistics.Controls.Editors.TextInputBase.ValueToDisplayTextConverter" /> プロパティを設定します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.ConvertValueToText(System.Object,System.String@,System.Exception@)">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueInput.ValueToTextConverterResolved" /> を使用して、指定した値をテキストに変換します。このメソッドは、エディターが編集モードの時にエディターの値を表示するために使用されます。</summary>
            <param name="value">変換する値。</param>
            <param name="text">この出力パラメーターは、変換されたテキストに設定されます。</param>
            <param name="error">変換が失敗すると、エラーはエラーを示す値に設定されます。</param>
            <returns>変換が成功すれば True、そうでなければ False。</returns>
            <remarks>
            <p class="body">ConvertValueToText は、値をテキストに変換するために使用されます。このメソッドは一般的に （<see cref="P:Infragistics.Controls.Editors.ValueInput.Value" /> プロパティによって指定された） エディターの値を、エディターが編集モードに入る時にユーザーが編集できるテキストに変換するために使用されます。編集モードではない場合、<see cref="M:Infragistics.Controls.Editors.TextInputBase.ConvertValueToDisplayText(System.Object,System.String@,System.Exception@)" /> メソッドが使用されてエディターに表示されるテキストに値を変換します。<see cref="P:Infragistics.Controls.Editors.ValueInput.Text" /> プロパティの戻り値はこのメソッドが変換するテキストに対応しますが、<see cref="P:Infragistics.Controls.Editors.TextInputBase.DisplayText" /> プロパティの戻り値は、ConvertValueToDisplayText メソッドが変換するテキストに対応します。</p>
            <p class="body"><b>注：</b>DisplayText および ConvertValueToDisplayText メソッドは、<see cref="T:Infragistics.Controls.Editors.TextInputBase" /> クラスに定義されます。これは、表示テキスト変換が、そのすべてが TextInputBase から派生するテキスト ベースのエディターのみに適用可能であるためです。</p>
            <p class="body">たとえば、<see cref="T:Infragistics.Controls.Editors.XamMaskedInput" /> の ValueType プロパティが DateTime タイプに設定されて、<see cref="P:Infragistics.Controls.Editors.ValueInput.Value" /> プロパティが「01/01/2007」の DateTime インスタンスに設定されます。ユーザーが編集モードに入ると、このメソッドが呼び出され DateTime 値を文字列に変換します。エディターが編集モードでない場合は <see cref="M:Infragistics.Controls.Editors.TextInputBase.ConvertValueToDisplayText(System.Object,System.String@,System.Exception@)" /> が使用されます。このメソッドと ConvertValueToDisplayText の違いは、ConvertValueToDisplayText が <see cref="P:Infragistics.Controls.Editors.ValueInput.FormatProvider" /> および <see cref="P:Infragistics.Controls.Editors.ValueInput.Format" /> プロパティ設定を考慮するのに対して、ConvertValueToText は考慮しない点です。</p>
            <p class="body"><b>注：</b> 一般的にこのメソッドを直接呼び出す必要はありません。このメソッドは、テキストと値の間の必要な変換を実行するために ValueInput 自身によって自動的に呼び出されるからです。</p>
            <p class="body"><b>注:</b> テキストと値の間の変換にデフォルト変換ロジックをオーバーライドしたい場合、<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueToTextConverter" /> および <see cref="P:Infragistics.Controls.Editors.TextInputBase.ValueToDisplayTextConverter" /> プロパティを設定します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.ProcessPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>プロパティ値を変更すると呼び出されます</summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.RevalidateCurrentValue">
            <summary>現在の値を検証して、IsValueValid プロパティを更新します。ただし、これはイベントを発生しない、またはエラー メッセージを表示しないことに注意してください。現在の値が有効であることを確認して、それを基づいて IsValueValid プロパティを更新します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInput.SyncValuePropertiesOverride(System.Windows.DependencyProperty,System.Object,System.Exception@)">
            <summary>値およびテキスト プロパティを同期化するために呼び出されます。派生されたクラスに固有の値プロパティ (例えば、xamCheckEditor は IsChecked プロパティを持つこと) があれば、このメッソドをオーバーライドできます。Value、Text、および他のエディター固有のプロパティは同期化になる必要があります。デフォルトの実装は Value および Text プロパティを同期化されます。</summary>
            <param name="prop">変化したプロパティ。</param>
            <param name="newValue">プロパティの新しい値。</param>
            <param name="error">同期化が失敗した場合 (タイプ変換または新しい値の同期化での問題など)、これはエラー メッセージに設定されます。</param>
            <returns>新しい値が有効であるかどうかを示す値。False が返された場合、IsValueValid プロパティは False に設定されます。</returns>
        </member>
        <member name="E:Infragistics.Controls.Editors.ValueInput.ValidationError">
            <summary>ユーザーが無効な値でエディターから離れようとする時に発生します。</summary>
            <remarks>
            <para class="body">エディターの値を変更後にユーザーがコントロールから離れようとする時に、エディターはユーザー入力を検証します。変更された値は無効である場合、EditModeValidationError イベントが発生されます。入力したテキストが <see cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /> に解析できないか、<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueConstraint" /> で指定された制限を満たさない場合、エディターは値を無効であると</para>
            <para class="body">詳細は、<see cref="P:Infragistics.Controls.Editors.ValueInput.InvalidValueBehavior" /> および <see cref="P:Infragistics.Controls.Editors.ValueInput.IsValueValid" /> を参照してください。</para>
            </remarks><seealso cref="P:Infragistics.Controls.Editors.ValueInput.ValueConstraint" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.IsValueValid" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.InvalidValueBehavior" /><seealso cref="T:Infragistics.Controls.Editors.EditModeValidationErrorEventArgs" /></member>
        <member name="P:Infragistics.Controls.Editors.ValueInput.AlwaysValidateResolved">
            <summary>読み取り専用。<see cref="P:Infragistics.Controls.Editors.ValueInput.AlwaysValidate" /> プロパティの解決された値を取得します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueInput.CultureInfoResolved">
            <summary>書式プロバイダーの設定または言語の設定から解決されたカルチャー情報を返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueInput.FormatProviderResolved">
            <summary>解決された書式プロバイダーを返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueInput.InternalIsInitialized">
            <summary>_initialized フラグの値を返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueInput.ValueToTextConverterResolved">
            <summary>エディターの値をエディター テキストに変換するために使用する解決済みのコンバーター。</summary><seealso cref="P:Infragistics.Controls.Editors.ValueInput.ValueToTextConverter" /><seealso cref="P:Infragistics.Controls.Editors.TextInputBase.ValueToDisplayTextConverter" /></member>
        <member name="P:Infragistics.Controls.Editors.ValueInput.AlwaysValidate">
            <summary>ユーザーが値を変更しない場合、エディターの値を検証するかどうかを指定します。デフォルト値は <b>False</b> です。エディターは、ユーザーが値を変更されたのみときに検証されます。</summary>
            <remarks>
            <para class="body">デフォルトで、値が無効かどうかと関係なく、ユーザーが値を変更された時のみに検証されます。ユーザーが値を変更せずに、エディターが初期化された無効な値を持つエディターを離れようとする場合、検証されません。この動作を変更するには、<b>AlwaysValidate</b> を True に設定します。この場合、ユーザーが値を変更されるかどうかと関係なく、<see cref="P:Infragistics.Controls.Editors.ValueInput.InvalidValueBehavior" /> プロパティに基づいて、エディターの値が無効である限り、検証します。</para>
            <para class="body">たとえば、エディターの ValueConstraint の MinLength 制約は 5 に設定します。エディターを MinLength 制約の 5 を満たさない「a」の文字列によって初期化します。現在の値は値制約を満たさないので、エディターの IsValueValid プロパティは <i>false</i> に設定されます。ユーザーが値を変更しないでエディターから離れようとすると、エディターはデフォルトで検証動作せずに、ユーザーに無効な値であることを知らせます。ただし、<i>AlwaysValidate</i> プロパティを <i>Ｔrue</i> に設定すると、エディターは検証動作を実行します。ユーザーが値を変更する場合、このプロパティの設定と関係なくエディターを検証します。</para>
            </remarks><seealso cref="P:Infragistics.Controls.Editors.ValueInput.ValueConstraint" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.IsValueValid" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.InvalidValueBehavior" /><seealso cref="E:Infragistics.Controls.Editors.ValueInput.ValidationError" /></member>
        <member name="P:Infragistics.Controls.Editors.ValueInput.IsInEditMode">
            <summary>取得</summary><seealso cref="F:Infragistics.Controls.Editors.ValueInput.IsInEditModeProperty" /></member>
        <member name="P:Infragistics.Controls.Editors.ValueInput.Value">
            <summary>エディターの値を取得または設定します。</summary>
            <remarks>
            <para class="body"><see cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /> プロパティは、<b>Value</b> プロパティによって返される値および予想される値のタイプを指定します。たとえば、<b>ValueType</b> を <i>Decimal</i> に設定すると、<b>Value</b> プロパティは小数値を返します。ユーザー入力は、Value プロパティから戻る前に 10 進数に変換されます。<see cref="P:Infragistics.Controls.Editors.ValueInput.Text" /> プロパティは一方で、値のテキスト表現を常に返します。</para>
            <para class="note"><b>注： </b><b>Value</b> プロパティの設定は <see cref="P:Infragistics.Controls.Editors.ValueInput.Text" /> プロパティも更新します。</para>
            <para class="note"><b>注:</b> ユーザーが <see cref="T:Infragistics.Controls.Editors.ValueInput" /> のコンテンツを入力/変更すると、<see cref="P:Infragistics.Controls.Editors.ValueInput.Text" /> および <b>Value</b> プロパティは現在のコンテンツを反映するために同時に更新されます。ユーザー入力が関連付けられた <see cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /> に解析できない場合、<b>Text</b> プロパティは更新されますが、<b>Value</b> プロパティは最後に解析された値を保持します。その場合、<see cref="P:Infragistics.Controls.Editors.ValueInput.IsValueValid" /> プロパティは <b>False</b> を返し、ユーザー入力が無効であることを示します。</para><seealso cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.Text" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.ValueConstraint" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.IsValueValid" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.HasValueChanged" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.OriginalValue" /></remarks>
        </member>
        <member name="E:Infragistics.Controls.Editors.ValueInput.ValueChanged">
            <summary>Value プロパティが変更されるか、ユーザーがエディターの内容を変更すると発生します。</summary>
            <remarks>
            <para class="body"><see cref="P:Infragistics.Controls.Editors.ValueInput.Value" /> プロパティが変更されるか、ユーザーがエディターの内容を変更すると、ValueChanged イベントが発生します。ユーザーがエディターのコンテンツを変更すると、Value プロパティは新しいコンテンツを反映するために更新されます。ただし、エディターの新しいコンテンツが <see cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /> を解析できない場合、エディターは Value プロパティの更新に失敗する可能性があります。たとえば、ValueType が Double などの数値タイプに設定され、ユーザーが非数値を入力する場合、入力された値は Double に解析できません。したがって、Value プロパティは更新されません。ただし、ValueChanged イベントは発生します。</para><seealso cref="P:Infragistics.Controls.Editors.ValueInput.IsValueValid" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.Value" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.Text" /></remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueInput.Text">
            <summary>エディターの値をテキストとして取得または設定します。</summary>
            <remarks>
            <para class="body"><b>Text</b> プロパティの設定は <b>Value</b> プロパティも更新します。新しいテキストが値タイプ（<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" />）に解析できない場合、<b>Value</b> プロパティは更新されません。</para>
            <para class="body"><b>注：</b> ユーザーがコンテンツを入力/変更すると、Text および Value プロパティは現在のコンテンツを反映するために同時に更新されます。ユーザー入力が値タイプに解析できない場合、Text プロパティは更新されますが、Value プロパティは最後に解析された値を保持します。ただし、そのような場合、<see cref="P:Infragistics.Controls.Editors.ValueInput.IsValueValid" /> プロパティは False を返し、ユーザー入力が無効であることを示します。</para><seealso cref="P:Infragistics.Controls.Editors.ValueInput.Value" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.ValueConstraint" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.IsValueValid" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.HasValueChanged" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.OriginalValue" /></remarks>
        </member>
        <member name="E:Infragistics.Controls.Editors.ValueInput.TextChanged">
            <summary>プロパティ &apos;Text&apos; が変更する時に発生します。</summary>
            <remarks>
            <para class="body"><see cref="P:Infragistics.Controls.Editors.ValueInput.Text" /> プロパティが変更されるか、ユーザーがエディターの内容を変更すると、TextChanged イベントが発生します。ユーザーがエディターのコンテンツを変更すると、Text プロパティは新しいコンテンツを反映するために更新されます。</para><seealso cref="P:Infragistics.Controls.Editors.ValueInput.Text" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.Value" /><seealso cref="E:Infragistics.Controls.Editors.ValueInput.ValueChanged" /></remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueInput.ValueType">
            <summary>このエディターを操作する値のタイプを取得または設定します。</summary>
            <remarks>
            <para class="body"><b>ValueType</b> は、このエディターを操作する値のタイプを指定します。Value プロパティは、このタイプのオブジェクトを返します。ユーザー入力もそれに応じて検証されます。これは、ユーザーがテキストを入力し、テキストがこのタイプのオブジェクトに解析される時です。解析が失敗すると、入力は無効であると考えられます。解析が成功すると、<see cref="P:Infragistics.Controls.Editors.ValueInput.Value" /> プロパティは解析値で更新されます。</para>
            <para class="body"><see cref="P:Infragistics.Controls.Editors.ValueInput.IsValueValid" /> プロパティを使用して、現在の入力が有効かどうかを確認できます。入力が有効と見なされるには、エディターは入力テキストを <i>ValueType</i> のオブジェクトに解析する必要があり、<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueConstraint" /> プロパティで指定した制限を満たす必要があります。</para><seealso cref="P:Infragistics.Controls.Editors.ValueInput.Value" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.Text" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.ValueConstraint" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.IsValueValid" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.HasValueChanged" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.ValueToTextConverter" /><seealso cref="P:Infragistics.Controls.Editors.TextInputBase.ValueToDisplayTextConverter" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.ValueTypeResolved" /></remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueInput.ValueTypeName">
            <summary>このエディターを操作する値の型の名前を取得または設定します。</summary>
            <remarks>
            <para class="body">このプロパティは、型を xaml で指定し、同じ文字列を指定すると、SL と WPF の両方で、<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueTypeResolved" /> で適切な型が解決されるようにするために公開されています。このプロパティは、完全修飾型名を解決できることに加え、「DateTime」、「Int32」などの一般的な型の短い名前と、それに対応するnull 許容型「DateTime?」、「Int32?」、「Double?」などをサポートしています。</para>
            <para class="note"><b>注:</b> <see cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /> が指定されている場合、このプロパティは無視されます。</para>
            </remarks><seealso cref="F:Infragistics.Controls.Editors.ValueInput.ValueTypeNameProperty" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.ValueTypeResolved" /></member>
        <member name="P:Infragistics.Controls.Editors.ValueInput.ValueTypeResolved">
            <summary>解決された値の型を取得します。</summary>
            <remarks>
            <para class="note"><b>注:</b> 解決順序は次のとおりです。<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /> プロパティが設定されている場合はそれが優先されます。そうでない場合、<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueTypeName" /> が指定されている場合は、型の解決が試みられます。最後に、エディターのデフォルトの型が使用されます。</para>
            </remarks><seealso cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.ValueTypeName" /><seealso cref="F:Infragistics.Controls.Editors.ValueInput.ValueTypeResolvedProperty" /></member>
        <member name="P:Infragistics.Controls.Editors.ValueInput.ValueConstraint">
            <summary>エディター入力の制限を取得または設定します。デフォルト値は <b>null</b> です。</summary>
            <remarks>
            <para class="body"><b>注：</b> このプロパティのデフォルト値は <b>null</b> です。このプロパティを <see cref="P:Infragistics.Controls.Editors.ValueInput.ValueConstraint" /> オブジェクトのインスタンスに設定する必要があります。</para>
            <para class="body"><b>ValueConstraint</b> は、ユーザーがエディターに入力できることを制限するために使用されます。正確に言うと、<i>ValueConstraint</i> で指定したひとつまたは複数の基準を満たさない場合、ユーザー入力は無効であるとエディターは考えます。<see cref="P:Infragistics.Controls.Editors.ValueInput.IsValueValid" /> プロパティは、エディターが現在の値が有効であると考えるかどうかを確認するために使用できます。</para>
            <para class="body">無効な値がエディターに入力されると、さまざまな設定に基づく動作的な意味があります。たとえば、デフォルトでは、現在の入力が無効であれば、エディターは編集モードを終了しません。エディターによって実行されるアクションは、<see cref="P:Infragistics.Controls.Editors.ValueInput.InvalidValueBehavior" /> プロパティを使用して制御できます。</para><seealso cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.Value" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.IsValueValid" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.InvalidValueBehavior" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.HasValueChanged" /></remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueInput.InvalidValueBehavior">
            <summary>ユーザーが無効な値でエディターから離れようとする時に実行されるアクションを指定します。</summary>
            <remarks>
            <para class="body"><b>InvalidValueBehavior</b> は、ユーザーが無効な値を入力後にエディターから離れようとする時に実行されるアクションを指定します。</para>
            <para class="body">エディターの値がエディターによって無効と考えられるさまざまなケースがあります。入力されたテキストが <see cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /> プロパティによって指定されたタイプのオブジェクトに解析できない場合、値は無効です。たとえば、ValueType が <i>Int32</i> またはその他の任意の数値タイプに設定され、ユーザーが非数値のテキストを入力する場合には、テキストは値タイプに解析できません。その結果、エディターは入力無効と考慮します。</para>
            <para class="body">値が無効であると考慮できる他の方法は、入力された値が <see cref="P:Infragistics.Controls.Editors.ValueInput.ValueConstraint" /> オブジェクトで指定された制限を満たすことができない場合です。たとえば、<see cref="P:Infragistics.Controls.Editors.ValueConstraint.MinInclusive" /> が 10 に指定され、入力された値が 8 の場合、この値は制限を満たさず、無効と見なされます。</para><seealso cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.ValueConstraint" /><seealso cref="P:Infragistics.Controls.Editors.ValueConstraint.Nullable" /></remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueInput.ValueToTextConverter">
            <summary>テキストと値の間の変換で使用されるコンバーターを指定します。</summary>
            <remarks>
            <para class="body">&apos;string&apos; と <b>ValueType</b> の間の変換はデフォルトで内蔵の変換ロジックを使用して実行されます。<b>ValueToDisplayTextConverter</b> および <see cref="P:Infragistics.Controls.Editors.ValueInput.ValueToTextConverter" /> を設定して変換ロジックをオーバーライドできます。エディターが編集モードの時は <b>ValueToTextConverter</b> が使用されますが、エディターが編集モードではない時は <b>ValueToDisplayTextConverter</b> が使用されます。</para>
            <para class="body">注： エディターは、&apos;string&apos; 以外のタイプの値を編集できます。例えば、<i>XamTextEditor</i> は <i>DateTime</i> のタイプの値を編集できます。<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /> プロパティを使用してエディターが編集する値のタイプを指定できます。.</para>
            <para class="body">デフォルトのビルトイン変換ロジックはほとんどの場合で十分ですが、ユーザー入力を値タイプ オブジェクトに変換するためにカスタム ロジックを提供するには、この機能を使用します。内蔵の変換ロジックがどのようにテキストをカスタム オブジェクト タイプに変換したらよいかが分からないカスタム オブジェクトを編集する場合に値の特定の側面を表すテキストで特定の文字の入力をサポートしたい場合、たとえば、&apos;2k&apos; の &apos;k&apos; を 1000 に解釈させたい場合や、DateTime の編集時に明日の日付として +1d を解釈させたい場合などです。</para><seealso cref="P:Infragistics.Controls.Editors.TextInputBase.ValueToDisplayTextConverter" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.FormatProvider" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.Format" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.Value" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.Text" /><seealso cref="P:Infragistics.Controls.Editors.TextInputBase.DisplayText" /></remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueInput.IsValueValid">
            <summary>エディターの現在の値が有効であるかどうかを指定します。</summary>
            <remarks>
            <para class="body">このプロパティは、エディターが現在の値が有効であるかどうかを確認するために使用できます。<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueConstraint" /> オブジェクトに強制できる場合、そして <see cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /> オブジェクトによって指定された制限を満たす場合、値は有効と見なされます。</para>
            <para class="body">ユーザー入力が <i>ValueType</i> タイプのオブジェクトに解析できない場合、<see cref="P:Infragistics.Controls.Editors.ValueInput.Value" /> プロパティは最後の有効値を返します。ただし、<see cref="P:Infragistics.Controls.Editors.ValueInput.Text" /> プロパティはユーザー入力を返します。</para><seealso cref="P:Infragistics.Controls.Editors.ValueInput.Value" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.Text" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.ValueConstraint" /></remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueInput.HasValueChanged">
            <summary>編集モード中にコンテンツが変更されるかどうかを決定します（読み取り専用）。</summary>
            <remarks>
            <para class="body">エディターが編集モードを離れると、このプロパティは False にリセットされます。つまり、エディターは編集モード中は有効です。編集モードでない時、このプロパティは False を返します。</para>
            </remarks><seealso cref="E:Infragistics.Controls.Editors.ValueInput.ValueChanged" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.OriginalValue" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.Value" /></member>
        <member name="P:Infragistics.Controls.Editors.ValueInput.InvalidValueErrorInfo">
            <summary>エディターの値が無効の場合、無効の理由を含むエラー情報を返します。</summary>
            <remarks>
            <para class="body">エディターの値が無効の場合、<see cref="P:Infragistics.Controls.Editors.ValueInput.IsValueValid" /> プロパティは False を返します。値が無効である理由についてのエラー情報を取得するには、<see cref="T:Infragistics.Controls.Editors.ValidationErrorInfo" /> クラスのインスタンスを返す <see cref="P:Infragistics.Controls.Editors.ValueInput.InvalidValueErrorInfo" /> プロパティを使用してください。</para>
            </remarks><seealso cref="P:Infragistics.Controls.Editors.ValueInput.IsValueValid" /><seealso cref="T:Infragistics.Controls.Editors.ValidationErrorInfo" /></member>
        <member name="P:Infragistics.Controls.Editors.ValueInput.IsNullable">
            <summary>ユーザーが値エディターのすべてのコンテンツを削除できるかどうかを示します。デフォルトは <b>true</b> です。</summary>
            <remarks>
            <para class="body"><b>IsNullable</b> は、null エディター値（空のコンテンツ）が有効な入力と見なされることをエディターに示します。無効な入力は <see cref="P:Infragistics.Controls.Editors.ValueInput.InvalidValueBehavior" /> プロパティ設定によって処理されます。</para><seealso cref="P:Infragistics.Controls.Editors.TextInputBase.NullText" /></remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueInput.IsReadOnly">
            <summary>ユーザーがエディターの値を変更することが許されるかどうかを指定します。既定値は <b>false</b> です。</summary>
            <remarks>
            <para class="body"><b>IsReadOnly</b> が <b>True</b> に設定される場合、ユーザーはエディターの値を変更することができません。ただし、たとえば、<see cref="P:Infragistics.Controls.Editors.ValueInput.Value" /> プロパティを介してコードでエディター値を修正することが依然として可能であることに注意してください。このプロパティのデフォルト値は <b>False</b> です。</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueInput.OriginalValue">
            <summary>編集モードではオリジナル値を取得します (読み取り専用)</summary>
            <remarks>
            <para class="body">ユーザーがエディターに入る時は、<b>OriginalValue</b> プロパティは元の値を維持します。これは、ユーザーが編集作業をキャンセルする場合、オリジナル値に戻すために使用されます。</para>
            </remarks><seealso cref="F:Infragistics.Controls.Editors.ValueInput.OriginalValueProperty" /></member>
        <member name="P:Infragistics.Controls.Editors.ValueInput.FormatProvider">
            <summary>値とテキストの間の変換で使用されるフォーマット プロバイダーを指定します。</summary>
            <remarks>
            <para class="body"><b>FormatProvider</b> は、テキストと値の阿大で変換するために使用されます。エディターはこれを <see cref="P:Infragistics.Controls.Editors.ValueInput.Format" /> プロパティ設定と一緒に使用して表示目的で値をテキストに変換します。編集時に、<i>FormatProvider</i> のみが使用され、<i>Format</i> プロパティは無視されます。これはフォーマッティング シンボルの整理なしで、値の簡単な編集を容易にします。</para>
            <para class="body"><see cref="P:Infragistics.Controls.Editors.ValueInput.ValueToTextConverter" /> および <see cref="P:Infragistics.Controls.Editors.TextInputBase.ValueToDisplayTextConverter" /> プロパティを使用してカスタム変換ロジックを提供すると、デフォルトの動作を変更できます。</para>
            <para class="body"><b>注:</b> <b>FormatProvider</b> プロパティは、<b>IFormatProvider</b> インターフェイスのタイプです。IFormatProvider は <b>CultureInfo</b> オブジェクトによって実装されます。したがって、このプロパティは、<b>CultureInfo</b> のインスタンス設定できます。これらはインターフェイスも作成するので、<b>DateTimeFormatInfo</b> または <b>NumberFormatInfo</b> を使用することもできます。</para><seealso cref="P:Infragistics.Controls.Editors.ValueInput.ValueToTextConverter" /><seealso cref="P:Infragistics.Controls.Editors.TextInputBase.ValueToDisplayTextConverter" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.Format" /></remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueInput.Format">
            <summary>値とテキストの間の変換で使用されるフォーマットを指定します。</summary>
            <remarks>詳細は、<see cref="P:Infragistics.Controls.Editors.ValueInput.FormatProvider" /> プロパティを参照してください。</remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueInput.DefaultValueToTextConverter">
            <summary>値とテキスト間で変換するために使用されるデフォルト コンバーターを返します。</summary>
            <remarks>
            <para class="body">DefaultValueToTextConverter は、値とテキスト間の変換のためのデフォルト ロジックを提供する値コンバーターを返します。派生エディター クラスは、エディター固有の変換ロジックを返すために、このプロパティをオーバーライドできます。カスタム変換ロジックを提供したい場合、<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueToTextConverter" /> および <see cref="P:Infragistics.Controls.Editors.TextInputBase.ValueToDisplayTextConverter" /> プロパティを使用してください。</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueInput.DefaultValueType">
            <summary>エディターの規定値の型を返します。<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /> プロパティが設定されていない場合、<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueTypeResolved" /> によりこの型が返されます。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueInput.FocusSite">
            <summary>エディターにフォーカスが移動したときにキーボード フォーカスを受け取る要素を返します。</summary><seealso cref="M:Infragistics.Controls.Editors.ValueInput.OnFocusSiteChanged" /></member>
        <member name="M:Infragistics.Controls.Editors.TextInputBase.#ctor">
            <summary>新しい <see cref="T:Infragistics.Controls.Editors.TextInputBase" /> を初期化します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.TextInputBase.DoInitialization">
            <summary>オーバーライド。適切な初期化作業を実行するために、派生クラスに機会を提供するため、これを OnInitialized から呼び出されます。OnInitialized 実装は、AlwaysInEditMode が True の場合、最後にエディターを編集モードにします。このメソッドはその前に呼び出されます。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.TextInputBase.ProcessPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>オーバーライド。プロパティ値を変更すると呼び出されます</summary>
            <param name="e">イベント引数。</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.TextInputBase.SyncValuePropertiesOverride(System.Windows.DependencyProperty,System.Object,System.Exception@)">
            <summary>オーバーライド。値およびテキスト プロパティを同期化するために呼び出されます。派生されたクラスに固有の値プロパティ (例えば、xamCheckEditor は IsChecked プロパティを持つこと) があれば、このメッソドをオーバーライドできます。Value、Text、および他のエディター固有のプロパティは同期化になる必要があります。デフォルトの実装は Value および Text プロパティを同期化されます。</summary>
            <param name="prop">変化したプロパティ。</param>
            <param name="newValue">プロパティの新しい値。</param>
            <param name="error">同期化が失敗した場合 (タイプ変換または新しい値の同期化での問題など)、これはエラー メッセージに設定されます。</param>
            <returns>新しい値が有効であるかどうかを示す値。False が返された場合、IsValueValid プロパティは False に設定されます。</returns>
        </member>
        <member name="F:Infragistics.Controls.Editors.TextInputBase.DisplayTextPropertyKey">
            <summary>DisplayText プロパティ キー。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.TextInputBase.DisplayTextProperty">
            <summary>読み取り専用 <see cref="P:Infragistics.Controls.Editors.TextInputBase.DisplayText" /> 依存プロパティを識別します</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.TextInputBase.NullTextProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.TextInputBase.NullText" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.TextInputBase.ShouldSerializeNullText">
            <summary>NullText プロパティがデフォルト以外の値に設定されている場合、True を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.TextInputBase.ResetNullText">
            <summary>NullText プロパティをデフォルトの状態にリセットします。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.TextInputBase.ValueToDisplayTextConverterProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.TextInputBase.ValueToDisplayTextConverter" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.TextInputBase.ConvertDisplayTextToValue(System.String,System.Object@,System.Exception@)">
            <summary><see cref="P:Infragistics.Controls.Editors.TextInputBase.ValueToDisplayTextConverterResolved" /> を使用することによって、指定した表示テキストを値タイプに変換します。</summary>
            <param name="displayText">変換される表示テキスト。</param>
            <param name="value">この出力パラメーターは、変換された値に設定されます。</param>
            <param name="error">変換が失敗すると、エラーはエラーを示す値に設定されます。</param>
            <returns>変換が成功すれば True、そうでなければ False。</returns>
            <remarks>
            <p class="body">ConvertDisplayTextToValue は、<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /> プロパティに指定されたオブジェクト タイプにテキストを変換するのに使用されます。このメソッドは一般的にエディターでは使用しません。ただし、エディターを使用する他のコントロールが表示テキストを <see cref="P:Infragistics.Controls.Editors.ValueInput.Value" /> プロパティから返す値に変換するために、このメソッドを呼び出します。Value プロパティは、ValueType プロパティによって指定されたタイプのオブジェクトを返します。</p>
            <p class="body"><b>注:</b> このメソッドは、<see cref="P:Infragistics.Controls.Editors.TextInputBase.ValueToDisplayTextConverter" /> が表示テキストを値へ正しく解析するコンバーターに指定されたときのみ成功します。<i>ValueToDisplayTextConverter</i> が指定されていない場合、フレームワークの解析メソッドが使用されます。この場合には、このメッソドの成功は、表示テキストを正しく解析できるかどうかに基づきます。</p>
            <p class="body">表示テキストの解析の例として、<see cref="T:Infragistics.Controls.Editors.XamMaskedInput" /> の ValueType プロパティを DateTime タイプに設定して、表示テキストのパラメーターを「01/01/07」に設定した場合、このメソッドはその日付を表す DateTime オブジェクトを返します。変換はエディターの FormatProvider プロパティに基づいて実行されます。設定しない場合、現在の言語またはカルチャー設定が使用されます。</p>
            <p class="body"><b>注：</b> 一般的に、このメソッドを直接呼び出す必要はありません。このメソッドは、データ プレゼンターなどの外部コントロールで表示テキストと値の間で必要な変換を実行するために使用されます。例えば、データ プレゼンターが、セルに貼り付けるテキストをセル値に変換する場合などに使用されます。</p>
            <p class="body"><b>注:</b> テキストと値の間の変換にデフォルト変換ロジックをオーバーライドしたい場合、<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueToTextConverter" /> および <see cref="P:Infragistics.Controls.Editors.TextInputBase.ValueToDisplayTextConverter" /> プロパティを設定します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.TextInputBase.ConvertValueToDisplayText(System.Object,System.String@,System.Exception@)">
            <summary><b>ValueToDisplayTextConverterResolved</b> を使用してテキストを表示するために、指定した値を変換します。変換が成功すれば True を返します。このメソッドは、エディターが編集モードでない時にエディターの値を表示するために使用されます。</summary>
            <param name="value">変換する値。</param>
            <param name="text">これは、変換されたテキストに設定されます。</param>
            <param name="error">変換が失敗すると、エラーはエラーを示す値に設定されます。</param>
            <returns>成功すれば True で、そうでない場合は False です。</returns>
            <remarks>
            <p class="body">詳細は、<see cref="M:Infragistics.Controls.Editors.ValueInput.ConvertValueToText(System.Object,System.String@,System.Exception@)" /> メソッドの特記事項を参照してください。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.TextInputBase.MouseLeftButtonDown_ToggleDropDownHelper(System.Windows.Input.MouseButtonEventArgs)">
            <summary>これは、マウス クリックの結果エディターが編集モードになった時にドロップダウンを作成するために呼び出されます。エディターが編集モードになると、テンプレートはドロップダウンを切り替えることができません。テンプレートを描画するためにテンプレートが編集から切り替えられたためです。これはフレームワークのマウス処理の妨げとなり、ドロップダウン ボタンがクリックを受け取ることができなくなります。したがって手動で実行する必要があります。このメソッドをそれに使用してください。</summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Controls.Editors.TextInputBase.SyncDisplayText">
            <summary>DisplayText プロパティを値と同期化します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.TextInputBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>オーバーライド。マウスの左ボタンが押されたときに呼び出します。</summary>
            <param name="e">イベント引数。</param>
        </member>
        <member name="P:Infragistics.Controls.Editors.TextInputBase.DefaultValueToDisplayTextConverter">
            <summary>値とテキスト間で変換するために使用されるデフォルト コンバーターを返します。</summary>
            <para class="body">DefaultValueToDisplayTextConverter は、値と表示テキスト間の変換のためのデフォルト ロジックを提供する値コンバーターを返します。派生エディター クラスは、エディター固有の変換ロジックを返すために、このプロパティをオーバーライドできます。カスタム変換ロジックを提供したい場合、<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueToTextConverter" /> および <see cref="P:Infragistics.Controls.Editors.TextInputBase.ValueToDisplayTextConverter" /> プロパティを使用してください。</para>
        </member>
        <member name="P:Infragistics.Controls.Editors.TextInputBase.DisplayText">
            <summary>表示テキストを返します。エディターが編集モードない場合、表示テキストだけが使用されます。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.TextInputBase.NullText">
            <summary>エディターの値が null、そしてエディターが編集モードでない時に表示されるテキスト。デフォルト値は空の文字列です。</summary>
            <remarks>
            <para class="body"><b>NullText</b> は、ユーザーが null 値をエディターに入力できるかどうかを指定しません。これについては、<see cref="P:Infragistics.Controls.Editors.ValueInput.IsNullable" /> プロパティを使用してください。</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.TextInputBase.ValueToDisplayTextConverter">
            <summary>表示テキストと値の間の変換で使用されるコンバーターを指定します。</summary>
            <remarks>
            <para class="body">&apos;string&apos; と <b>ValueType</b> の間の変換はデフォルトで内蔵の変換ロジックを使用して実行されます。<b>ValueToDisplayTextConverter</b> および <see cref="P:Infragistics.Controls.Editors.ValueInput.ValueToTextConverter" /> を設定してデフォルト変換ロジックをオーバーライドできます。エディターが編集モードの時は <b>ValueToTextConverter</b> が使用されますが、エディターが編集モードではない時は <b>ValueToDisplayTextConverter</b> が使用されます。</para>
            <para class="body">注： エディターは、&apos;string&apos; 以外のタイプの値を編集できます。例えば、<i>XamTextEditor</i> は <i>DateTime</i> のタイプの値を編集できます。<see cref="T:System.ValueType" /> プロパティを使用してエディターが編集する値のタイプを指定できます。.</para>
            <para class="body">ほとんどの場合、デフォルト変換ロジックは <see cref="P:Infragistics.Controls.Editors.ValueInput.FormatProvider" /> および <see cref="P:Infragistics.Controls.Editors.ValueInput.Format" /> フォーマット プロパティと共にさまざまなフォーマット機能の提供で十分です。</para>
            <para class="body">ビルトインのデフォルト変換ロジックは殆どの場合で十分ですが、値を表示するテキストに変換するためにカスタム ロジックを提供するには、この機能を使用します。これが必要とされる例は、今日や昨日の日付のような値をそれぞれ &apos;Tomorrow&apos; と &apos;Yesterday&apos; という単語で提示したい場合、または <see cref="P:Infragistics.Controls.Editors.ValueInput.FormatProvider" /> および <see cref="P:Infragistics.Controls.Editors.ValueInput.Format" /> プロパティ設定を使用して、指定できなかった任意の種類のカスタム フォーマッティングを適用する場合です。</para><seealso cref="P:Infragistics.Controls.Editors.ValueInput.ValueToTextConverter" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.FormatProvider" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.Format" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.Value" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.Text" /><seealso cref="P:Infragistics.Controls.Editors.TextInputBase.DisplayText" /></remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.TextInputBase.ValueToDisplayTextConverterResolved">
            <summary>エディターの値をエディターの表示テキストに変換するために使用する解決済みのコンバーター。</summary><seealso cref="P:Infragistics.Controls.Editors.ValueInput.ValueToTextConverter" /><seealso cref="P:Infragistics.Controls.Editors.TextInputBase.ValueToDisplayTextConverter" /></member>
        <member name="T:Infragistics.Controls.Editors.Primitives.Utils">
            <summary>ヘルパー ルーチンのあるクラス。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.Utils.Exists(System.Collections.IEnumerable,System.Object)">
            <summary>この項目が指定した列挙可能なものに存在する場合、True を返します。</summary>
            <param name="e"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.Utils.GetIsInEditModeHelper(System.Windows.DependencyObject)">
          <summary>
             XamGrid は、セル要素に EditUtilities.IsInEditMode 添付プロパティを設定します。エディターが入力を検証するかどうかを示すために使用されます。
          </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.Utils.GetTextToValueConversionError(System.Type,System.String)">
            <summary>ユーザー入力が指定されたターゲット タイプに変換できないときに表示するエラー メッセージを取得します。</summary>
            <param name="targetType"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.Utils.IsInfinityOrNaN(System.Object)">
            <summary>指定した値は double、float と infinity または NaN の場合は、true を返します。</summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.Utils.IsMouseOverElement(System.Windows.DependencyObject,System.Windows.Input.MouseEventArgs)">
            <summary>指定したマウス イベント引数に関連付けられたマウス位置が指定した要素内にあるかどうかを示す値を返します。</summary>
            <param name="element"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.Utils.IsNumericType(System.Type)">
            <summary>指定した System.Type が数値型かどうかを判断します。</summary>
            <param name="type">テストする System.Type。</param>
            <returns>type が数値型の場合は True。</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.Utils.IsValueEmpty(System.Object)">
            <summary>指定された値が null、DBNull、空の文字列、または DependencyProperty.UnsetValue の場合、True を返します。</summary>
            <param name="val">テストする値</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.ValidatedObservableCollection`1">
            <summary>コレクションに追加されている項目を検証するために、ユーザーがデリゲートを指定できる監視可能なコレクション。</summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.HorizontalToTextAlignmentConverter">
            <summary>HorizontalAlignment を TextAlignment に変換するコンバーター。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Primitives.MaskCharConverter">
            <summary>XamMaskedInput の PadChar および PromptChar プロパティにおける TypeConverter 属性として使用されます。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.MaskCharConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>ソースのデータ型が文字列である場合は true を返します。それ以外の場合は False を返します。</summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.MaskCharConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>説明のデータ型がキャラクターである場合は true を返します。それ以外の場合は False を返します。</summary>
            <param name="context"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.MaskCharConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>文字列型とみなされる値の最初の文字を返します。長さが 1 を超える場合は例外がスローされます。長さが 0 である場合は 0 というキャラクター値を返します。</summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.MaskCharConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>キャラクタ型とみなされる値を文字列に変換します。0 というキャラクター値を指定した場合は空の文字列を返します。</summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.Primitives.SpinInfo.#ctor">
            <summary>コンストラクター。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.ValueConstraintFlags">
            <summary><see cref="M:Infragistics.Controls.Editors.ValueConstraint.Validate(System.Object,System.Type,Infragistics.Controls.Editors.ValueConstraintFlags)" /> メソッドの入力値に適用する制約を指定するために使用されます。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueConstraintFlags.Enumeration">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.Enumeration" /> 制約を検証中に適用することを指定します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueConstraintFlags.FixedValue">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.FixedValue" /> 制約を検証中に適用することを指定します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueConstraintFlags.ImplicitValueAsTypeConstraints">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.ValidateAsType" /> プロパティで提供される擬似データ型によって暗黙的に課される制約を検証中に施行することを指定します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueConstraintFlags.ImplicitTypeParameterConstraints">
            <summary><see cref="M:Infragistics.Controls.Editors.ValueConstraint.Validate(System.Object,System.Type,Infragistics.Controls.Editors.ValueConstraintFlags)" /> メソッドの Type 引数によって暗黙的に課される制約を検証中に施行することを指定します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueConstraintFlags.MaxExclusive">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.MaxExclusive" /> 制約を検証中に適用することを指定します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueConstraintFlags.MaxInclusive">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.MaxInclusive" /> 制約を検証中に適用することを指定します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueConstraintFlags.MaxLength">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.MaxLength" /> 制約を検証中に適用することを指定します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueConstraintFlags.MinExclusive">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.MinExclusive" /> 制約を検証中に適用することを指定します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueConstraintFlags.MinInclusive">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.MinInclusive" /> 制約を検証中に適用することを指定します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueConstraintFlags.MinLength">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.MinLength" /> 制約を検証中に適用することを指定します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueConstraintFlags.Nullable">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.Nullable" /> 制約を検証中に適用することを指定します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueConstraintFlags.RegexPattern">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.RegexPattern" /> 制約を検証中に適用することを指定します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueConstraintFlags.All">
            <summary>明示的な制約と暗黙の制約の両方をすべて検証中に適用することを指定します。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.ValidateAsType">
            <summary><see cref="T:Infragistics.Controls.Editors.ValueConstraint" /> クラスによる値の検証方法を指定するために使用します。これらの値はそれぞれ、最小値などの暗黙の制約を持つデータ型を表します。これらの制約は、データの有効性を確実にするために <see cref="M:Infragistics.Controls.Editors.ValueConstraint.Validate(System.Object,System.Type)" /> メソッドによって使用されます。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValidateAsType.Unknown">
            <summary>認識されない型、または未指定の型を表します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValidateAsType.Boolean">
            <summary>True か False のいずれかになる値を表します。System.Boolean に対応します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValidateAsType.Byte">
            <summary>符号付きバイトを表します。System.SByte に対応します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValidateAsType.DateTime">
            <summary>日付と時間を表します。System.DateTime に対応します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValidateAsType.Decimal">
            <summary>高精度浮動小数点値を表します。System.Decimal に対応します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValidateAsType.Double">
            <summary>倍精度浮動小数点値を表します。System.Double に対応します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValidateAsType.Float">
            <summary>浮動小数点値を表します。System.Single に対応します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValidateAsType.Integer16">
            <summary>16 ビット符号付き整数値を表します。System.Int16 に対応します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValidateAsType.Integer32">
            <summary>32 ビット符号付き整数値を表します。System.Int32 に対応します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValidateAsType.Integer64">
            <summary>64 ビット符号付き整数値を表します。System.Int64 に対応します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValidateAsType.NegativeInteger64">
            <summary>最大値が -1（-1 を含む）の 64 ビット符号付き整数値を表します。System.Int64 に対応します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValidateAsType.NonNegativeInteger64">
            <summary>最小値が 0（0 を含む）の 64 ビット符号付き整数値を表します。System.Int64 に対応します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValidateAsType.NonPositiveInteger64">
            <summary>最大値が 0（-1 を含む）の 64 ビット符号付き整数値を表します。System.Int64 に対応します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValidateAsType.PositiveInteger64">
            <summary>最小値が -1（0 を含む）の 64 ビット符号付き整数値を表します。System.Int64 に対応します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValidateAsType.Text">
            <summary>テキストデータを表します。System.String に対応します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValidateAsType.TimeSpan">
            <summary>時間の長さを表します。System.TimeSpan に対応します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValidateAsType.UnsignedByte">
            <summary>符号なしバイト値を表します。System.Byte に対応します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValidateAsType.UnsignedInteger16">
            <summary>16 ビット符号なし値を表します。System.UInt16 に対応します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValidateAsType.UnsignedInteger32">
            <summary>32 ビット符号なし値を表します。System.UInt32 に対応します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValidateAsType.UnsignedInteger64">
            <summary>64 ビット符号なし値を表します。System.UInt64 に対応します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValidateAsType.Uri">
            <summary>URI（Uniform Resource Identifier）を表します。System.Uri に対応します。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.ValueConstraint">
            <summary>データ値に適用できる各種制約を格納します。</summary>
            <remarks>
            <para class="body">ValueConstraint オブジェクトは、データ値に対して制限を作成するために設定できるさまざまなプロパティを含みます。ValueConstraint は、データ値がすべての制限を一致するかどうかを確認するためにチェックします。</para>
            <para class="body"><see cref="T:Infragistics.Controls.Editors.ValueInput" /> クラスは、このオブジェクト タイプである <see cref="P:Infragistics.Controls.Editors.ValueInput.ValueConstraint" /> プロパティを公開します。ValueInput の ValueConstraint プロパティは、エディターでユーザーが入力できる値を制限するために使用できます。詳細は <see cref="P:Infragistics.Controls.Editors.ValueInput.ValueConstraint" /> を参照してください。</para>
            <para class="body"><see cref="M:Infragistics.Controls.Editors.ValueConstraint.Validate(System.Object,System.Type)" /> または他のオーバー読み込みのひとつを呼び出して値を評価するために直接 ValueConstraint を使用することができます。</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.#ctor">
            <summary>制限なしで <see cref="T:Infragistics.Controls.Editors.ValueConstraint" /> クラスの新しいインスタンスを作成します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.CreateInstanceCore">
          <summary>
            ValueConstraint の新しいインスタンスを作成します。
          </summary>
          <returns>新しいインスタンスを返します。</returns>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueConstraint.EnumerationProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.Enumeration" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.ShouldSerializeEnumeration">
            <summary>Enumeration プロパティがデフォルト以外の値に設定されている場合、True を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.ResetEnumeration">
            <summary>Enumeration プロパティをデフォルトの状態にリセットします。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueConstraint.FixedValueProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.FixedValue" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.ShouldSerializeFixedValue">
            <summary>FixedValue プロパティがデフォルト以外の値に設定されている場合、True を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.ResetFixedValue">
            <summary>FixedValue プロパティをデフォルトの状態にリセットします。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueConstraint.MaxExclusiveProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.MaxExclusive" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.ShouldSerializeMaxExclusive">
            <summary>MaxExclusive プロパティがデフォルト以外の値に設定されている場合、True を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.ResetMaxExclusive">
            <summary>MaxExclusive プロパティをデフォルトの状態にリセットします。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueConstraint.MaxInclusiveProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.MaxInclusive" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.ShouldSerializeMaxInclusive">
            <summary>MaxInclusive プロパティがデフォルト以外の値に設定されている場合、True を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.ResetMaxInclusive">
            <summary>MaxInclusive プロパティをデフォルトの状態にリセットします。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueConstraint.MaxLengthProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.MaxLength" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.ShouldSerializeMaxLength">
            <summary>MaxLength プロパティがデフォルト以外の値に設定されている場合、True を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.ResetMaxLength">
            <summary>MaxLength プロパティをデフォルトの状態にリセットします。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueConstraint.MinExclusiveProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.MinExclusive" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.ShouldSerializeMinExclusive">
            <summary>MinExclusive プロパティがデフォルト以外の値に設定されている場合、True を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.ResetMinExclusive">
            <summary>MinExclusive プロパティをデフォルトの状態にリセットします。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueConstraint.MinInclusiveProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.MinInclusive" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.ShouldSerializeMinInclusive">
            <summary>MinInclusive プロパティがデフォルト以外の値に設定されている場合、True を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.ResetMinInclusive">
            <summary>MinInclusive プロパティをデフォルトの状態にリセットします。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueConstraint.MinLengthProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.MinLength" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.ShouldSerializeMinLength">
            <summary>MinLength プロパティがデフォルト以外の値に設定されている場合、True を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.ResetMinLength">
            <summary>MinLength プロパティをデフォルトの状態にリセットします。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueConstraint.NullableProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.Nullable" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.ShouldSerializeNullable">
            <summary>Nullableプロパティがデフォルト以外の値に設定されている場合、True を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.ResetNullable">
            <summary>Nullable プロパティをデフォルトの状態にリセットします。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueConstraint.RegexPatternProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.RegexPattern" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.ShouldSerializeRegexPattern">
            <summary>RegexPattern プロパティがデフォルト以外の値に設定されている場合、True を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.ResetRegexPattern">
            <summary>RegexPattern プロパティをデフォルトの状態にリセットします。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueConstraint.ValidateAsTypeProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.ValidateAsType" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.ShouldSerializeValidateAsType">
            <summary>ValidateAsType プロパティがデフォルト以外の値に設定されている場合 True を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.ResetValidateAsType">
            <summary>ValidateAsType プロパティをデフォルトの状態に戻します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.GetTypeFromValidateAsType(Infragistics.Controls.Editors.ValidateAsType)">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.ValidateAsType" /> 引数に対応する System.Type オブジェクトを返します。</summary>
            <param name="validateAsType">取得する CLR 型に対応する擬似データ型。</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.GetValidateAsTypeFromType(System.Type)">
            <summary><see cref="T:System.Type" /> 引数を表す <see cref="P:Infragistics.Controls.Editors.ValueConstraint.ValidateAsType" /> 値を返します。</summary>
            <param name="type">取得するValidateAsTypeに対応するTypeオブジェクト。</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.InitializeFrom(Infragistics.Controls.Editors.ValueConstraint,System.Boolean)">
            <summary>引数の状態をこのオブジェクトにコピーします。</summary>
            <param name="source">状態をコピーするValueConstraint。</param>
            <param name="copyEnumeration">&quot;enumeration&quot;フィールドをコピーしない場合はFalseを渡します。</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.InitializeFrom(Infragistics.Controls.Editors.ValueConstraint)">
            <summary>引数の状態をこのオブジェクトにコピーします。</summary>
            <param name="source">状態をコピーするValueConstraint。</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.Merge(Infragistics.Controls.Editors.ValueConstraint,Infragistics.Controls.Editors.ValueConstraintFlags)">
            <summary>制約設定をソースの ValueConstraint からターゲット（このメソッドが呼び出されたインスタンス）にコピーします。ターゲットでデフォルト値を持つ制約設定のみにソースからの値が割り当てられます。&apos;constraintFlags&apos; フラグ引数によって指定された制約設定のみがコピーされます。このメソッドでは ValidateAsType プロパティはコピーされません。</summary>
            <param name="source">コピーする制約設定を格納する ValueConstraint オブジェクト。</param>
            <param name="constraintFlags">コピーする制約設定を指定するビット フラグ。</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.Merge(Infragistics.Controls.Editors.ValueConstraint)">
            <summary>制約設定をソースの ValueConstraint からターゲット（このメソッドが呼び出されたインスタンス）にコピーします。ターゲットでデフォルト値を持つ制約設定のみにソースからの値が割り当てられます。このメソッドでは ValidateAsType プロパティはコピーされません。</summary>
            <param name="source">コピーする制約設定を格納する ValueConstraint オブジェクト。</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.Reset(Infragistics.Controls.Editors.ValueConstraintFlags)">
            <summary>このオブジェクトの、&quot;constraintFlags&quot;ビットフラグ引数で指定されたすべての制約設定を、初期状態（未設定の状態）にリセットします。このメソッドでは ValidateAsType プロパティはリセットされません。</summary>
            <param name="constraintFlags">リセットする制約設定を指定するビットフラグ。</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.Reset">
            <summary>このオブジェクトのすべての制約設定を初期状態（未設定の状態）にリセットします。このメソッドでは ValidateAsType プロパティはリセットされません。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.Validate(System.Object,System.Type,Infragistics.Controls.Editors.ValueConstraintFlags,System.IFormatProvider,System.String,System.String@)">
            <summary>引数が、現在の制約設定に関して有効と見なされる場合、True を返します。</summary>
            <param name="dataValue">検証するデータ値。</param>
            <param name="targetType">データ型を表す Type オブジェクト。&apos;dataValue&apos; がこのデータ型として検証されます。</param>
            <param name="constraintFlags">検証中に適用する制約を示すビット フラグ。</param>
            <param name="formatProvider">値と文字列との間の相互変換に使用する IFormatProvider。</param>
            <param name="format">値と文字列との間の相互変換に使用する書式文字列。</param>
            <param name="errorMessage">データ値が無効な場合、この出力パラメーターはエラー メッセージを参照します。</param>
            <returns>入力値が、このオブジェクトに対して設定された適用可能なすべての制約を満たしている場合は True を返します。それ以外の場合は False を返します。</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.Validate(System.Object,System.Type,Infragistics.Controls.Editors.ValueConstraintFlags)">
            <summary>引数が、現在の制約設定に関して有効と見なされる場合、True を返します。</summary>
            <param name="dataValue">検証するデータ値。</param>
            <param name="targetType">データ型を表す Type オブジェクト。&apos;dataValue&apos; がこのデータ型として検証されます。</param>
            <param name="constraintFlags">検証中に適用する制約を示すビット フラグ。</param>
            <returns>入力値が、このオブジェクトに対して設定された適用可能なすべての制約を満たしている場合は True を返します。それ以外の場合は False を返します。</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.Validate(System.Object,System.Type)">
            <summary>引数が、現在の制約設定に関して有効と見なされる場合、True を返します。このオーバー読み込みは <see cref="T:Infragistics.Controls.Editors.ValueConstraintFlags" /> <b>All</b> を使用します。</summary>
            <param name="dataValue">検証するデータ値。</param>
            <param name="targetType">データ型を表す Type オブジェクト。&apos;dataValue&apos; がこのデータ型として検証されます。</param>
            <returns>入力値が、このオブジェクトに対して設定された適用可能なすべての制約を満たしている場合は True を返します。それ以外の場合は False を返します。</returns>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueConstraint.FractionDigitsProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.FractionDigits" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.ShouldSerializeFractionDigits">
            <summary>FractionDigits プロパティがデフォルト以外の値に設定されている場合、True を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.ResetFractionDigits">
            <summary>FractionDigits プロパティをデフォルトの状態にリセットします。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.ValueConstraint.TotalDigitsProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.TotalDigits" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.ShouldSerializeTotalDigits">
            <summary>TotalDigits プロパティがデフォルト以外の値に設定されている場合、True を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueConstraint.ResetTotalDigits">
            <summary>TotalDigits プロパティをデフォルトの状態にリセットします。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueConstraint.Enumeration">
            <summary>値オプションのリストを含む、<see cref="T:System.Collections.IEnumerable" /> を実装しているオブジェクトを取得または設定します。このプロパティはデフォルトで null（Nothing）に設定されています。</summary>
            <remarks>
            <para class="body">列挙体は、列挙体の一部である要素のひとつとなるデータ値を制限します。言い換えると、値がこの列挙体の一部ではない場合、この ValueConstraint オブジェクトで評価される値は有効と見なされません。</para>
            <para class="note"><b>注：</b> 列挙体は、IEnumerable インターフェイス タイプです。したがって、Array、ArrayList などを含み、このインターフェイスを実装するオブジェクトに設定できます。</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueConstraint.HasEnumeration">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.Enumeration" /> リストが null でない場合、True を返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueConstraint.FixedValue">
            <summary>制約値が等しくなければならない値を取得または設定します。</summary>
            <remarks>
            <para class="body">FixedValue が設定されると、評価されるデータ値は、このプロパティの値と等しくなる必要があります。</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueConstraint.HasFixedValue">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.FixedValue" /> プロパティが null（Nothing）でない場合、True を返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueConstraint.MaxExclusive">
            <summary>それよりも小さいデータ値を制限する値を取得または設定します。</summary>
            <remarks>
            <para class="body">評価されるデータ値は、MaxExclusive よりも小さい必要があります。MaxExclusive と同じにはできません。</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueConstraint.HasMaxExclusive">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.MaxExclusive" /> プロパティが null（Nothing）でない場合、True を返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueConstraint.MaxInclusive">
            <summary>制約値で許容される最大値を取得または設定します。</summary>
            <remarks>
            <para class="body">評価されるデータ値は、MaxInclusive と同じまたは小さい必要があります。</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueConstraint.HasMaxInclusive">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.MaxInclusive" /> プロパティが null（Nothing）でない場合、True を返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueConstraint.MaxLength">
            <summary>制約値で許容される最大の長さ（指定された値を含む）を取得または設定します。この制約は&quot;string&quot;型の値に適用されます。デフォルト値は０で、制限がないことを意味します。</summary>
            <remarks>
            <para class="body">MaxLength 制限は、評価されるデータ値が、このプロパティの値より小さいか同じであることを保証します。</para>
            <para class="body"><b>注： </b> 評価されるデータ値が文字列オブジェクトではない場合、この評価を実行する前に文字列に変換されます。</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueConstraint.HasMaxLength">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.MaxLength" /> プロパティの値が０より大きい場合、True を返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueConstraint.MinExclusive">
            <summary>それよりも大きいデータ値を制限する値を取得または設定します。</summary>
            <remarks>
            <para class="body">評価されるデータ値は、MinExclusive よりも大きい必要があります。MinExclusive と同じにはできません。</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueConstraint.HasMinExclusive">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.MinExclusive" /> プロパティが null（Nothing）でない場合、True を返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueConstraint.MinInclusive">
            <summary>制約値で許容される最小値を取得または設定します。</summary>
            <remarks>
            <para class="body">評価されるデータ値は、MinInclusive と同じまたは大きい必要があります。</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueConstraint.HasMinInclusive">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.MinInclusive" /> プロパティが null（Nothing）でない場合、True を返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueConstraint.MinLength">
            <summary>制約値で許容される最小の長さ（指定された値を含む）を取得または設定します。この制約は&quot;string&quot;型の値に適用されます。デフォルト値は 0 で、最小の長さ制限がないことを意味します。</summary>
            <remarks>
            <para class="body">MinLength 制限は、評価されるデータ値が、このプロパティの値より大きいか同じであることを保証します。</para>
            <para class="body"><b>注： </b> 評価されるデータ値が文字列オブジェクトではない場合、この評価を実行する前に文字列に変換されます。</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueConstraint.HasMinLength">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.MinLength" /> プロパティの値が０より大きい場合、True を返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueConstraint.Nullable">
            <summary>制約値でnull（Nothing）が許容されるかどうかを示すフラグを取得または設定します。このプロパティのデフォルト値は、null 値が許可される null です。</summary>
            <remarks>
            <para class="body">False に設定されると値が null 以外の値に制限される場合の Nullable プロパティ。この値は null（VB では Nothing）または DBNull のひとつであってはなりません。</para>
            <para class="body">ValueConstraint オブジェクトがエディターの <see cref="P:Infragistics.Controls.Editors.ValueInput.ValueConstraint" /> プロパティに関連付けられている場合、<b>Nullable</b> は、ユーザーがエディターのすべてのコンテンツを削除できるかどうかを示します。Nullable が False に設定される場合、ユーザーはすべてのコンテンツを削除できません。ユーザーはエディターで値を入力する必要があります。</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueConstraint.HasNullable">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.Nullable" /> プロパティがデフォルト以外の値を返す場合、True を返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueConstraint.RegexPattern">
            <summary>制約値が一致する必要がある正規表現を取得または設定します。</summary>
            <remarks>
            <para class="body">RegexPattern は、正規表現のパターンに対してデータ値を評価します。値は、有効と見なされるために、このパターンに一致する必要があります。</para>
            <para class="body">以下の正規表現の例です。<br />
            <ul>
            <li><b>\d*</b> - テキストはゼロまたはそれ以上の数値である必要があります</li>
            <li><b>\d+</b> - テキストはひとつまたはそれ以上の数値である必要があります</li>
            <li><b>[a-d]+</b> - テキストは a、b、c、d 文字のひとつまたは複数のインスタンスである必要があります</li>
            <li><b>\d{3}-?\d{3}-?\d{4}</b> - アメリカの電話番号のパターンで、&apos;-&apos; はオプションです</li>
            </ul>
            </para>
            <para class="body">正規表現の文法についての詳細は、.NET <see cref="T:System.Text.RegularExpressions.Regex" /> クラスを参照してください。Regex クラスが一致を実行するために使用されます。</para>
            <para class="body"><b>注： </b> 評価されるデータ値が文字列オブジェクトではない場合、この評価を実行する前に文字列に変換されます。</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueConstraint.HasRegexPattern">
            <summary><see cref="P:Infragistics.Controls.Editors.ValueConstraint.RegexPattern" /> が null（Nothing）でない場合、True を返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueConstraint.ValidateAsType">
            <summary><see cref="M:Infragistics.Controls.Editors.ValueConstraint.Validate(System.Object,System.Type)" /> メソッドで入力値の制約に使用される <see cref="P:Infragistics.Controls.Editors.ValueConstraint.ValidateAsType" /> 値を取得または設定します。デフォルトで、この値は <b>Unknown</b> (不明) に設定されます。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueConstraint.HasAnyConstraints">
            <summary>このオブジェクトにいずれかの制約プロパティが設定されている場合、またはValidateAsTypeプロパティが&quot;Unknown&quot;以外に設定されている場合、Trueを返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueConstraint.FractionDigits">
            <summary>現在は、これは使用されません。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValueConstraint.TotalDigits">
            <summary>現在は、これは使用されません。</summary>
        </member>
        <member name="E:Infragistics.Controls.Editors.ValueConstraint.PropertyChanged">
            <summary>プロパティの値を変更するときに発生されます。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.ValidationErrorInfo">
            <summary>値が無効である理由についてのエラー情報を含みます。</summary>
            <remarks>
            <para class="body">エディターの値が無効の場合、エディターの <see cref="P:Infragistics.Controls.Editors.ValueInput.IsValueValid" /> プロパティは False を返します。値が無効である理由についてのエラー情報を取得するには、このクラスのインスタンスを返すエディターの <see cref="P:Infragistics.Controls.Editors.ValueInput.InvalidValueErrorInfo" /> プロパティを使用してください。</para>
            </remarks><seealso cref="P:Infragistics.Controls.Editors.ValueInput.InvalidValueErrorInfo" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.IsValueValid" /></member>
        <member name="M:Infragistics.Controls.Editors.ValidationErrorInfo.#ctor(System.Exception)">
            <summary>コンストラクター。</summary>
            <param name="exception">例外 (もしあれば)。</param>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValidationErrorInfo.ErrorMessage">
            <summary>値が無効である理由を示すエラー メッセージ。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.ValidationErrorInfo.Exception">
            <summary>検証エラーを発生した例外（もしあれば）を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.ValueInputDefaultConverter.HandleNullValueHelper(System.Boolean,System.Object,System.Type,Infragistics.Controls.Editors.ValueInput,System.Object@)">
            <summary>Null および空の文字列値を処理します。</summary>
            <param name="convertingBack">変換を元に戻すかどうか。</param>
            <param name="value">変換する値。</param>
            <param name="targetType">値の変換後の型。</param>
            <param name="editor">任意 - Null に設定できます。</param>
            <param name="convertedValue">これに変換された値を割り当てます。</param>
            <returns>値が処理された場合 True を返します。</returns>
        </member>
        <member name="T:Infragistics.AutomationPeers.ValueInputAutomationPeer">
            <summary><see cref="T:Infragistics.Controls.Editors.ValueInput" /> のタイプを UI オートメーションに公開します。</summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.ValueInputAutomationPeer.#ctor(Infragistics.Controls.Editors.ValueInput)">
            <summary><see cref="T:Infragistics.AutomationPeers.ValueInputAutomationPeer" /> クラスの新しいインスタンスを作成します。</summary>
            <param name="owner">このピアの <see cref="T:Infragistics.Controls.Editors.ValueInput" /> が作成されます。</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.ValueInputAutomationPeer.GetClassNameCore">
            <summary><see cref="T:Infragistics.Controls.Editors.ValueInput" /> の名前を返します。</summary>
            <returns>「ValueInput」を含む文字列。</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.ValueInputAutomationPeer.GetPatternCore(System.Windows.Automation.Peers.PatternInterface)">
            <summary>この <see cref="T:Infragistics.AutomationPeers.XamMaskedInputAutomationPeer" /> に関連する要素の指定された <see cref="T:System.Windows.Automation.Peers.PatternInterface" /> に関連するコントロールのパターンを返します。</summary>
            <param name="patternInterface">要求されるパターン</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.ValueInputAutomationPeer.SetFocusCore">
          <summary>
            関連付けられた要素をフォーカスするために呼び出されます。
          </summary>
        </member>
        <member name="P:Infragistics.AutomationPeers.ValueInputAutomationPeer.Editor">
            <summary>オートメーション ピアに関連付けられた <see cref="T:Infragistics.Controls.Editors.ValueInput" /> を返します。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.XamCurrencyInput">
            <summary>マスクに基づく通貨データの編集を許可します。</summary>
            <remarks>
            <p class="body"><b>XamCurrencyInput</b> は通貨データを表示および編集するために指定される派生された <see cref="T:Infragistics.Controls.Editors.XamMaskedInput" /> です。デフォルトで、<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /> プロパティは <see cref="T:System.Decimal" /> に設定されます。</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Controls.Editors.XamMaskedInput">
            <summary>マスクに基づきデータを表示および編集するための値エディター。</summary>
            <remarks>
            <p class="body"><b>XamMaskedInput</b> はエディター コントロールで、マスクに基づく値を表示および編集することができます。マスクは <see cref="P:Infragistics.Controls.Editors.XamMaskedInput.Mask" /> プロパティから指定されます。マスクが明示的に設定されない場合、デフォルト マスクが <see cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /> プロパティに基づいて使用されます。デフォルト マスクは、<see cref="M:Infragistics.Controls.Editors.XamMaskedInput.RegisterDefaultMaskForType(System.Type,System.String)" /> を使用して、特定のタイプに登録されるマスクを使用して決定されます。</p><seealso cref="T:Infragistics.Controls.Editors.ValueInput" /><seealso cref="T:Infragistics.Controls.Editors.TextInputBase" /></remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.#ctor">
            <summary>新しい <see cref="T:Infragistics.Controls.Editors.XamMaskedInput" /> を初期化します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.CanEditType(System.Type)">
            <summary>オーバーライド。エディターはネイティブで指定したタイプの編集値をサポートするかどうかを決定します。</summary>
            <param name="type">チェックするデータ型。</param>
            <returns>エディターがネイティブで指定したタイプの編集値をサポートする場合は True、そうでなければ False を返します。</returns>
            <remarks>
            <p class="body">XamMaskedInput の実装は、string、sbyte、byte、short、ushort、int、uint、long、ulong、float、double、decimal、および DateTime データ型に対して True を返します。</p>
            <p class="body">これらのデータ型については、エディターはデフォルト マスクを計算します。他のデータ型については、データ型に対して意味を持つマスクを指定します。そうでなければ、デフォルトのマスクが使用されます。<see cref="M:Infragistics.Controls.Editors.XamMaskedInput.RegisterDefaultMaskForType(System.Type,System.String)" />　メソッドを使用して、これらおよび他のデータ型に対するデフォルト マスクを変更/登録することができます。</p>
            <p class="body">詳細は、ValueInput の <see cref="M:Infragistics.Controls.Editors.ValueInput.CanEditType(System.Type)" /> を参照してください。</p>
            </remarks><seealso cref="T:System.ValueType" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.Mask" /><seealso cref="M:Infragistics.Controls.Editors.ValueInput.CanEditType(System.Type)" /></member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.CanRenderType(System.Type)">
            <summary>オーバーライド。エディターはネイティブで指定したタイプの値の表示をサポートするかどうかを決定します。</summary>
            <param name="type">チェックするデータ型。</param>
            <returns>エディターがネイティブで指定したタイプの値の表示をサポートする場合は True、そうでなければ False を返します。</returns>
            <remarks>
            <p class="body">詳細は、ValueInput の <see cref="M:Infragistics.Controls.Editors.ValueInput.CanRenderType(System.Type)" /> を参照してください。</p>
            </remarks><seealso cref="M:Infragistics.Controls.Editors.XamMaskedInput.CanEditType(System.Type)" /><seealso cref="M:Infragistics.Controls.Editors.ValueInput.CanRenderType(System.Type)" /></member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.OnCreateAutomationPeer">
            <summary>UI オートメーションに <see cref="T:Infragistics.Controls.Editors.XamMaskedInput" /> を公開するオートメーション ピアを返します。</summary>
            <returns><see cref="T:Infragistics.AutomationPeers.XamMaskedInputAutomationPeer" />。</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.DoInitialization">
            <summary>オーバーライド。適切な初期化作業を実行するために、派生クラスに機会を提供するため、これを OnInitialized から呼び出されます。OnInitialized 実装は、AlwaysInEditMode が True の場合、最後にエディターを編集モードにします。このメソッドはその前に呼び出されます。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.GetFocusSite">
            <summary>エディターのフォーカス サイトを取得します。</summary>
            <returns>フォーカスを受け取る、エディターのテンプレート内の FrameworkElement。</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.OnCoerceText(System.String)">
            <summary>オーバーライド。<see cref="P:Infragistics.Controls.Editors.ValueInput.Text" /> プロパティの CoerceValue ハンドラーから呼び出されます。</summary>
            <param name="text">強制するためのテキスト</param>
            <returns>強制された値</returns>
            <remarks>
            <para class="body">XamMaskedInput の実装は、マスクを <paramref name="text" /> に適用します。</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.ValidateCurrentValue(System.Exception@)">
            <summary>エディターの現在の値を検証します。このメソッドは、現在の値のエディター特有の検証を実行するために、エディターによって呼び出されます。</summary>
            <returns>値が有効ならば True、そうでなければ False。</returns>
            <remarks>詳細は、ValueInput の <see cref="M:Infragistics.Controls.Editors.ValueInput.ValidateCurrentValue(System.Exception@)" /> を参照してください。 <seealso cref="P:Infragistics.Controls.Editors.ValueInput.IsValueValid" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.InvalidValueBehavior" /></remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.OnFocusSiteChanged">
            <summary>オーバーライド。フォーカス サイトが変更されたときに呼び出されます。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.OnValueChanged(System.Object,System.Object)">
          <summary>
            <b>Value</b> プロパティが変更するかエディターの内容が変更すると呼び出されます。
          </summary>
          <seealso cref="E:Infragistics.Controls.Editors.ValueInput.ValueChanged"/>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.OnValueConstraintChanged(System.String)">
            <summary>このメソッドは、ValueConstraint またはそのうちの 1 つのプロパティが変更する時に呼び出されます。</summary>
            <param name="valueConstraintPropertyName">ValueConstraint が変更された場合、Null を返します。そうでない場合、変更されたプロパティの名を返します。</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.ProcessKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>オーバーライド。キー ダウン イベントを処理します。関連付けられているコマンドがあればそれが実行されます。</summary>
            <param name="args">キー イベントの引数。</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.ValidateValue(System.Object,System.Exception@)">
            <summary>指定された値は、エディターで強制された暗黙および明示的な値の制約に基づいて、エディターで有効である評価された場合、True を返します。</summary>
            <param name="value">有効であるかどうかを確認する値。</param>
            <param name="error">値が無効な場合、適切なエラー メッセージを含む例外に設定されます。</param>
            <returns>指定した値は有効だ場合は、True。それ以外は False。</returns>
            <remarks>
            <para class="body"><b>ValidateValue</b> メソッドは、値がエディターで強制された暗黙および明示的な値の制約に基づいて、エディターで有効であると評価するかどうかを決定するために使用されます。暗黙値の制約は <see cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" />、<see cref="P:Infragistics.Controls.Editors.XamMaskedInput.Mask" /> などです。明示的な制約を <see cref="P:Infragistics.Controls.Editors.ValueInput.ValueConstraint" /> プロパティで指定されます。</para><seealso cref="P:Infragistics.Controls.Editors.ValueInput.IsValueValid" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.InvalidValueBehavior" /></remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.InitializeCachedPropertyValues">
            <summary>このオブジェクトの依存プロパティ メタデータを取得し、対応するプロパティのメタデータの DefaultValue を取得して、依存プロパティの値をキャッシュするために使用される変数を初期化します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.GetNumberSectionValueHelper(Infragistics.Controls.Editors.SectionsCollection,System.Type)">
            <summary>指定したデータ型の数字部分の値を取得します。数字部分が見つからない場合は -2 を返し、数字部分が空である場合は -1 を返します。</summary>
            <param name="sections"></param>
            <param name="sectionType"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.InternalGetDateValue(Infragistics.Controls.Editors.SectionsCollection)">
            <summary>年、月、および日に相当する部分があり、かつ、すべての部分にデータが埋められている場合は日付を返します。</summary>
            <param name="sections"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.SetText(Infragistics.Controls.Editors.SectionsCollection,System.String,System.Char,System.Char)">
            <summary>セクションコレクションにテキストを設定します。</summary>
            <param name="sections">更新されるセクション</param>
            <param name="text">セクションを更新するために使用されるテキスト</param>
            <param name="promptCharacter">プロンプト文字として解釈される文字</param>
            <param name="padCharacter">パッド文字として解釈される文字</param>
            <returns>一致したテキストの文字数。</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.SetText(Infragistics.Controls.Editors.SectionsCollection,System.String,System.Char,System.Char,System.Boolean)">
            <summary>セクションコレクションにテキストを設定します。</summary>
            <param name="sections">更新されるセクション</param>
            <param name="text">セクションを更新するために使用されるテキスト</param>
            <param name="promptCharacter">プロンプト文字として解釈される文字</param>
            <param name="padCharacter">パッド文字として解釈される文字</param>
            <param name="skipDigitSeparator">値が数値である可能性がある場合 True です。この場合、数字セパレーターを無視する必要があります。そうでない場合、False です。</param>
            <returns>一致したテキストの文字数。</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.ShouldUseValueToTextConverter(Infragistics.Controls.Editors.MaskInfo)">
          <summary>
            マスクが特定のタイプに変換する方法が設定されていないカスタム マスクで、カスタム値からテキストへのコンバーターを指定すると、そのコンバーターを使用します。
          </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.IsDateTimeSection(Infragistics.Controls.Editors.EditSectionBase)">
            <summary>指定した編集セクションは年、月、日、時、分、秒または am/pm セクションの場合は true を返します。</summary>
            <param name="editSection"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.GetFlag(Infragistics.Controls.Editors.XamMaskedInput.InternalFlags)">
          <summary>指定したビットのいずれかが True である場合には True を返します。</summary>
          <param name="flag">評価するフラグ。</param>
          <returns></returns>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamMaskedInput.TrimFractionalZerosProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.XamMaskedInput.TrimFractionalZeros" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamMaskedInput.SpinButtonDisplayModeProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.XamMaskedInput.SpinButtonDisplayMode" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamMaskedInput.SpinButtonStyleProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.XamMaskedInput.SpinButtonStyle" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamMaskedInput.SpinButtonVisibilityResolvedPropertyKey">
            <summary>読み取り専用の <see cref="P:Infragistics.Controls.Editors.XamMaskedInput.SpinButtonVisibilityResolved" /> 依存プロパティのプロパティ キーを識別します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamMaskedInput.SpinButtonVisibilityResolvedProperty">
            <summary>読み取り専用  <see cref="P:Infragistics.Controls.Editors.XamMaskedInput.SpinButtonVisibilityResolved" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamMaskedInput.SpinIncrementProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.XamMaskedInput.SpinIncrement" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamMaskedInput.SpinWrapProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.XamMaskedInput.SpinWrap" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.Beep">
            <summary>MessageBeep API を呼び出します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamMaskedInput.SectionsProperty">
            <summary>読み取り専用 <see cref="P:Infragistics.Controls.Editors.XamMaskedInput.Sections" /> 依存プロパティを識別します</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.RegisterDefaultMaskForType(System.Type,System.String)">
            <summary>指定したデータ型に対して MaskedInput によって使用されるデフォルト マスクを変更します。</summary>
            <param name="dataType">マスクを登録するデータ型。</param>
            <param name="mask">指定したデータ型に適用されるデフォルトのマスク。</param>
            <remarks>
            <para class="body">MaskedInput または派生されたエディターでマスクが明示的に指定されない場合、デフォルト マスクは、データ型に基づいて計算されます。このメソッドを使用してこれらのデフォルトで計算されたマスクをオーバーライドできます。</para><seealso cref="M:Infragistics.Controls.Editors.XamMaskedInput.GetDefaultMaskForType(System.Type)" /></remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.ResetDefaultMaskForType(System.Type)">
            <summary>指定したデータ型のデフォルト マスクをデフォルト値にリセットします。</summary>
            <param name="dataType">適用されているマスクをデフォルトのマスクにリセットするデータ型。</param>
            <remarks>
            <para class="body"><see cref="M:Infragistics.Controls.Editors.XamMaskedInput.RegisterDefaultMaskForType(System.Type,System.String)" /> メソッドを使用することによって登録されたデフォルト マスクを元に戻すのに、このメソッドを使用します。マスクは、MaskedInput によって計算されるデフォルト マスクに戻されます。</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.GetDefaultMaskForType(System.Type)">
            <summary>MaskedInput によって指定したデータ型、および指定したデータ型用の派生エディターで使用されるデフォルト マスクを返します。</summary>
            <param name="dataType">指定したデータ型にデフォルトのマスクがある場合は、そのマスクを返します。</param>
            <returns></returns>
            <remarks>
            <para class="body"><see cref="M:Infragistics.Controls.Editors.XamMaskedInput.RegisterDefaultMaskForType(System.Type,System.String)" /> 静的メソッドを使用してデフォルト マスクを変更変更できます。</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.SupportsDataType(System.Type)">
            <summary>データ型が XamMaskedInput によってサポートされる場合 True を返し、そうでない場合は False を返します。</summary>
            <param name="dataType"><see cref="T:System.Type" /></param>
            <returns>タイプがサポートされる場合 <b>True</b>、そうでない場合は <b>False</b>。</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.CalcDefaultTimeMask(System.IFormatProvider)">
            <summary>指定したフォーマット プロバイダーに基づく時間に対するデフォルト マスクを計算します。</summary>
            <param name="formatProvider">マスクを派生するために必要なフォーマット情報を取得するために使用するフォーマット プロバイダー。CultureInfo または DateTimeFormatInfo インスタンスが可能。</param>
            <returns>文字列としてマスク。</returns>
            <remarks>
            <para class="body">一般的に、このメソッドを直接呼び出す必要はありません。ValueType が DateTime に設定されると、明示的に何も設定されていない場合、XamMaskedInput と派生エディターはマスクを計算するためにこのメソッドを呼び出します。カルチャーに関わる日付および時間マスクを使用するために明示的にマスクを設定する必要がある場合、<see cref="P:Infragistics.Controls.Editors.XamMaskedInput.Mask" /> プロパティを設定するときに以下のマスク トークンを使用してください。<ul>
            <li><b>{date}</b> - システムの <i>short</i> 日付パターン設定に基づく日付マスク。</li>
            <li><b>{time}</b> - システムの <i>short</i> 時間パターン設定に基づく時間マスク。短い時刻形式には通常、秒部分は含まれません。</li>
            <li><b>{longtime} - システムの <i>long</i> 時間パターン設定に基づく時間マスク。長い時刻形式には通常、秒部分が含まれます。</b></li>
            </ul>
            </para><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.Mask" /></remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.CalcDefaultLongTimeMask(System.IFormatProvider)">
            <summary>指定したフォーマット プロバイダーに基づく長い時間に対するデフォルト マスクを計算します。</summary>
            <param name="formatProvider">マスクを派生するために必要なフォーマット情報を取得するために使用するフォーマット プロバイダー。CultureInfo または DateTimeFormatInfo インスタンスが可能。</param>
            <returns>文字列としてマスク。</returns>
            <remarks>
            <para class="body">一般的に、このメソッドを直接呼び出す必要はありません。ValueType が DateTime に設定されると、明示的に何も設定されていない場合、XamMaskedInput と派生エディターはマスクを計算するためにこのメソッドを呼び出します。カルチャーに関わる日付および時間マスクを使用するために明示的にマスクを設定する必要がある場合、<see cref="P:Infragistics.Controls.Editors.XamMaskedInput.Mask" /> プロパティを設定するときに以下のマスク トークンを使用してください。<ul>
            <li><b>{date}</b> - システムの <i>short</i> 日付パターン設定に基づく日付マスク。</li>
            <li><b>{time}</b> - システムの <i>short</i> 時間パターン設定に基づく時間マスク。短い時刻形式には通常、秒部分は含まれません。</li>
            <li><b>{longtime} - システムの <i>long</i> 時間パターン設定に基づく時間マスク。長い時刻形式には通常、秒部分が含まれます。</b></li>
            </ul>
            </para><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.Mask" /></remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.CalcDefaultDateMask(System.IFormatProvider)">
            <summary>指定したフォーマット プロバイダーに基づく日付に対するデフォルト マスクを計算します。</summary>
            <param name="formatProvider">マスクを派生するために必要なフォーマット情報を取得するために使用するフォーマット プロバイダー。CultureInfo または DateTimeFormatInfo インスタンスが可能。</param>
            <returns>文字列としてマスク。</returns>
            <remarks>
            <para class="body">一般的に、このメソッドを直接呼び出す必要はありません。ValueType が DateTime に設定されると、明示的に何も設定されていない場合、XamMaskedInput と派生エディターはマスクを計算するためにこのメソッドを呼び出します。カルチャーに関わる日付および時間マスクを使用するために明示的にマスクを設定する必要がある場合、<see cref="P:Infragistics.Controls.Editors.XamMaskedInput.Mask" /> プロパティを設定するときに以下のマスク トークンを使用してください。<ul>
            <li><b>{date}</b> - システムの <i>short</i> 日付パターン設定に基づく日付マスク。</li>
            <li><b>{time}</b> - システムの <i>short</i> 時間パターン設定に基づく時間マスク。短い時刻形式には通常、秒部分は含まれません。</li>
            <li><b>{longtime} - システムの <i>long</i> 時間パターン設定に基づく時間マスク。長い時刻形式には通常、秒部分が含まれます。</b></li>
            </ul>
            </para><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.Mask" /></remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.CalcDefaultDateMask(System.IFormatProvider,System.Boolean)">
            <summary>指定したフォーマット プロバイダーに基づく日付に対するデフォルト マスクを計算します。</summary>
            <param name="formatProvider">マスクを派生するために必要なフォーマット情報を取得するために使用するフォーマット プロバイダー。CultureInfo または DateTimeFormatInfo インスタンスが可能。</param>
            <param name="usePostfixSeparatorsFromLongDatePattern">このパラメーターは、カルチャー固有の日付セパレーターを使用するかどうかを示します。この日付セパレーターは、カルチャーの日付時間書式の情報の長い日付パターンからの接尾文字を含みます。</param>
            <returns>文字列としてマスク。</returns>
            <remarks>
            <para class="body">一般的に、このメソッドを直接呼び出す必要はありません。ValueType が DateTime に設定されると、明示的に何も設定されていない場合、XamMaskedInput と派生エディターはマスクを計算するためにこのメソッドを呼び出します。カルチャーに関わる日付および時間マスクを使用するために明示的にマスクを設定する必要がある場合、<see cref="P:Infragistics.Controls.Editors.XamMaskedInput.Mask" /> プロパティを設定するときに以下のマスク トークンを使用してください。<ul>
            <li><b>{date}</b> - システムの <i>short</i> 日付パターン設定に基づく日付マスク。</li>
            <li><b>{time}</b> - システムの <i>short</i> 時間パターン設定に基づく時間マスク。短い時刻形式には通常、秒部分は含まれません。</li>
            <li><b>{longtime} - システムの <i>long</i> 時間パターン設定に基づく時間マスク。長い時刻形式には通常、秒部分が含まれます。</b></li>
            </ul>
            </para><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.Mask" /></remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.CalcDefaultCurrencyMask(System.IFormatProvider,System.Int32,System.Int32,System.Char,System.Boolean)">
            <summary>CultureInfoに基づいて通貨用のデフォルトマスクを計算します。</summary>
            <param name="formatProvider">デフォルトマスクの作成に使用する書式プロバイダー。CultureInfo または NumberFormatInfo インスタンスが可能。</param>
            <param name="integerDigits">整数部の桁数。-１は、デフォルトを使用することを示します。０を指定すると整数部がなくなります。</param>
            <param name="fractionDigits">小数部の桁数。-１は、カルチャー情報によって指定された桁数を使用することを示します。０を指定すると小数部がなくなります。</param>
            <param name="allowNegatives">&quot;-&quot;または&quot;+&quot;を指定した場合、負の数が許可されます。&quot;-&quot;を指定すると、数が負の場合のみ、マイナス記号が表示されます。&quot;+&quot;を指定すると、数が正か負かに応じて、常にプラス記号またはマイナス記号が表示されます。他の文字をこのパラメーターに指定した場合は無視されます。</param>
            <param name="includeCurrencySymbol">マスクに通貨記号を含む必要があるかどうかを指定します。</param>
            <returns>文字列としてマスク。</returns>
            <remarks>
            <para class="body">一般的に、このメソッドを直接呼び出す必要はありません。ValueType が Decimal に設定されると、明示的に何も設定されていない場合、XamMaskedInput と派生エディターはマスクを計算するためにこのメソッドを呼び出します。また、カルチャーに関わる通貨マスクを使用するために明示的にマスクを設定したい場合、<see cref="P:Infragistics.Controls.Editors.XamMaskedInput.Mask" /> プロパティの支援で、すべてのマスク トークンをリストするテーブルで文書化されている通貨トークンのひとつを使用します。</para><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.Mask" /></remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.CalcDefaultDoubleMask(System.IFormatProvider,System.Int32,System.Int32,System.Char)">
            <summary>指定の CultureInfo に基づくダブル マスクのデフォルトマスクを計算します。</summary>
            <param name="formatProvider">デフォルトマスクの作成に使用する書式プロバイダー。CultureInfo または NumberFormatInfo インスタンスが可能。</param>
            <param name="integerDigits">整数部の桁数。-１は、デフォルトを使用することを示します。０を指定すると整数部がなくなります。</param>
            <param name="fractionDigits">小数部の桁数。-１は、カルチャー情報によって指定された桁数を使用することを示します。０を指定すると小数部がなくなります。</param>
            <param name="allowNegatives">&quot;-&quot;または&quot;+&quot;を指定した場合、負の数が許可されます。&quot;-&quot;を指定すると、数が負の場合のみ、マイナス記号が表示されます。&quot;+&quot;を指定すると、数が正か負かに応じて、常にプラス記号またはマイナス記号が表示されます。他の文字をこのパラメーターに指定した場合は無視されます。</param>
            <returns>文字列としてマスク。</returns>
            <remarks>
            <para class="body">一般的に、このメソッドを直接呼び出す必要はありません。ValueType が Double または Float に設定されると、明示的に何も設定されていない場合、XamMaskedInput と派生エディターはマスクを計算するためにこのメソッドを呼び出します。また、カルチャーに関わる double/float マスクを使用するために明示的にマスクを設定したい場合、<see cref="P:Infragistics.Controls.Editors.XamMaskedInput.Mask" /> プロパティの支援で、すべてのマスク トークンをリストするテーブルで文書化されている double トークンのひとつを使用します。</para><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.Mask" /></remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.IsMaskValidForDataType(System.Type,System.String,System.IFormatProvider)">
            <summary>マスクがタイプに対して有効の場合Trueを返します。</summary>
            <param name="dataType"></param>
            <param name="mask"></param>
            <param name="formatProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.IsMaskValidForDataType(System.Type,Infragistics.Controls.Editors.SectionsCollection)">
            <summary>マスクがタイプに対して有効の場合Trueを返します。</summary>
            <param name="dataType"></param>
            <param name="parsedSections"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.GetText(Infragistics.Controls.Editors.InputMaskMode)">
            <summary>指定したマスク モードに基づきエディターの現在のテキストを返します。</summary>
            <param name="maskMode">リテラルとプロンプト文字をどのように扱うかを指定するモード。</param>
            <returns>それに適用される指定されたマスク モードでのエディターの現在のテキスト。</returns>
            <remarks>
            <para class="body"><see cref="P:Infragistics.Controls.Editors.ValueInput.Text" /> プロパティは、エディターの現在のテキストを取得するために使用することもできます。Text プロパティは、戻される値に適用される <see cref="P:Infragistics.Controls.Editors.XamMaskedInput.DataMode" /> プロパティによって指定されるマスク モードで値を返します。このメソッドによって、DataMode プロパティを設定する必要なく任意のモードを使用することができます。</para>
            <para class="body"><see cref="P:Infragistics.Controls.Editors.ValueInput.Value" />、<see cref="P:Infragistics.Controls.Editors.ValueInput.Text" /> および <see cref="P:Infragistics.Controls.Editors.TextInputBase.DisplayText" /> プロパティは、エディターの現在の値を取得するために使用することもできます。</para><seealso cref="P:Infragistics.Controls.Editors.ValueInput.Value" /><seealso cref="P:Infragistics.Controls.Editors.ValueInput.Text" /><seealso cref="P:Infragistics.Controls.Editors.TextInputBase.DisplayText" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.DataMode" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.DisplayMode" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.Mask" /></remarks>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamMaskedInput.InsertModeProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.XamMaskedInput.InsertMode" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamMaskedInput.MaskProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.XamMaskedInput.Mask" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.OnValueTypeResolvedChanged(System.Type)">
            <summary>オーバーライド。ValueTypeResolved プロパティが変更されたときに呼び出されます。</summary>
            <param name="newType">プロパティの新しい値。</param>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.ApplyMask(System.String,System.String,System.IFormatProvider,System.Char,System.Char,Infragistics.Controls.Editors.InputMaskMode)">
            <summary>指定したマスクを指定したテキストに適用して結果を返します。</summary>
            <param name="text">マスクを適用するテキスト。</param>
            <param name="mask">適用するマスク。</param>
            <param name="formatProvider">マスクでカルチャー固有の記号を提供します。これはすべてのマスクに適用可能というわけではありません - 記号のカルチャー固有のバージョンで表す必要がある文字（通貨記号のような）を持つマスクのみに適用できます。</param>
            <param name="promptCharacter">プロンプト文字 – 特定のマスク モードのみで適用可能です。</param>
            <param name="padCharacter">パッド文字 – 特定のマスク モードのみで適用可能です。</param>
            <param name="maskMode">マスク モードを指定します。</param>
            <returns>指定したマスクを指定したテキストに適用した結果。</returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.SyncValuePropertiesOverride(System.Windows.DependencyProperty,System.Object,System.Exception@)">
            <summary>オーバーライド。値およびテキスト プロパティを同期化するために呼び出されます。派生されたクラスに固有の値プロパティ (例えば、xamCheckEditor は IsChecked プロパティを持つこと) があれば、このメッソドをオーバーライドできます。Value、Text、および他のエディター固有のプロパティは同期化になる必要があります。デフォルトの実装は Value および Text プロパティを同期化されます。</summary>
            <param name="prop">変化したプロパティ。</param>
            <param name="newValue">プロパティの新しい値。</param>
            <param name="error">同期化が失敗した場合 (タイプ変換または新しい値の同期化での問題など)、これはエラー メッセージに設定されます。</param>
            <returns>新しい値が有効であるかどうかを示す値。False が返された場合、IsValueValid プロパティは False に設定されます。</returns>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamMaskedInput.DataModeProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.XamMaskedInput.DataMode" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.ShouldSerializeDataMode">
            <summary>DataMode プロパティがデフォルト以外の値に設定される場合、True を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.ResetDataMode">
            <summary>DataMode プロパティをデフォルトの状態にリセットします。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamMaskedInput.ClipModeProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.XamMaskedInput.ClipMode" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.ShouldSerializeClipMode">
            <summary>ClipMode プロパティがデフォルト以外の値に設定されている場合、True を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.ResetClipMode">
            <summary>ClipMode プロパティをデフォルトの状態にリセットします。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamMaskedInput.DisplayModeProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.XamMaskedInput.DisplayMode" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.ShouldSerializeDisplayMode">
            <summary>DisplayMode プロパティがデフォルト以外の値に設定されている場合、True を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.ResetDisplayMode">
            <summary>DisplayMode プロパティをデフォルトの状態にリセットします。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamMaskedInput.PadCharProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.XamMaskedInput.PadChar" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.ShouldSerializePadChar">
            <summary>PadChar プロパティがデフォルト以外の値に設定されている場合、True を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.ResetPadChar">
            <summary>PadChar プロパティをデフォルトの状態にリセットします。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamMaskedInput.PromptCharProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.XamMaskedInput.PromptChar" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.ShouldSerializePromptChar">
            <summary>PromptChar プロパティがデフォルト以外の値に設定されている場合、True を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.ResetPromptChar">
            <summary>PromptChar プロパティをデフォルトの状態にリセットします。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.SelectAll">
            <summary>コントロールのテキストを全て選択します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.Delete">
            <summary>可能であれば現在選択されているテキストを削除し、それに従って文字をシフトします。</summary>
            <remarks>
            <p class="body">このメソッドを起動すると、コントロールは現在選択しているテキストとシフト文字を削除しようとします。何も選択しなければ、現在の入力位置で文字を削除しようとします。</p> 
            <p class="body">操作が成功すれば、このメソッドは True を返します。選択した後の文字はシフトできないので、この操作が失敗する場合、メソッドは False を返します。</p>
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.Copy">
            <summary>現在選択されているテキストに対して Copy 編集操作を実行し、そのテキストをクリップボードに格納します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.Cut">
            <summary>現在選択されているテキストに対して Cut 編集操作を実行し、そのテキストをコントロールから削除してクリップボードに格納します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.Paste">
            <summary>Paste 編集操作を実行します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.ToggleInsertMode">
            <summary>挿入および上書きモードを切り替えます。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamMaskedInput.SectionTabNavigationProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.XamMaskedInput.SectionTabNavigation" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.IsValidPromptChar(System.Char)">
            <summary>指定された文字が <see cref="T:Infragistics.Controls.Editors.XamMaskedInput" /> のプロンプト文字として使用するために有効かどうかを示します。</summary>
            <param name="promptCharacter">評価する文字</param>
            <returns>文字がタブ、改行、または復帰の場合 False。そうでない場合は True を返します。</returns>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamMaskedInput.IsUndoEnabledProperty">
          <summary>
            元に戻す/やり直す操作が有効かどうかを取得または設定します。デフォルトでは、元に戻す/やり直す操作が有効です。
          </summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.GetDefaultMask(System.Type,System.IFormatProvider)">
            <summary>エディターのデフォルトマスクを取得します。オーナーがマスクを提供しない場合、このプロパティの値はデフォルトマスクとして使用されます。デフォルト値は null です。エディターが特定のタイプのみをサポートする場合、このプロパティをオーバーライドするだけです。たとえば、DateTimeEditorはDateのみをサポートします。編集の数字や文字列は、日時エディターには意味がありません。したがって、このようなエディターでは、そのエディターのデフォルトのマスクをオーバーライドして返します。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamMaskedInput.SelectAllBehaviorProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.XamMaskedInput.SelectAllBehavior" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.ShouldSerializeSelectAllBehavior">
            <summary>SelectAllBehavior プロパティがデフォルト以外の値に設定されている場合 True を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.ResetSelectAllBehavior">
            <summary>SelectAllBehavior プロパティをデフォルトの状態にリセットします。</summary>
        </member>
        <member name="F:Infragistics.Controls.Editors.XamMaskedInput.AutoFillDateProperty">
            <summary><see cref="P:Infragistics.Controls.Editors.XamMaskedInput.AutoFillDate" /> 依存プロパティを識別します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.ShouldSerializeAutoFillDate">
            <summary>AutoFillDate プロパティをデフォルト値以外に設定した場合 true を返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.ResetAutoFillDate">
            <summary>AutoFillDate プロパティをデフォルトの状態に戻します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.ExecuteCommand(Infragistics.Controls.Editors.Primitives.MaskedInputCommandId,System.Object,System.Windows.FrameworkElement)">
            <summary>指定された <see cref="T:Infragistics.Controls.Editors.Primitives.MaskedInputCommandId" /> 値に関連付けられているコマンドを実行します。</summary>
            <param name="command">実行するコマンド。</param>
            <param name="commandParameter">オプション パラメーター。</param>
            <param name="sourceElement">コマンドのソース。</param>
            <returns>コマンドを実行した場合は true、キャンセルした場合は false。</returns><seealso cref="T:Infragistics.Controls.Editors.Primitives.MaskedInputCommandId" /></member>
        <member name="M:Infragistics.Controls.Editors.XamMaskedInput.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
            <summary>ContextMenu が開こうとする時に呼び出されます</summary>
            <param name="e">イベント引数</param>
        </member>
        <member name="E:Infragistics.Controls.Editors.XamMaskedInput.InvalidChar">
            <summary>ユーザーがマスクの検証に合格しない文字を入力したときに発生します。</summary>
            <remarks>
            <para class="body">InvalidChar イベントを発生させます。このメソッドは通常、ユーザーが現在の入力位置にあるマスクに一致しない文字を入力したときに呼び出されます。</para><seealso cref="T:Infragistics.Controls.Editors.InvalidCharEventArgs" /></remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.DefaultValueType">
            <summary>エディターの規定値の型を返します。<see cref="T:System.ValueType" /> プロパティが設定されていない場合、<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueTypeResolved" /> によりこの型が返されます。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.TrimFractionalZeros">
            <summary>数値マスクの小数部から不要なゼロをトリミングするかどうかを指定します。デフォルト値は <b>False</b> です。</summary>
            <remarks><b>TrimFractionalZeros</b> プロパティは、数値マスクの小数部から不要なゼロをトリミングするかどうかを示すものです。特に指定しない限り、小数部は右端までゼロで埋められています。このプロパティを <i>true</i> に設定した場合、こうしたゼロの埋め込みがなくなるだけでなく、意味のないゼロがすべて削除されることになります。</remarks><seealso cref="F:Infragistics.Controls.Editors.XamMaskedInput.TrimFractionalZerosProperty" /></member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.SpinButtonDisplayMode">
            <summary>エディターの値を増減するスピン ボタンを表示するかどうかを指定します。デフォルト値は <b>Never</b> です。</summary>
            <remarks>
            <para class="body"><b>SpinButtonDisplayMode</b> は、スピン ボタンを表示するか、またいつ表示するかを指定します。ユーザーはスピン ボタンを使用してエディターの現在値を増減できます。デフォルトでは、現在のセクション (カレットがあるセクション) の値を増減できます。<see cref="P:Infragistics.Controls.Editors.XamMaskedInput.SpinIncrement" /> プロパティを指定すると、[スピン アップ]または[スピン ダウン] ボタンを押してエディターの値を増減ができます。</para>
            </remarks><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.SpinIncrement" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.SpinWrap" /></member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.SpinButtonStyle">
            <summary>RepeatButton クラスのインスタンスであるスピン ボタンの Style を設定するために使用します。デフォルト値は null です。</summary>
            <remarks>
            <para class="body">このプロパティのデフォルト値は null です。このプロパティを使用して、エディター内に表示される RepeatButton インスタンスであるスピン ボタンに使用する Style オブジェクトを指定できます。</para>
            </remarks><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.SpinButtonDisplayMode" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.SpinIncrement" /></member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.SpinButtonVisibilityResolved">
            <summary>スピン ボタンが表示されるかどうかを示す値を返します。</summary>
            <remarks>
            <para class="body"><b>SpinButtonVisibilityResolved</b> プロパティは、コントロールのスピン ボタンの表示状態を表す解決した値を返します。このプロパティはスピン ボタンの表示状態を制御するためにコントロール テンプレートで使用されます。</para>
            <para class="body">スピン ボタンを表示するかどうかを制御するために <see cref="P:Infragistics.Controls.Editors.XamMaskedInput.SpinButtonDisplayMode" /> プロパティを設定します。</para>
            </remarks><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.SpinButtonDisplayMode" /></member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.SpinIncrement">
            <summary>[スピン アップ] または [スピン ダウン] ボタンをクリックして、増減するエディターの値の量を指定できます。</summary>
            <remarks>
            <para class="body"><b>SpinIncrement</b> プロパティは [スピン アップ] または [スピン ダウン] ボタンをクリックして、増減するエディターの値の量を指定できます。</para>
            <para class="body">指定できる量はエディターを編集する値のタイプに基づいて異なります。エディターで数値を編集する場合、型がエディターの <see cref="T:System.ValueType" /> と一致するように変換される限り、スピン インクリメントは任意の数値タイプの数値 (5、10.5 など) に指定できます。マウスでスピン ボタンを一定時間押したときに、エディターで増加が加速した数値型に特別な「log」文字列値がサポートされます。</para>
            <para class="body">日時値を編集するときに期間を TimeSpan インスタンスまたは以下のトークンとして指定できます。<list type="bullet">
            
            <item>
            <term>&quot;1d&quot;</term>
            <description>日付は 1 日単位で増減できます。日数の整数値を指定できます。たとえば、&quot;10d&quot;は 10 日です。</description>
            </item>
            
            <item>
            <term>&quot;1m&quot;</term>
            <description>マスクのタイプに応じて、日付値または時間値を 1 か月または 1 分単位で増減します。マスクが日付マスクである場合、月の値は影響を受けません。マスクが時間マスクである場合、分の値は影響を受けません。月または日の増分/減分値には別の整数値 (たとえば、「2m」など) を指定できます。</description>
            </item>
            
            <item>
            <term>&quot;1y&quot;</term>
            <description>日付を 1 年単位で増減できます。年数の整数値を指定できます。たとえば、&quot;2y&quot;は 2 年です。</description>
            </item>
            
            <item>
            <term>「1H」</term>
            <description>時間を 1 時間単位で増減します。時間の増分/減分値には別の整数値 (たとえば、「2h」など) を指定できます。</description>
            </item>
            
            <item>
            <term>「1s」</term>
            <description>時間を 1 秒単位で増減します。時間の増分/減分値には別の整数値 (たとえば、「2s」など) を指定できます。</description>
            </item>
            
            </list>
            </para>
            </remarks><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.SpinWrap" /></member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.HasSpinIncrement">
            <summary>SpinIncrement が有効な値に設定されている場合、True を返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.SpinWrap">
            <summary>コントロールのスピンボタンの値を循環させるかどうかを示す値を取得または設定します。デフォルト値は <b>False</b> です。</summary>
            <remarks>
            <p class="body">True の場合、スピンボタンを使用したときに、値が最小値/最大値の範囲で循環します。値を増して値が既に最大までなった場合、この値は最小値に折り返します。値を減らす時も同じことが適用されます。</p>
            <p class="body">最小値および最大値を実際に指定するには、<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueConstraint" /> プロパティを使用します。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.Sections">
            <summary>コントロールで使用されるセクションのコレクションです。マスクがもう解析された場合のみ有効なコレクションを返します。</summary>
            <remarks>
            <para class="body">マスクが解析されると、結果は <see cref="T:Infragistics.Controls.Editors.SectionBase" /> 派生オブジェクトのコレクションになります。このプロパティはそのコレクションを返します。各 SectionBase オブジェクトは、<see cref="P:Infragistics.Controls.Editors.SectionBase.DisplayChars" /> プロパティから返される表示文字のコレクションがあります。XamMaskedInput も <see cref="P:Infragistics.Controls.Editors.XamMaskedInput.DisplayChars" /> プロパティからすべてのセクションの集合表示文字を含むコレクションも公開します。</para>
            <para class="body">たとえば、解析されたマスクの構造を問い合わせて確認したい場合や、セクションまたは表示文字ベースで現在のユーザー入力を問い合わせたり操作する場合にこのプロパティは役に立ちます。</para><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.DisplayChars" /></remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.DisplayChars">
            <summary>コントロールで使用されるDisplayCharのコレクションを返します。マスクがもう解析された場合のみ有効なコレクションを返します。</summary>
            <remarks>
            <para class="body">表示文字のコレクションを返します。マスクを解析すると、結果は各セクションがパート マスクに対応するセクションのコレクションになります。各セクションは順々に <see cref="T:Infragistics.Controls.Editors.DisplayCharBase" /> 派生オブジェクトのコレクションを持ち、それぞれはセクションに関連付けられたマスクの一部のプレースホルダ文字に対応します。DisplayChars は、すべてのセクションからの集合表示文字インスタンスを返します。</para>
            <para class="body">これと Sections プロパティの将来的な使用の詳細は、<see cref="P:Infragistics.Controls.Editors.XamMaskedInput.Sections" /> を参照してください。</para><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.Sections" /></remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.InsertMode">
            <summary>編集モード (挿入または上書き) を取得または設定します。</summary>
            <remarks>
            <p class="body">このプロパティを True に設定すると入力した文字が現在のカーソル位置に挿入され、以降の文字はシフトされます。False に設定した場合、既存の文字を含む挿入ポイントで入力すると、文字が置き換えられます。このプロパティの値は、Delete キーや Backspace キーを使用して文字を削除する方法にも影響します。挿入モードでは、削除された文字の後に続く文字はセクション内で １ つずつ左へシフトされます。</p><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.AllowShiftingAcrossSections" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.SelectAllBehavior" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.SectionTabNavigation" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.AutoFillDate" /></remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.Mask">
            <summary>MaskedEdit コントロールに関連付けられたマスクを返すか、設定します。</summary>
            <remarks>
            <p class="body">マスクが定義されると、プレースホルダーが <see cref="P:Infragistics.Controls.Editors.XamMaskedInput.PromptChar" /> プロパティによって定義されます。プレースホルダは、データ入力時に、マスクに指定された文字と同じタイプの文字を使用して置き換えることができます。ユーザーが無効な文字を入力すると、コントロールはその文字を受け入れず、<see cref="E:Infragistics.Controls.Editors.XamMaskedInput.InvalidChar" /> イベントを生成します。コントロールは数字やアルファベットを検証して識別できるだけでなく、正確な月や日時などの日付、時刻、数値タイプなどの特定のタイプのコンテンツの有効性を検証できます。</p>
            <p class="body">さまざまなマスク トークンの完全なリストと例については、<a href="xamInputs_Masks.html">「マスク」</a> トピックを参照してください。</p>
            <p class="note"><b>注：</b> XAML 内からマスクを指定したり、{} で囲まれた特別なトークンのひとつを使用する場合、{} をマスクの前に配置する必要があります。たとえば、{}{date} です。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.DataMode">
            <summary>データ マスキングが有効な場合に、コントロールの内容がデータソースによってどのように保存されるかを決める値を取得または設定します。</summary>
            <remarks>
            <p class="body">このプロパティは、コントロールのコンテンツがデータ ソースに解析される時（または <see cref="P:Infragistics.Controls.Editors.ValueInput.Text" /> プロパティを使用して取得される）、マスク リテラルとプロンプト文字がどのように処理されるかを決定するために使用されます。コントロールのテキストは、このプロパティの設定に基づいて次のいずれかになります。すなわち、プロンプト文字もリテラルも一切含まない（生データのみ）、データとリテラルのみを含む、データとプロンプト文字のみを含む、またはプロンプト文字もリテラルも含むテキスト全体のいずれかです。部分的マスク値の書式設定されたスペースは、リテラルをパディングと共に含むよう指定することで保持できます。この場合、データとリテラル文字は含まれますが、プロンプト文字はパッド文字 （通常はスペース） に置き換えられます。</p>
            <p class="body">通常は raw データがデータソースにコミットされ、データが表示されるときはデータ マスキングを使用して書式設定されます。ただしアプリケーションによっては、データと共にマスクのリテラルも保存する方が適切な場合があります。</p><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.DisplayMode" /> <seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.ClipMode" /></remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.ClipMode">
            <summary>データ マスキングが有効なときに、コントロールのコンテンツをどのようにクリップボードにコピーするのかを決める値を設定します。</summary>
            <remarks>
            <p class="body">このプロパティは、コントロールのコンテンツをクリップボードにコピーするときに、マスクのリテラルとプロンプト文字がどのように処理されるかを決定します。コントロールのテキストは、このプロパティの設定に基づいて次のいずれかになります。すなわち、プロンプト文字もリテラルも一切含まない（生データのみ）、データとリテラルのみを含む、データとプロンプト文字のみを含む、またはプロンプト文字もリテラルも含むテキスト全体のいずれかです。部分的マスク値の書式設定されたスペースは、リテラルをパディングと共に含むよう指定することで保持できます。この場合、データとリテラル文字は含まれますが、プロンプト文字はパッド文字 （通常はスペース） に置き換えられます。</p><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.DataMode" /> <seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.DisplayMode" /></remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.DisplayMode">
            <summary>コントロールが編集モードではなく、データ マスクが有効な時に、コントロールのコンテンツをどのようにクリップボードにコピーするのかを決める値を取得または設定します。</summary>
            <remarks>
            <p class="body">このプロパティは、コントロールが編集モードでないときにマスクのリテラルとプロンプト文字がどのように表示されるかを決定します。コントロールのテキストは、このプロパティの設定に基づいて次のいずれかになります。すなわち、プロンプト文字もリテラルも一切含まない（生データのみ）、データとリテラルのみを含む、データとプロンプト文字のみを含む、またはプロンプト文字もリテラルも含むテキスト全体のいずれかです。部分的マスク値の書式設定されたスペースは、リテラルをパディングと共に含むよう指定することで保持できます。この場合、データとリテラル文字は含まれますが、プロンプト文字はパッド文字 （通常はスペース） に置き換えられます。</p>
            <p class="body">通常、セルが編集モードでなくなると、ユーザーへの視覚的な合図として、プロンプト文字は非表示になります。ただしアプリケーションによっては、セルが編集モードでなくなっても、データと共にマスクのリテラルも表示する方が適切な場合があります。</p><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.DataMode" /> <seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.ClipMode" /></remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.PadChar">
            <summary>パッド文字として使用される文字を取得または設定します。デフォルトはスペース （&quot; &quot;） です。</summary>
            <remarks>
            <p class="body">パッド文字は、IncludeLiteralsWithPadding の DataMode を使用して XamMaskedInput コントロールからデータを取得するとき、プロンプト文字を置き換えるために使用される文字です。</p>
            <para class="body">たとえば、エディターのデータが以下である場合:<br />111-2_-____<br />そして DataMode が IncludeLiteralsWithPadding に設定されている場合、戻り値は &quot;111-2 -    &quot; になります。プロンプト文字は、パッド文字で置き換えられます。</para><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.PromptChar" /></remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.PromptChar">
            <summary>プロンプト文字を取得または設定します。デフォルトのプロンプト文字は、アンダースコア (_) です。</summary>
            <remarks>
            <para class="body">プロンプト文字は、ブランク表示文字の代わりに表示される文字です。各表示文字は、マスクによって要求される時にユーザーが文字を入力するマスクのプレスホルダーです。デフォルトのプロンプト文字は、アンダースコア (_) です。</para><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.PadChar" /></remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.SectionTabNavigation">
            <summary>Tab および Shift+Tab が押された時にセクションの間でタブを設定するかどうかを指定します。デフォルト値は <b>NextControl</b> です。</summary><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.AllowShiftingAcrossSections" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.InsertMode" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.SelectAllBehavior" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.AutoFillDate" /></member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.AllowShiftingAcrossSections">
            <summary>文字を削除するときに、セクションの境界を超えて文字を移動させるかどうか指定しま すデフォルト値は <b>True</b> です。</summary>
            <remarks>
            <para class="body">このプロパティは、1 つ以上の文字が現在のセクションから削除されると、以下のセクションで文字に発生することを制御されます。たとえば、&quot;###-###&quot; のような単純なマスクでは、&apos;-&apos; 文字で区切られた 2 つの入力セクションがあります。各入力セクションは、3 桁のプレースホルダーで構成されます。現在、マスク全体がデータで埋められているとします。最初のセクションで文字を削除すると、このプロパティは次の入力セクションの文字をこのセクションに流し込むかどうかをコントロールします。</para>
            <para class="body">上記の例を使用して、エディターが以下のデータを持つとします。<br />&quot;123-456&quot;<br />カレットが文字 &apos;2&apos; の前に置かれ、ユーザーが Delete キーを押すと、2 は削除され、3 が左にシフトして 2 が置かれていた位置に移動します。これは AllowShiftingAcrossSections 設定に関係なく行われます。ただし、この後に実行されることは、このプロパティの値によって異なります。<b>AllowShiftingAcrossSections が False に設定されると</b>、&apos;3&apos; のオリジナルの位置は空になり、その結果表示される文字は以下のようになります。<br />&quot;13_-456&quot;<br /><b>AllowShiftingAcrossSections が True に設定されると</b>、次の入力セクションからの文字は、&apos;2&apos; の位置に配置するために左にシフトすると、&apos;3&apos; によって空となった位置を満たすためにその結果表示される文字は以下のようになります。<br />&quot;134-56_&quot;<br />
            </para>
            <para class="body">このプロパティで使用する値は、ユーザーが持つマスクの種類によって異なります。操作性は、使用されているマスクに依存するプロパティの値によって大きく影響されます。たとえば、日付の各セクション（月、日、年）が論理的に異なる値である Date マスクでは、セクションをまたいで値をシフトしない場合があります。実際、日付、時間などの特定の内蔵マスクについては、このプロパティを True に設定することで、セクションをまたいでシフトを有効にできなくなります。これらのマスクでいかなる状況においても好ましいことではありません。ただし、カスタム マスクについては、セクションをまたいで文字をシフトするために特定のマスクに意味があるかどうかに基づく値に、このプロパティを設定する必要がある場合があります。</para><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.InsertMode" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.SelectAllBehavior" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.SectionTabNavigation" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.AutoFillDate" /></remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.SelectionStart">
            <summary>選択したテキストの開始場所を示します。テキストが選択されなければ、このプロパティはカレットの位置を示します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.SelectionLength">
            <summary>選択したテキストの長さを取得または設定します。何も選択されなければ、0 を返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.SelectedText">
            <summary>選択したテキストを取得または設定します。</summary>
            <remarks>
            <para class="body"><b>SelectedText</b> プロパティは、現在選択しているテキストを返します。何も選択されなければ、空の文字列を返します。</para>
            <para class="body">このプロパティの設定は、現在選択しているテキストをセット値で置き換えます。何も選択されずにプロパティが設定されると、セット値がカレットの位置に挿入されます。このプロパティの設定は、コントロールのコンテンツを変更します。</para>
            </remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.TextLength">
            <summary>編集モードの時のコントロールのテキストの合計の長さを示します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.IsUndoEnabled">
          <summary>
            元に戻す/やり直す操作が有効かどうかを指定します。デフォルト値は <b>True</b> です。
          </summary>
          <remarks>
            <b>IsUndoEnabled</b> プロパティは、元に戻す/やり直す操作が有効かどうかを指定します。デフォルトでは、元に戻す/やり直す操作が有効です。
          </remarks>
          <seealso cref="F:Infragistics.Controls.Editors.XamMaskedInput.IsUndoEnabledProperty"/>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.SelectAllBehavior">
            <summary>エディターが select-all-text 操作を実行するときに、入力した文字のみを選択するのか、すべての文字（プロンプト文字を含む）を選択するのかを指定します。プロパティのデフォルト値は <b>SelectAllCharacters</b> です。</summary>
            <remarks>
            <p class="body">このプロパティが <b>SelectEnteredCharacters</b> に設定されると、select-all-text 操作は、隣接するリテラルを含み、最初に入力した文字から最後に入力した文字までのテキストを選択します。</p>
            </remarks><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.AllowShiftingAcrossSections" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.InsertMode" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.SectionTabNavigation" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.AutoFillDate" /></member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.AutoFillDate">
            <summary>ユーザーがエディターを離れようとすると、空の日付コンポーネントを自動的に塗りつぶすかどうかを指定します。デフォルトは <b>None</b> です。</summary>
            <remarks>
            <para class="body">ユーザーが不完全な日付を入力すると、エディターは無効な入力と見なし、<see cref="P:Infragistics.Controls.Editors.ValueInput.InvalidValueBehavior" /> プロパティ設定に基づき適切な動作を行います。<b>AutoFillDate</b> によって、現在の日付を使用して自動的に満たされる部分的な日付入力を指定できます。</para>
            <para class="body">AutoFillDate を <b>Year</b> に設定される場合、ユーザーは月と日の両方を入力する必要があります。左の空欄が現在の年で満たされると年になります。AutoFillDate が <b>MonthAndYear</b> に設定されている場合、ユーザーは日を入力する必要があります。左の空欄が現在の月と年でそれぞれ満たされると月と年になります。</para><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.AllowShiftingAcrossSections" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.InsertMode" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.SelectAllBehavior" /><seealso cref="P:Infragistics.Controls.Editors.XamMaskedInput.SectionTabNavigation" /></remarks>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.DefaultValueToDisplayTextConverter">
            <summary>オーバーライド。値とテキスト間で変換するために使用されるデフォルト コンバーターを返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamMaskedInput.DefaultValueToTextConverter">
            <summary>オーバーライド。値とテキスト間で変換するために使用されるデフォルト コンバーターを返します。</summary>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamCurrencyInput.#ctor">
            <summary>新しい <see cref="T:Infragistics.Controls.Editors.XamCurrencyInput" /> を初期化します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamCurrencyInput.DefaultValueType">
            <summary>エディターの規定値の型を返します。<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /> プロパティが設定されていない場合、<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueTypeResolved" /> によりこの型が返されます。</summary>
        </member>
        <member name="T:Infragistics.AutomationPeers.XamMaskedInputAutomationPeer">
            <summary><see cref="T:Infragistics.Controls.Editors.XamMaskedInput" /> のタイプを UI オートメーションに公開します。</summary>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamMaskedInputAutomationPeer.#ctor(Infragistics.Controls.Editors.XamMaskedInput)">
            <summary><see cref="T:Infragistics.AutomationPeers.XamMaskedInputAutomationPeer" /> クラスの新しいインスタンスを作成します。</summary>
            <param name="owner">このピアの <see cref="T:Infragistics.Controls.Editors.XamMaskedInput" /> が作成されます。</param>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamMaskedInputAutomationPeer.GetAutomationControlTypeCore">
            <summary>オートメーション ピアによって表されるコントロールのタイプを示す列挙体を返します。</summary>
            <returns><b>Edit</b> 列挙体の値</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamMaskedInputAutomationPeer.GetClassNameCore">
            <summary><see cref="T:Infragistics.Controls.Editors.XamMaskedInput" /> の名前を返します。</summary>
            <returns>「XamMaskedInput」を含む文字列。</returns>
        </member>
        <member name="M:Infragistics.AutomationPeers.XamMaskedInputAutomationPeer.GetPatternCore(System.Windows.Automation.Peers.PatternInterface)">
            <summary>この <see cref="T:Infragistics.AutomationPeers.XamMaskedInputAutomationPeer" /> に関連する要素の指定された <see cref="T:System.Windows.Automation.Peers.PatternInterface" /> に関連するコントロールのパターンを返します。</summary>
            <param name="patternInterface">要求されるパターン</param>
        </member>
        <member name="T:Infragistics.Controls.Editors.XamNumericInput">
            <summary>マスクに基づく数値の編集を許可します。</summary>
            <remarks>
            <p class="body"><b>XamNumericInput</b> は数値データを表示および編集するために指定される派生された <see cref="T:Infragistics.Controls.Editors.XamMaskedInput" /> です。デフォルトで、<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /> プロパティは <see cref="T:System.Double" /> に設定されます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Controls.Editors.XamNumericInput.#ctor">
            <summary>新しい <see cref="T:Infragistics.Controls.Editors.XamNumericInput" /> を初期化します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.XamNumericInput.DefaultValueType">
            <summary>エディターの規定値の型を返します。<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueType" /> プロパティが設定されていない場合、<see cref="P:Infragistics.Controls.Editors.ValueInput.ValueTypeResolved" /> によりこの型が返されます。</summary>
        </member>
        <member name="T:Infragistics.Controls.Editors.Properties.Resources">
            <summary>ローカライズされた文字列の検索など、厳密に型指定されたリソース クラス。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Properties.Resources.ResourceManager">
            <summary>このクラスによって使用されるキャッシュされた ResourceManager インスタンスを返します。</summary>
        </member>
        <member name="P:Infragistics.Controls.Editors.Properties.Resources.Culture">
            <summary>この厳密に型指定されたリソース クラスを使用してすべてのリソースの検索の現在のスレッドの CurrentUICulture プロパティをオーバーライドします。</summary>
        </member>
    </members>
</doc>